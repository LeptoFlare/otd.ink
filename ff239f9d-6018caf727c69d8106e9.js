(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{t6oF:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var _firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("zIRd");\n\n(function () {\n  /*\n  Copyright The Closure Library Authors.\n  SPDX-License-Identifier: Apache-2.0\n  */\n  var k,\n      aa = "function" == typeof Object.defineProperties ? Object.defineProperty : function (a, b, c) {\n    a != Array.prototype && a != Object.prototype && (a[b] = c.value);\n  };\n\n  function ba(a) {\n    a = ["object" == typeof window && window, "object" == typeof self && self, "object" == typeof global && global, a];\n\n    for (var b = 0; b < a.length; ++b) {\n      var c = a[b];\n      if (c && c.Math == Math) return c;\n    }\n\n    return globalThis;\n  }\n\n  var ca = ba(this);\n\n  function da(a, b) {\n    if (b) {\n      var c = ca;\n      a = a.split(".");\n\n      for (var d = 0; d < a.length - 1; d++) {\n        var e = a[d];\n        e in c || (c[e] = {});\n        c = c[e];\n      }\n\n      a = a[a.length - 1];\n      d = c[a];\n      b = b(d);\n      b != d && null != b && aa(c, a, {\n        configurable: !0,\n        writable: !0,\n        value: b\n      });\n    }\n  }\n\n  function ea(a) {\n    var b = 0;\n    return function () {\n      return b < a.length ? {\n        done: !1,\n        value: a[b++]\n      } : {\n        done: !0\n      };\n    };\n  }\n\n  function fa(a) {\n    var b = "undefined" != typeof Symbol && Symbol.iterator && a[Symbol.iterator];\n    return b ? b.call(a) : {\n      next: ea(a)\n    };\n  }\n\n  da("Promise", function (a) {\n    function b(g) {\n      this.b = 0;\n      this.c = void 0;\n      this.a = [];\n      var h = this.f();\n\n      try {\n        g(h.resolve, h.reject);\n      } catch (n) {\n        h.reject(n);\n      }\n    }\n\n    function c() {\n      this.a = null;\n    }\n\n    function d(g) {\n      return g instanceof b ? g : new b(function (h) {\n        h(g);\n      });\n    }\n\n    if (a) return a;\n\n    c.prototype.b = function (g) {\n      if (null == this.a) {\n        this.a = [];\n        var h = this;\n        this.c(function () {\n          h.g();\n        });\n      }\n\n      this.a.push(g);\n    };\n\n    var e = ca.setTimeout;\n\n    c.prototype.c = function (g) {\n      e(g, 0);\n    };\n\n    c.prototype.g = function () {\n      for (; this.a && this.a.length;) {\n        var g = this.a;\n        this.a = [];\n\n        for (var h = 0; h < g.length; ++h) {\n          var n = g[h];\n          g[h] = null;\n\n          try {\n            n();\n          } catch (p) {\n            this.f(p);\n          }\n        }\n      }\n\n      this.a = null;\n    };\n\n    c.prototype.f = function (g) {\n      this.c(function () {\n        throw g;\n      });\n    };\n\n    b.prototype.f = function () {\n      function g(p) {\n        return function (v) {\n          n || (n = !0, p.call(h, v));\n        };\n      }\n\n      var h = this,\n          n = !1;\n      return {\n        resolve: g(this.v),\n        reject: g(this.g)\n      };\n    };\n\n    b.prototype.v = function (g) {\n      if (g === this) this.g(new TypeError("A Promise cannot resolve to itself"));else if (g instanceof b) this.o(g);else {\n        a: switch (typeof g) {\n          case "object":\n            var h = null != g;\n            break a;\n\n          case "function":\n            h = !0;\n            break a;\n\n          default:\n            h = !1;\n        }\n\n        h ? this.m(g) : this.h(g);\n      }\n    };\n\n    b.prototype.m = function (g) {\n      var h = void 0;\n\n      try {\n        h = g.then;\n      } catch (n) {\n        this.g(n);\n        return;\n      }\n\n      "function" == typeof h ? this.u(h, g) : this.h(g);\n    };\n\n    b.prototype.g = function (g) {\n      this.i(2, g);\n    };\n\n    b.prototype.h = function (g) {\n      this.i(1, g);\n    };\n\n    b.prototype.i = function (g, h) {\n      if (0 != this.b) throw Error("Cannot settle(" + g + ", " + h + "): Promise already settled in state" + this.b);\n      this.b = g;\n      this.c = h;\n      this.l();\n    };\n\n    b.prototype.l = function () {\n      if (null != this.a) {\n        for (var g = 0; g < this.a.length; ++g) {\n          f.b(this.a[g]);\n        }\n\n        this.a = null;\n      }\n    };\n\n    var f = new c();\n\n    b.prototype.o = function (g) {\n      var h = this.f();\n      g.Pa(h.resolve, h.reject);\n    };\n\n    b.prototype.u = function (g, h) {\n      var n = this.f();\n\n      try {\n        g.call(h, n.resolve, n.reject);\n      } catch (p) {\n        n.reject(p);\n      }\n    };\n\n    b.prototype.then = function (g, h) {\n      function n(A, Q) {\n        return "function" == typeof A ? function (xa) {\n          try {\n            p(A(xa));\n          } catch (Ad) {\n            v(Ad);\n          }\n        } : Q;\n      }\n\n      var p,\n          v,\n          B = new b(function (A, Q) {\n        p = A;\n        v = Q;\n      });\n      this.Pa(n(g, p), n(h, v));\n      return B;\n    };\n\n    b.prototype.catch = function (g) {\n      return this.then(void 0, g);\n    };\n\n    b.prototype.Pa = function (g, h) {\n      function n() {\n        switch (p.b) {\n          case 1:\n            g(p.c);\n            break;\n\n          case 2:\n            h(p.c);\n            break;\n\n          default:\n            throw Error("Unexpected state: " + p.b);\n        }\n      }\n\n      var p = this;\n      null == this.a ? f.b(n) : this.a.push(n);\n    };\n\n    b.resolve = d;\n\n    b.reject = function (g) {\n      return new b(function (h, n) {\n        n(g);\n      });\n    };\n\n    b.race = function (g) {\n      return new b(function (h, n) {\n        for (var p = fa(g), v = p.next(); !v.done; v = p.next()) {\n          d(v.value).Pa(h, n);\n        }\n      });\n    };\n\n    b.all = function (g) {\n      var h = fa(g),\n          n = h.next();\n      return n.done ? d([]) : new b(function (p, v) {\n        function B(xa) {\n          return function (Ad) {\n            A[xa] = Ad;\n            Q--;\n            0 == Q && p(A);\n          };\n        }\n\n        var A = [],\n            Q = 0;\n\n        do {\n          A.push(void 0), Q++, d(n.value).Pa(B(A.length - 1), v), n = h.next();\n        } while (!n.done);\n      });\n    };\n\n    return b;\n  });\n  var ha = ha || {},\n      l = this || self,\n      ia = /^[\\w+/_-]+[=]{0,2}$/,\n      ja = null;\n\n  function ka(a) {\n    return (a = a.querySelector && a.querySelector("script[nonce]")) && (a = a.nonce || a.getAttribute("nonce")) && ia.test(a) ? a : "";\n  }\n\n  function la() {}\n\n  function ma(a) {\n    var b = typeof a;\n    return "object" != b ? b : a ? Array.isArray(a) ? "array" : b : "null";\n  }\n\n  function na(a) {\n    var b = ma(a);\n    return "array" == b || "object" == b && "number" == typeof a.length;\n  }\n\n  function oa(a) {\n    return "function" == ma(a);\n  }\n\n  function m(a) {\n    var b = typeof a;\n    return "object" == b && null != a || "function" == b;\n  }\n\n  function pa(a) {\n    return Object.prototype.hasOwnProperty.call(a, qa) && a[qa] || (a[qa] = ++ra);\n  }\n\n  var qa = "closure_uid_" + (1E9 * Math.random() >>> 0),\n      ra = 0;\n\n  function sa(a, b, c) {\n    return a.call.apply(a.bind, arguments);\n  }\n\n  function ta(a, b, c) {\n    if (!a) throw Error();\n\n    if (2 < arguments.length) {\n      var d = Array.prototype.slice.call(arguments, 2);\n      return function () {\n        var e = Array.prototype.slice.call(arguments);\n        Array.prototype.unshift.apply(e, d);\n        return a.apply(b, e);\n      };\n    }\n\n    return function () {\n      return a.apply(b, arguments);\n    };\n  }\n\n  function q(a, b, c) {\n    Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? q = sa : q = ta;\n    return q.apply(null, arguments);\n  }\n\n  function ua(a, b) {\n    var c = Array.prototype.slice.call(arguments, 1);\n    return function () {\n      var d = c.slice();\n      d.push.apply(d, arguments);\n      return a.apply(this, d);\n    };\n  }\n\n  var va = Date.now;\n\n  function r(a, b) {\n    function c() {}\n\n    c.prototype = b.prototype;\n    a.$a = b.prototype;\n    a.prototype = new c();\n    a.prototype.constructor = a;\n  }\n\n  function wa(a) {\n    return a;\n  }\n\n  ;\n  /*\n  Copyright 2017 Google Inc.\n  Licensed under the Apache License, Version 2.0 (the "License");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an "AS IS" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  */\n\n  function t(a, b, c) {\n    this.code = ya + a;\n    this.message = b || za[a] || "";\n    this.a = c || null;\n  }\n\n  r(t, Error);\n\n  t.prototype.w = function () {\n    var a = {\n      code: this.code,\n      message: this.message\n    };\n    this.a && (a.serverResponse = this.a);\n    return a;\n  };\n\n  t.prototype.toJSON = function () {\n    return this.w();\n  };\n\n  function Aa(a) {\n    var b = a && a.code;\n    return b ? new t(b.substring(ya.length), a.message, a.serverResponse) : null;\n  }\n\n  var ya = "auth/",\n      za = {\n    "admin-restricted-operation": "This operation is restricted to administrators only.",\n    "argument-error": "",\n    "app-not-authorized": "This app, identified by the domain where it\'s hosted, is not authorized to use Firebase Authentication with the provided API key. Review your key configuration in the Google API console.",\n    "app-not-installed": "The requested mobile application corresponding to the identifier (Android package name or iOS bundle ID) provided is not installed on this device.",\n    "captcha-check-failed": "The reCAPTCHA response token provided is either invalid, expired, already used or the domain associated with it does not match the list of whitelisted domains.",\n    "code-expired": "The SMS code has expired. Please re-send the verification code to try again.",\n    "cordova-not-ready": "Cordova framework is not ready.",\n    "cors-unsupported": "This browser is not supported.",\n    "credential-already-in-use": "This credential is already associated with a different user account.",\n    "custom-token-mismatch": "The custom token corresponds to a different audience.",\n    "requires-recent-login": "This operation is sensitive and requires recent authentication. Log in again before retrying this request.",\n    "dynamic-link-not-activated": "Please activate Dynamic Links in the Firebase Console and agree to the terms and conditions.",\n    "email-change-needs-verification": "Multi-factor users must always have a verified email.",\n    "email-already-in-use": "The email address is already in use by another account.",\n    "expired-action-code": "The action code has expired. ",\n    "cancelled-popup-request": "This operation has been cancelled due to another conflicting popup being opened.",\n    "internal-error": "An internal error has occurred.",\n    "invalid-app-credential": "The phone verification request contains an invalid application verifier. The reCAPTCHA token response is either invalid or expired.",\n    "invalid-app-id": "The mobile app identifier is not registed for the current project.",\n    "invalid-user-token": "This user\'s credential isn\'t valid for this project. This can happen if the user\'s token has been tampered with, or if the user isn\'t for the project associated with this API key.",\n    "invalid-auth-event": "An internal error has occurred.",\n    "invalid-verification-code": "The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure use the verification code provided by the user.",\n    "invalid-continue-uri": "The continue URL provided in the request is invalid.",\n    "invalid-cordova-configuration": "The following Cordova plugins must be installed to enable OAuth sign-in: cordova-plugin-buildinfo, cordova-universal-links-plugin, cordova-plugin-browsertab, cordova-plugin-inappbrowser and cordova-plugin-customurlscheme.",\n    "invalid-custom-token": "The custom token format is incorrect. Please check the documentation.",\n    "invalid-dynamic-link-domain": "The provided dynamic link domain is not configured or authorized for the current project.",\n    "invalid-email": "The email address is badly formatted.",\n    "invalid-api-key": "Your API key is invalid, please check you have copied it correctly.",\n    "invalid-cert-hash": "The SHA-1 certificate hash provided is invalid.",\n    "invalid-credential": "The supplied auth credential is malformed or has expired.",\n    "invalid-message-payload": "The email template corresponding to this action contains invalid characters in its message. Please fix by going to the Auth email templates section in the Firebase Console.",\n    "invalid-multi-factor-session": "The request does not contain a valid proof of first factor successful sign-in.",\n    "invalid-oauth-provider": "EmailAuthProvider is not supported for this operation. This operation only supports OAuth providers.",\n    "invalid-oauth-client-id": "The OAuth client ID provided is either invalid or does not match the specified API key.",\n    "unauthorized-domain": "This domain is not authorized for OAuth operations for your Firebase project. Edit the list of authorized domains from the Firebase console.",\n    "invalid-action-code": "The action code is invalid. This can happen if the code is malformed, expired, or has already been used.",\n    "wrong-password": "The password is invalid or the user does not have a password.",\n    "invalid-persistence-type": "The specified persistence type is invalid. It can only be local, session or none.",\n    "invalid-phone-number": "The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format. E.164 phone numbers are written in the format [+][country code][subscriber number including area code].",\n    "invalid-provider-id": "The specified provider ID is invalid.",\n    "invalid-recipient-email": "The email corresponding to this action failed to send as the provided recipient email address is invalid.",\n    "invalid-sender": "The email template corresponding to this action contains an invalid sender email or name. Please fix by going to the Auth email templates section in the Firebase Console.",\n    "invalid-verification-id": "The verification ID used to create the phone auth credential is invalid.",\n    "invalid-tenant-id": "The Auth instance\'s tenant ID is invalid.",\n    "multi-factor-info-not-found": "The user does not have a second factor matching the identifier provided.",\n    "multi-factor-auth-required": "Proof of ownership of a second factor is required to complete sign-in.",\n    "missing-android-pkg-name": "An Android Package Name must be provided if the Android App is required to be installed.",\n    "auth-domain-config-required": "Be sure to include authDomain when calling firebase.initializeApp(), by following the instructions in the Firebase console.",\n    "missing-app-credential": "The phone verification request is missing an application verifier assertion. A reCAPTCHA response token needs to be provided.",\n    "missing-verification-code": "The phone auth credential was created with an empty SMS verification code.",\n    "missing-continue-uri": "A continue URL must be provided in the request.",\n    "missing-iframe-start": "An internal error has occurred.",\n    "missing-ios-bundle-id": "An iOS Bundle ID must be provided if an App Store ID is provided.",\n    "missing-multi-factor-info": "No second factor identifier is provided.",\n    "missing-multi-factor-session": "The request is missing proof of first factor successful sign-in.",\n    "missing-or-invalid-nonce": "The request does not contain a valid nonce. This can occur if the SHA-256 hash of the provided raw nonce does not match the hashed nonce in the ID token payload.",\n    "missing-phone-number": "To send verification codes, provide a phone number for the recipient.",\n    "missing-verification-id": "The phone auth credential was created with an empty verification ID.",\n    "app-deleted": "This instance of FirebaseApp has been deleted.",\n    "account-exists-with-different-credential": "An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this email address.",\n    "network-request-failed": "A network error (such as timeout, interrupted connection or unreachable host) has occurred.",\n    "no-auth-event": "An internal error has occurred.",\n    "no-such-provider": "User was not linked to an account with the given provider.",\n    "null-user": "A null user object was provided as the argument for an operation which requires a non-null user object.",\n    "operation-not-allowed": "The given sign-in provider is disabled for this Firebase project. Enable it in the Firebase console, under the sign-in method tab of the Auth section.",\n    "operation-not-supported-in-this-environment": \'This operation is not supported in the environment this application is running on. "location.protocol" must be http, https or chrome-extension and web storage must be enabled.\',\n    "popup-blocked": "Unable to establish a connection with the popup. It may have been blocked by the browser.",\n    "popup-closed-by-user": "The popup has been closed by the user before finalizing the operation.",\n    "provider-already-linked": "User can only be linked to one identity for the given provider.",\n    "quota-exceeded": "The project\'s quota for this operation has been exceeded.",\n    "redirect-cancelled-by-user": "The redirect operation has been cancelled by the user before finalizing.",\n    "redirect-operation-pending": "A redirect sign-in operation is already pending.",\n    "rejected-credential": "The request contains malformed or mismatching credentials.",\n    "second-factor-already-in-use": "The second factor is already enrolled on this account.",\n    "maximum-second-factor-count-exceeded": "The maximum allowed number of second factors on a user has been exceeded.",\n    "tenant-id-mismatch": "The provided tenant ID does not match the Auth instance\'s tenant ID",\n    timeout: "The operation has timed out.",\n    "user-token-expired": "The user\'s credential is no longer valid. The user must sign in again.",\n    "too-many-requests": "We have blocked all requests from this device due to unusual activity. Try again later.",\n    "unauthorized-continue-uri": "The domain of the continue URL is not whitelisted.  Please whitelist the domain in the Firebase console.",\n    "unsupported-first-factor": "Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.",\n    "unsupported-persistence-type": "The current environment does not support the specified persistence type.",\n    "unsupported-tenant-operation": "This operation is not supported in a multi-tenant context.",\n    "unverified-email": "The operation requires a verified email.",\n    "user-cancelled": "The user did not grant your application the permissions it requested.",\n    "user-not-found": "There is no user record corresponding to this identifier. The user may have been deleted.",\n    "user-disabled": "The user account has been disabled by an administrator.",\n    "user-mismatch": "The supplied credentials do not correspond to the previously signed in user.",\n    "user-signed-out": "",\n    "weak-password": "The password must be 6 characters long or more.",\n    "web-storage-unsupported": "This browser is not supported or 3rd party cookies and data may be disabled."\n  };\n  /*\n  Copyright 2017 Google LLC\n  Licensed under the Apache License, Version 2.0 (the "License");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an "AS IS" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  */\n\n  var Ba = {\n    kd: {\n      Sa: "https://staging-identitytoolkit.sandbox.googleapis.com/identitytoolkit/v3/relyingparty/",\n      Ya: "https://staging-securetoken.sandbox.googleapis.com/v1/token",\n      Va: "https://staging-identitytoolkit.sandbox.googleapis.com/v2/",\n      id: "b"\n    },\n    rd: {\n      Sa: "https://www.googleapis.com/identitytoolkit/v3/relyingparty/",\n      Ya: "https://securetoken.googleapis.com/v1/token",\n      Va: "https://identitytoolkit.googleapis.com/v2/",\n      id: "p"\n    },\n    td: {\n      Sa: "https://staging-www.sandbox.googleapis.com/identitytoolkit/v3/relyingparty/",\n      Ya: "https://staging-securetoken.sandbox.googleapis.com/v1/token",\n      Va: "https://staging-identitytoolkit.sandbox.googleapis.com/v2/",\n      id: "s"\n    },\n    ud: {\n      Sa: "https://www-googleapis-test.sandbox.google.com/identitytoolkit/v3/relyingparty/",\n      Ya: "https://test-securetoken.sandbox.googleapis.com/v1/token",\n      Va: "https://test-identitytoolkit.sandbox.googleapis.com/v2/",\n      id: "t"\n    }\n  };\n\n  function Ca(a) {\n    for (var b in Ba) {\n      if (Ba[b].id === a) return a = Ba[b], {\n        firebaseEndpoint: a.Sa,\n        secureTokenEndpoint: a.Ya,\n        identityPlatformEndpoint: a.Va\n      };\n    }\n\n    return null;\n  }\n\n  var Da;\n  Da = Ca("__EID__") ? "__EID__" : void 0;\n\n  function Ea(a) {\n    if (!a) return !1;\n\n    try {\n      return !!a.$goog_Thenable;\n    } catch (b) {\n      return !1;\n    }\n  }\n\n  ;\n\n  function u(a) {\n    if (Error.captureStackTrace) Error.captureStackTrace(this, u);else {\n      var b = Error().stack;\n      b && (this.stack = b);\n    }\n    a && (this.message = String(a));\n  }\n\n  r(u, Error);\n  u.prototype.name = "CustomError";\n\n  function Fa(a, b) {\n    a = a.split("%s");\n\n    for (var c = "", d = a.length - 1, e = 0; e < d; e++) {\n      c += a[e] + (e < b.length ? b[e] : "%s");\n    }\n\n    u.call(this, c + a[d]);\n  }\n\n  r(Fa, u);\n  Fa.prototype.name = "AssertionError";\n\n  function Ga(a, b) {\n    throw new Fa("Failure" + (a ? ": " + a : ""), Array.prototype.slice.call(arguments, 1));\n  }\n\n  ;\n\n  function Ha(a, b) {\n    this.c = a;\n    this.f = b;\n    this.b = 0;\n    this.a = null;\n  }\n\n  Ha.prototype.get = function () {\n    if (0 < this.b) {\n      this.b--;\n      var a = this.a;\n      this.a = a.next;\n      a.next = null;\n    } else a = this.c();\n\n    return a;\n  };\n\n  function Ia(a, b) {\n    a.f(b);\n    100 > a.b && (a.b++, b.next = a.a, a.a = b);\n  }\n\n  ;\n\n  function Ja() {\n    this.b = this.a = null;\n  }\n\n  var La = new Ha(function () {\n    return new Ka();\n  }, function (a) {\n    a.reset();\n  });\n\n  Ja.prototype.add = function (a, b) {\n    var c = La.get();\n    c.set(a, b);\n    this.b ? this.b.next = c : this.a = c;\n    this.b = c;\n  };\n\n  function Ma() {\n    var a = Na,\n        b = null;\n    a.a && (b = a.a, a.a = a.a.next, a.a || (a.b = null), b.next = null);\n    return b;\n  }\n\n  function Ka() {\n    this.next = this.b = this.a = null;\n  }\n\n  Ka.prototype.set = function (a, b) {\n    this.a = a;\n    this.b = b;\n    this.next = null;\n  };\n\n  Ka.prototype.reset = function () {\n    this.next = this.b = this.a = null;\n  };\n\n  var Oa = Array.prototype.indexOf ? function (a, b) {\n    return Array.prototype.indexOf.call(a, b, void 0);\n  } : function (a, b) {\n    if ("string" === typeof a) return "string" !== typeof b || 1 != b.length ? -1 : a.indexOf(b, 0);\n\n    for (var c = 0; c < a.length; c++) {\n      if (c in a && a[c] === b) return c;\n    }\n\n    return -1;\n  },\n      w = Array.prototype.forEach ? function (a, b, c) {\n    Array.prototype.forEach.call(a, b, c);\n  } : function (a, b, c) {\n    for (var d = a.length, e = "string" === typeof a ? a.split("") : a, f = 0; f < d; f++) {\n      f in e && b.call(c, e[f], f, a);\n    }\n  };\n\n  function Pa(a, b) {\n    for (var c = "string" === typeof a ? a.split("") : a, d = a.length - 1; 0 <= d; --d) {\n      d in c && b.call(void 0, c[d], d, a);\n    }\n  }\n\n  var Qa = Array.prototype.filter ? function (a, b) {\n    return Array.prototype.filter.call(a, b, void 0);\n  } : function (a, b) {\n    for (var c = a.length, d = [], e = 0, f = "string" === typeof a ? a.split("") : a, g = 0; g < c; g++) {\n      if (g in f) {\n        var h = f[g];\n        b.call(void 0, h, g, a) && (d[e++] = h);\n      }\n    }\n\n    return d;\n  },\n      Ra = Array.prototype.map ? function (a, b) {\n    return Array.prototype.map.call(a, b, void 0);\n  } : function (a, b) {\n    for (var c = a.length, d = Array(c), e = "string" === typeof a ? a.split("") : a, f = 0; f < c; f++) {\n      f in e && (d[f] = b.call(void 0, e[f], f, a));\n    }\n\n    return d;\n  },\n      Sa = Array.prototype.some ? function (a, b) {\n    return Array.prototype.some.call(a, b, void 0);\n  } : function (a, b) {\n    for (var c = a.length, d = "string" === typeof a ? a.split("") : a, e = 0; e < c; e++) {\n      if (e in d && b.call(void 0, d[e], e, a)) return !0;\n    }\n\n    return !1;\n  };\n\n  function Ta(a) {\n    a: {\n      var b = Ua;\n\n      for (var c = a.length, d = "string" === typeof a ? a.split("") : a, e = 0; e < c; e++) {\n        if (e in d && b.call(void 0, d[e], e, a)) {\n          b = e;\n          break a;\n        }\n      }\n\n      b = -1;\n    }\n\n    return 0 > b ? null : "string" === typeof a ? a.charAt(b) : a[b];\n  }\n\n  function Va(a, b) {\n    return 0 <= Oa(a, b);\n  }\n\n  function Wa(a, b) {\n    b = Oa(a, b);\n    var c;\n    (c = 0 <= b) && Array.prototype.splice.call(a, b, 1);\n    return c;\n  }\n\n  function Xa(a, b) {\n    var c = 0;\n    Pa(a, function (d, e) {\n      b.call(void 0, d, e, a) && 1 == Array.prototype.splice.call(a, e, 1).length && c++;\n    });\n  }\n\n  function Ya(a) {\n    return Array.prototype.concat.apply([], arguments);\n  }\n\n  function Za(a) {\n    var b = a.length;\n\n    if (0 < b) {\n      for (var c = Array(b), d = 0; d < b; d++) {\n        c[d] = a[d];\n      }\n\n      return c;\n    }\n\n    return [];\n  }\n\n  ;\n  var $a = String.prototype.trim ? function (a) {\n    return a.trim();\n  } : function (a) {\n    return /^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(a)[1];\n  },\n      ab = /&/g,\n      bb = /</g,\n      cb = />/g,\n      db = /"/g,\n      eb = /\'/g,\n      fb = /\\x00/g,\n      gb = /[\\x00&<>"\']/;\n\n  function x(a, b) {\n    return -1 != a.indexOf(b);\n  }\n\n  function hb(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }\n\n  ;\n  var ib;\n\n  a: {\n    var jb = l.navigator;\n\n    if (jb) {\n      var kb = jb.userAgent;\n\n      if (kb) {\n        ib = kb;\n        break a;\n      }\n    }\n\n    ib = "";\n  }\n\n  function y(a) {\n    return x(ib, a);\n  }\n\n  ;\n\n  function lb(a, b) {\n    for (var c in a) {\n      b.call(void 0, a[c], c, a);\n    }\n  }\n\n  function mb(a) {\n    for (var b in a) {\n      return !1;\n    }\n\n    return !0;\n  }\n\n  function nb(a) {\n    var b = {},\n        c;\n\n    for (c in a) {\n      b[c] = a[c];\n    }\n\n    return b;\n  }\n\n  var ob = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");\n\n  function z(a, b) {\n    for (var c, d, e = 1; e < arguments.length; e++) {\n      d = arguments[e];\n\n      for (c in d) {\n        a[c] = d[c];\n      }\n\n      for (var f = 0; f < ob.length; f++) {\n        c = ob[f], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);\n      }\n    }\n  }\n\n  ;\n\n  function pb(a, b) {\n    a: {\n      try {\n        var c = a && a.ownerDocument,\n            d = c && (c.defaultView || c.parentWindow);\n        d = d || l;\n\n        if (d.Element && d.Location) {\n          var e = d;\n          break a;\n        }\n      } catch (g) {}\n\n      e = null;\n    }\n\n    if (e && "undefined" != typeof e[b] && (!a || !(a instanceof e[b]) && (a instanceof e.Location || a instanceof e.Element))) {\n      if (m(a)) try {\n        var f = a.constructor.displayName || a.constructor.name || Object.prototype.toString.call(a);\n      } catch (g) {\n        f = "<object could not be stringified>";\n      } else f = void 0 === a ? "undefined" : null === a ? "null" : typeof a;\n      Ga("Argument is not a %s (or a non-Element, non-Location mock); got: %s", b, f);\n    }\n  }\n\n  ;\n\n  function qb(a, b) {\n    this.a = a === rb && b || "";\n    this.b = sb;\n  }\n\n  qb.prototype.sa = !0;\n\n  qb.prototype.ra = function () {\n    return this.a;\n  };\n\n  qb.prototype.toString = function () {\n    return "Const{" + this.a + "}";\n  };\n\n  function tb(a) {\n    if (a instanceof qb && a.constructor === qb && a.b === sb) return a.a;\n    Ga("expected object of type Const, got \'" + a + "\'");\n    return "type_error:Const";\n  }\n\n  var sb = {},\n      rb = {};\n  var ub;\n\n  function vb() {\n    if (void 0 === ub) {\n      var a = null,\n          b = l.trustedTypes;\n\n      if (b && b.createPolicy) {\n        try {\n          a = b.createPolicy("goog#html", {\n            createHTML: wa,\n            createScript: wa,\n            createScriptURL: wa\n          });\n        } catch (c) {\n          l.console && l.console.error(c.message);\n        }\n\n        ub = a;\n      } else ub = a;\n    }\n\n    return ub;\n  }\n\n  ;\n\n  function wb(a, b) {\n    this.a = b === xb ? a : "";\n  }\n\n  wb.prototype.sa = !0;\n\n  wb.prototype.ra = function () {\n    return this.a.toString();\n  };\n\n  wb.prototype.toString = function () {\n    return "TrustedResourceUrl{" + this.a + "}";\n  };\n\n  function yb(a) {\n    if (a instanceof wb && a.constructor === wb) return a.a;\n    Ga("expected object of type TrustedResourceUrl, got \'" + a + "\' of type " + ma(a));\n    return "type_error:TrustedResourceUrl";\n  }\n\n  function zb(a, b) {\n    var c = tb(a);\n    if (!Ab.test(c)) throw Error("Invalid TrustedResourceUrl format: " + c);\n    a = c.replace(Bb, function (d, e) {\n      if (!Object.prototype.hasOwnProperty.call(b, e)) throw Error(\'Found marker, "\' + e + \'", in format string, "\' + c + \'", but no valid label mapping found in args: \' + JSON.stringify(b));\n      d = b[e];\n      return d instanceof qb ? tb(d) : encodeURIComponent(String(d));\n    });\n    return Cb(a);\n  }\n\n  var Bb = /%{(\\w+)}/g,\n      Ab = /^((https:)?\\/\\/[0-9a-z.:[\\]-]+\\/|\\/[^/\\\\]|[^:/\\\\%]+\\/|[^:/\\\\%]*[?#]|about:blank#)/i,\n      xb = {};\n\n  function Cb(a) {\n    var b = vb();\n    a = b ? b.createScriptURL(a) : a;\n    return new wb(a, xb);\n  }\n\n  ;\n\n  function C(a, b) {\n    this.a = b === Db ? a : "";\n  }\n\n  C.prototype.sa = !0;\n\n  C.prototype.ra = function () {\n    return this.a.toString();\n  };\n\n  C.prototype.toString = function () {\n    return "SafeUrl{" + this.a + "}";\n  };\n\n  function Eb(a) {\n    if (a instanceof C && a.constructor === C) return a.a;\n    Ga("expected object of type SafeUrl, got \'" + a + "\' of type " + ma(a));\n    return "type_error:SafeUrl";\n  }\n\n  var Fb = /^(?:audio\\/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-matroska|x-wav|wav|webm)|font\\/\\w+|image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon)|text\\/csv|video\\/(?:mpeg|mp4|ogg|webm|quicktime|x-matroska))(?:;\\w+=(?:\\w+|"[\\w;,= ]+"))*$/i,\n      Gb = /^data:(.*);base64,[a-z0-9+\\/]+=*$/i,\n      Hb = /^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;\n\n  function Ib(a) {\n    if (a instanceof C) return a;\n    a = "object" == typeof a && a.sa ? a.ra() : String(a);\n    if (Hb.test(a)) a = new C(a, Db);else {\n      a = String(a);\n      a = a.replace(/(%0A|%0D)/g, "");\n      var b = a.match(Gb);\n      a = b && Fb.test(b[1]) ? new C(a, Db) : null;\n    }\n    return a;\n  }\n\n  function Jb(a) {\n    if (a instanceof C) return a;\n    a = "object" == typeof a && a.sa ? a.ra() : String(a);\n    Hb.test(a) || (a = "about:invalid#zClosurez");\n    return new C(a, Db);\n  }\n\n  var Db = {},\n      Kb = new C("about:invalid#zClosurez", Db);\n\n  function Lb(a, b, c) {\n    this.a = c === Mb ? a : "";\n  }\n\n  Lb.prototype.sa = !0;\n\n  Lb.prototype.ra = function () {\n    return this.a.toString();\n  };\n\n  Lb.prototype.toString = function () {\n    return "SafeHtml{" + this.a + "}";\n  };\n\n  function Nb(a) {\n    if (a instanceof Lb && a.constructor === Lb) return a.a;\n    Ga("expected object of type SafeHtml, got \'" + a + "\' of type " + ma(a));\n    return "type_error:SafeHtml";\n  }\n\n  var Mb = {};\n\n  function Ob(a, b) {\n    pb(a, "HTMLScriptElement");\n    a.src = yb(b);\n    (b = a.ownerDocument && a.ownerDocument.defaultView) && b != l ? b = ka(b.document) : (null === ja && (ja = ka(l.document)), b = ja);\n    b && a.setAttribute("nonce", b);\n  }\n\n  function Pb(a, b, c, d) {\n    a = a instanceof C ? a : Jb(a);\n    b = b || l;\n    c = c instanceof qb ? tb(c) : c || "";\n    return b.open(Eb(a), c, d, void 0);\n  }\n\n  ;\n\n  function Qb(a, b) {\n    for (var c = a.split("%s"), d = "", e = Array.prototype.slice.call(arguments, 1); e.length && 1 < c.length;) {\n      d += c.shift() + e.shift();\n    }\n\n    return d + c.join("%s");\n  }\n\n  function Rb(a) {\n    gb.test(a) && (-1 != a.indexOf("&") && (a = a.replace(ab, "&amp;")), -1 != a.indexOf("<") && (a = a.replace(bb, "&lt;")), -1 != a.indexOf(">") && (a = a.replace(cb, "&gt;")), -1 != a.indexOf(\'"\') && (a = a.replace(db, "&quot;")), -1 != a.indexOf("\'") && (a = a.replace(eb, "&#39;")), -1 != a.indexOf("\\x00") && (a = a.replace(fb, "&#0;")));\n    return a;\n  }\n\n  ;\n\n  function Sb(a) {\n    Sb[" "](a);\n    return a;\n  }\n\n  Sb[" "] = la;\n\n  function Tb(a, b) {\n    var c = Ub;\n    return Object.prototype.hasOwnProperty.call(c, a) ? c[a] : c[a] = b(a);\n  }\n\n  ;\n  var Vb = y("Opera"),\n      Wb = y("Trident") || y("MSIE"),\n      Xb = y("Edge"),\n      Yb = Xb || Wb,\n      Zb = y("Gecko") && !(x(ib.toLowerCase(), "webkit") && !y("Edge")) && !(y("Trident") || y("MSIE")) && !y("Edge"),\n      $b = x(ib.toLowerCase(), "webkit") && !y("Edge");\n\n  function ac() {\n    var a = l.document;\n    return a ? a.documentMode : void 0;\n  }\n\n  var bc;\n\n  a: {\n    var cc = "",\n        dc = function () {\n      var a = ib;\n      if (Zb) return /rv:([^\\);]+)(\\)|;)/.exec(a);\n      if (Xb) return /Edge\\/([\\d\\.]+)/.exec(a);\n      if (Wb) return /\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(a);\n      if ($b) return /WebKit\\/(\\S+)/.exec(a);\n      if (Vb) return /(?:Version)[ \\/]?(\\S+)/.exec(a);\n    }();\n\n    dc && (cc = dc ? dc[1] : "");\n\n    if (Wb) {\n      var ec = ac();\n\n      if (null != ec && ec > parseFloat(cc)) {\n        bc = String(ec);\n        break a;\n      }\n    }\n\n    bc = cc;\n  }\n\n  var Ub = {};\n\n  function fc(a) {\n    return Tb(a, function () {\n      for (var b = 0, c = $a(String(bc)).split("."), d = $a(String(a)).split("."), e = Math.max(c.length, d.length), f = 0; 0 == b && f < e; f++) {\n        var g = c[f] || "",\n            h = d[f] || "";\n\n        do {\n          g = /(\\d*)(\\D*)(.*)/.exec(g) || ["", "", "", ""];\n          h = /(\\d*)(\\D*)(.*)/.exec(h) || ["", "", "", ""];\n          if (0 == g[0].length && 0 == h[0].length) break;\n          b = hb(0 == g[1].length ? 0 : parseInt(g[1], 10), 0 == h[1].length ? 0 : parseInt(h[1], 10)) || hb(0 == g[2].length, 0 == h[2].length) || hb(g[2], h[2]);\n          g = g[3];\n          h = h[3];\n        } while (0 == b);\n      }\n\n      return 0 <= b;\n    });\n  }\n\n  var gc;\n\n  if (l.document && Wb) {\n    var hc = ac();\n    gc = hc ? hc : parseInt(bc, 10) || void 0;\n  } else gc = void 0;\n\n  var ic = gc;\n\n  try {\n    new self.OffscreenCanvas(0, 0).getContext("2d");\n  } catch (a) {}\n\n  var jc = !Wb || 9 <= Number(ic);\n\n  function kc(a) {\n    var b = document;\n    return "string" === typeof a ? b.getElementById(a) : a;\n  }\n\n  function lc(a, b) {\n    lb(b, function (c, d) {\n      c && "object" == typeof c && c.sa && (c = c.ra());\n      "style" == d ? a.style.cssText = c : "class" == d ? a.className = c : "for" == d ? a.htmlFor = c : mc.hasOwnProperty(d) ? a.setAttribute(mc[d], c) : 0 == d.lastIndexOf("aria-", 0) || 0 == d.lastIndexOf("data-", 0) ? a.setAttribute(d, c) : a[d] = c;\n    });\n  }\n\n  var mc = {\n    cellpadding: "cellPadding",\n    cellspacing: "cellSpacing",\n    colspan: "colSpan",\n    frameborder: "frameBorder",\n    height: "height",\n    maxlength: "maxLength",\n    nonce: "nonce",\n    role: "role",\n    rowspan: "rowSpan",\n    type: "type",\n    usemap: "useMap",\n    valign: "vAlign",\n    width: "width"\n  };\n\n  function nc(a, b, c) {\n    var d = arguments,\n        e = document,\n        f = String(d[0]),\n        g = d[1];\n\n    if (!jc && g && (g.name || g.type)) {\n      f = ["<", f];\n      g.name && f.push(\' name="\', Rb(g.name), \'"\');\n\n      if (g.type) {\n        f.push(\' type="\', Rb(g.type), \'"\');\n        var h = {};\n        z(h, g);\n        delete h.type;\n        g = h;\n      }\n\n      f.push(">");\n      f = f.join("");\n    }\n\n    f = oc(e, f);\n    g && ("string" === typeof g ? f.className = g : Array.isArray(g) ? f.className = g.join(" ") : lc(f, g));\n    2 < d.length && pc(e, f, d);\n    return f;\n  }\n\n  function pc(a, b, c) {\n    function d(h) {\n      h && b.appendChild("string" === typeof h ? a.createTextNode(h) : h);\n    }\n\n    for (var e = 2; e < c.length; e++) {\n      var f = c[e];\n      if (!na(f) || m(f) && 0 < f.nodeType) d(f);else {\n        a: {\n          if (f && "number" == typeof f.length) {\n            if (m(f)) {\n              var g = "function" == typeof f.item || "string" == typeof f.item;\n              break a;\n            }\n\n            if (oa(f)) {\n              g = "function" == typeof f.item;\n              break a;\n            }\n          }\n\n          g = !1;\n        }\n\n        w(g ? Za(f) : f, d);\n      }\n    }\n  }\n\n  function oc(a, b) {\n    b = String(b);\n    "application/xhtml+xml" === a.contentType && (b = b.toLowerCase());\n    return a.createElement(b);\n  }\n\n  ;\n\n  function qc(a) {\n    l.setTimeout(function () {\n      throw a;\n    }, 0);\n  }\n\n  var rc;\n\n  function sc() {\n    var a = l.MessageChannel;\n    "undefined" === typeof a && "undefined" !== typeof window && window.postMessage && window.addEventListener && !y("Presto") && (a = function a() {\n      var e = oc(document, "IFRAME");\n      e.style.display = "none";\n      document.documentElement.appendChild(e);\n      var f = e.contentWindow;\n      e = f.document;\n      e.open();\n      e.close();\n      var g = "callImmediate" + Math.random(),\n          h = "file:" == f.location.protocol ? "*" : f.location.protocol + "//" + f.location.host;\n      e = q(function (n) {\n        if (("*" == h || n.origin == h) && n.data == g) this.port1.onmessage();\n      }, this);\n      f.addEventListener("message", e, !1);\n      this.port1 = {};\n      this.port2 = {\n        postMessage: function postMessage() {\n          f.postMessage(g, h);\n        }\n      };\n    });\n\n    if ("undefined" !== typeof a && !y("Trident") && !y("MSIE")) {\n      var b = new a(),\n          c = {},\n          d = c;\n\n      b.port1.onmessage = function () {\n        if (void 0 !== c.next) {\n          c = c.next;\n          var e = c.Fb;\n          c.Fb = null;\n          e();\n        }\n      };\n\n      return function (e) {\n        d.next = {\n          Fb: e\n        };\n        d = d.next;\n        b.port2.postMessage(0);\n      };\n    }\n\n    return function (e) {\n      l.setTimeout(e, 0);\n    };\n  }\n\n  ;\n\n  function tc(a, b) {\n    uc || vc();\n    wc || (uc(), wc = !0);\n    Na.add(a, b);\n  }\n\n  var uc;\n\n  function vc() {\n    if (l.Promise && l.Promise.resolve) {\n      var a = l.Promise.resolve(void 0);\n\n      uc = function uc() {\n        a.then(xc);\n      };\n    } else uc = function uc() {\n      var b = xc;\n      !oa(l.setImmediate) || l.Window && l.Window.prototype && !y("Edge") && l.Window.prototype.setImmediate == l.setImmediate ? (rc || (rc = sc()), rc(b)) : l.setImmediate(b);\n    };\n  }\n\n  var wc = !1,\n      Na = new Ja();\n\n  function xc() {\n    for (var a; a = Ma();) {\n      try {\n        a.a.call(a.b);\n      } catch (b) {\n        qc(b);\n      }\n\n      Ia(La, a);\n    }\n\n    wc = !1;\n  }\n\n  ;\n\n  function D(a, b) {\n    this.a = yc;\n    this.i = void 0;\n    this.f = this.b = this.c = null;\n    this.g = this.h = !1;\n    if (a != la) try {\n      var c = this;\n      a.call(b, function (d) {\n        zc(c, Ac, d);\n      }, function (d) {\n        if (!(d instanceof Bc)) try {\n          if (d instanceof Error) throw d;\n          throw Error("Promise rejected.");\n        } catch (e) {}\n        zc(c, Cc, d);\n      });\n    } catch (d) {\n      zc(this, Cc, d);\n    }\n  }\n\n  var yc = 0,\n      Ac = 2,\n      Cc = 3;\n\n  function Dc() {\n    this.next = this.f = this.b = this.g = this.a = null;\n    this.c = !1;\n  }\n\n  Dc.prototype.reset = function () {\n    this.f = this.b = this.g = this.a = null;\n    this.c = !1;\n  };\n\n  var Ec = new Ha(function () {\n    return new Dc();\n  }, function (a) {\n    a.reset();\n  });\n\n  function Fc(a, b, c) {\n    var d = Ec.get();\n    d.g = a;\n    d.b = b;\n    d.f = c;\n    return d;\n  }\n\n  function E(a) {\n    if (a instanceof D) return a;\n    var b = new D(la);\n    zc(b, Ac, a);\n    return b;\n  }\n\n  function F(a) {\n    return new D(function (b, c) {\n      c(a);\n    });\n  }\n\n  function Gc(a, b, c) {\n    Hc(a, b, c, null) || tc(ua(b, a));\n  }\n\n  function Ic(a) {\n    return new D(function (b, c) {\n      var d = a.length,\n          e = [];\n      if (d) for (var f = function f(p, v) {\n        d--;\n        e[p] = v;\n        0 == d && b(e);\n      }, g = function g(p) {\n        c(p);\n      }, h = 0, n; h < a.length; h++) {\n        n = a[h], Gc(n, ua(f, h), g);\n      } else b(e);\n    });\n  }\n\n  function Jc(a) {\n    return new D(function (b) {\n      var c = a.length,\n          d = [];\n      if (c) for (var e = function e(h, n, p) {\n        c--;\n        d[h] = n ? {\n          Ob: !0,\n          value: p\n        } : {\n          Ob: !1,\n          reason: p\n        };\n        0 == c && b(d);\n      }, f = 0, g; f < a.length; f++) {\n        g = a[f], Gc(g, ua(e, f, !0), ua(e, f, !1));\n      } else b(d);\n    });\n  }\n\n  D.prototype.then = function (a, b, c) {\n    return Kc(this, oa(a) ? a : null, oa(b) ? b : null, c);\n  };\n\n  D.prototype.$goog_Thenable = !0;\n  k = D.prototype;\n\n  k.na = function (a, b) {\n    a = Fc(a, a, b);\n    a.c = !0;\n    Lc(this, a);\n    return this;\n  };\n\n  k.s = function (a, b) {\n    return Kc(this, null, a, b);\n  };\n\n  k.cancel = function (a) {\n    if (this.a == yc) {\n      var b = new Bc(a);\n      tc(function () {\n        Mc(this, b);\n      }, this);\n    }\n  };\n\n  function Mc(a, b) {\n    if (a.a == yc) if (a.c) {\n      var c = a.c;\n\n      if (c.b) {\n        for (var d = 0, e = null, f = null, g = c.b; g && (g.c || (d++, g.a == a && (e = g), !(e && 1 < d))); g = g.next) {\n          e || (f = g);\n        }\n\n        e && (c.a == yc && 1 == d ? Mc(c, b) : (f ? (d = f, d.next == c.f && (c.f = d), d.next = d.next.next) : Nc(c), Oc(c, e, Cc, b)));\n      }\n\n      a.c = null;\n    } else zc(a, Cc, b);\n  }\n\n  function Lc(a, b) {\n    a.b || a.a != Ac && a.a != Cc || Pc(a);\n    a.f ? a.f.next = b : a.b = b;\n    a.f = b;\n  }\n\n  function Kc(a, b, c, d) {\n    var e = Fc(null, null, null);\n    e.a = new D(function (f, g) {\n      e.g = b ? function (h) {\n        try {\n          var n = b.call(d, h);\n          f(n);\n        } catch (p) {\n          g(p);\n        }\n      } : f;\n      e.b = c ? function (h) {\n        try {\n          var n = c.call(d, h);\n          void 0 === n && h instanceof Bc ? g(h) : f(n);\n        } catch (p) {\n          g(p);\n        }\n      } : g;\n    });\n    e.a.c = a;\n    Lc(a, e);\n    return e.a;\n  }\n\n  k.Zc = function (a) {\n    this.a = yc;\n    zc(this, Ac, a);\n  };\n\n  k.$c = function (a) {\n    this.a = yc;\n    zc(this, Cc, a);\n  };\n\n  function zc(a, b, c) {\n    a.a == yc && (a === c && (b = Cc, c = new TypeError("Promise cannot resolve to itself")), a.a = 1, Hc(c, a.Zc, a.$c, a) || (a.i = c, a.a = b, a.c = null, Pc(a), b != Cc || c instanceof Bc || Qc(a, c)));\n  }\n\n  function Hc(a, b, c, d) {\n    if (a instanceof D) return Lc(a, Fc(b || la, c || null, d)), !0;\n    if (Ea(a)) return a.then(b, c, d), !0;\n    if (m(a)) try {\n      var e = a.then;\n      if (oa(e)) return Rc(a, e, b, c, d), !0;\n    } catch (f) {\n      return c.call(d, f), !0;\n    }\n    return !1;\n  }\n\n  function Rc(a, b, c, d, e) {\n    function f(n) {\n      h || (h = !0, d.call(e, n));\n    }\n\n    function g(n) {\n      h || (h = !0, c.call(e, n));\n    }\n\n    var h = !1;\n\n    try {\n      b.call(a, g, f);\n    } catch (n) {\n      f(n);\n    }\n  }\n\n  function Pc(a) {\n    a.h || (a.h = !0, tc(a.fc, a));\n  }\n\n  function Nc(a) {\n    var b = null;\n    a.b && (b = a.b, a.b = b.next, b.next = null);\n    a.b || (a.f = null);\n    return b;\n  }\n\n  k.fc = function () {\n    for (var a; a = Nc(this);) {\n      Oc(this, a, this.a, this.i);\n    }\n\n    this.h = !1;\n  };\n\n  function Oc(a, b, c, d) {\n    if (c == Cc && b.b && !b.c) for (; a && a.g; a = a.c) {\n      a.g = !1;\n    }\n    if (b.a) b.a.c = null, Sc(b, c, d);else try {\n      b.c ? b.g.call(b.f) : Sc(b, c, d);\n    } catch (e) {\n      Tc.call(null, e);\n    }\n    Ia(Ec, b);\n  }\n\n  function Sc(a, b, c) {\n    b == Ac ? a.g.call(a.f, c) : a.b && a.b.call(a.f, c);\n  }\n\n  function Qc(a, b) {\n    a.g = !0;\n    tc(function () {\n      a.g && Tc.call(null, b);\n    });\n  }\n\n  var Tc = qc;\n\n  function Bc(a) {\n    u.call(this, a);\n  }\n\n  r(Bc, u);\n  Bc.prototype.name = "cancel";\n\n  function Uc() {\n    0 != Vc && (Wc[pa(this)] = this);\n    this.xa = this.xa;\n    this.oa = this.oa;\n  }\n\n  var Vc = 0,\n      Wc = {};\n  Uc.prototype.xa = !1;\n\n  function Xc(a) {\n    if (!a.xa && (a.xa = !0, a.Da(), 0 != Vc)) {\n      var b = pa(a);\n      if (0 != Vc && a.oa && 0 < a.oa.length) throw Error(a + " did not empty its onDisposeCallbacks queue. This probably means it overrode dispose() or disposeInternal() without calling the superclass\' method.");\n      delete Wc[b];\n    }\n  }\n\n  Uc.prototype.Da = function () {\n    if (this.oa) for (; this.oa.length;) {\n      this.oa.shift()();\n    }\n  };\n\n  var Yc = Object.freeze || function (a) {\n    return a;\n  };\n\n  var Zc = !Wb || 9 <= Number(ic),\n      $c = Wb && !fc("9"),\n      ad = function () {\n    if (!l.addEventListener || !Object.defineProperty) return !1;\n    var a = !1,\n        b = Object.defineProperty({}, "passive", {\n      get: function get() {\n        a = !0;\n      }\n    });\n\n    try {\n      l.addEventListener("test", la, b), l.removeEventListener("test", la, b);\n    } catch (c) {}\n\n    return a;\n  }();\n\n  function G(a, b) {\n    this.type = a;\n    this.b = this.target = b;\n    this.defaultPrevented = !1;\n  }\n\n  G.prototype.preventDefault = function () {\n    this.defaultPrevented = !0;\n  };\n\n  function bd(a, b) {\n    G.call(this, a ? a.type : "");\n    this.relatedTarget = this.b = this.target = null;\n    this.button = this.screenY = this.screenX = this.clientY = this.clientX = 0;\n    this.key = "";\n    this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1;\n    this.pointerId = 0;\n    this.pointerType = "";\n    this.a = null;\n\n    if (a) {\n      var c = this.type = a.type,\n          d = a.changedTouches && a.changedTouches.length ? a.changedTouches[0] : null;\n      this.target = a.target || a.srcElement;\n      this.b = b;\n\n      if (b = a.relatedTarget) {\n        if (Zb) {\n          a: {\n            try {\n              Sb(b.nodeName);\n              var e = !0;\n              break a;\n            } catch (f) {}\n\n            e = !1;\n          }\n\n          e || (b = null);\n        }\n      } else "mouseover" == c ? b = a.fromElement : "mouseout" == c && (b = a.toElement);\n\n      this.relatedTarget = b;\n      d ? (this.clientX = void 0 !== d.clientX ? d.clientX : d.pageX, this.clientY = void 0 !== d.clientY ? d.clientY : d.pageY, this.screenX = d.screenX || 0, this.screenY = d.screenY || 0) : (this.clientX = void 0 !== a.clientX ? a.clientX : a.pageX, this.clientY = void 0 !== a.clientY ? a.clientY : a.pageY, this.screenX = a.screenX || 0, this.screenY = a.screenY || 0);\n      this.button = a.button;\n      this.key = a.key || "";\n      this.ctrlKey = a.ctrlKey;\n      this.altKey = a.altKey;\n      this.shiftKey = a.shiftKey;\n      this.metaKey = a.metaKey;\n      this.pointerId = a.pointerId || 0;\n      this.pointerType = "string" === typeof a.pointerType ? a.pointerType : cd[a.pointerType] || "";\n      this.a = a;\n      a.defaultPrevented && this.preventDefault();\n    }\n  }\n\n  r(bd, G);\n  var cd = Yc({\n    2: "touch",\n    3: "pen",\n    4: "mouse"\n  });\n\n  bd.prototype.preventDefault = function () {\n    bd.$a.preventDefault.call(this);\n    var a = this.a;\n    if (a.preventDefault) a.preventDefault();else if (a.returnValue = !1, $c) try {\n      if (a.ctrlKey || 112 <= a.keyCode && 123 >= a.keyCode) a.keyCode = -1;\n    } catch (b) {}\n  };\n\n  bd.prototype.g = function () {\n    return this.a;\n  };\n\n  var dd = "closure_listenable_" + (1E6 * Math.random() | 0),\n      ed = 0;\n\n  function fd(a, b, c, d, e) {\n    this.listener = a;\n    this.proxy = null;\n    this.src = b;\n    this.type = c;\n    this.capture = !!d;\n    this.Ua = e;\n    this.key = ++ed;\n    this.va = this.Oa = !1;\n  }\n\n  function gd(a) {\n    a.va = !0;\n    a.listener = null;\n    a.proxy = null;\n    a.src = null;\n    a.Ua = null;\n  }\n\n  ;\n\n  function hd(a) {\n    this.src = a;\n    this.a = {};\n    this.b = 0;\n  }\n\n  hd.prototype.add = function (a, b, c, d, e) {\n    var f = a.toString();\n    a = this.a[f];\n    a || (a = this.a[f] = [], this.b++);\n    var g = id(a, b, d, e);\n    -1 < g ? (b = a[g], c || (b.Oa = !1)) : (b = new fd(b, this.src, f, !!d, e), b.Oa = c, a.push(b));\n    return b;\n  };\n\n  function jd(a, b) {\n    var c = b.type;\n    c in a.a && Wa(a.a[c], b) && (gd(b), 0 == a.a[c].length && (delete a.a[c], a.b--));\n  }\n\n  function id(a, b, c, d) {\n    for (var e = 0; e < a.length; ++e) {\n      var f = a[e];\n      if (!f.va && f.listener == b && f.capture == !!c && f.Ua == d) return e;\n    }\n\n    return -1;\n  }\n\n  ;\n  var kd = "closure_lm_" + (1E6 * Math.random() | 0),\n      ld = {},\n      md = 0;\n\n  function nd(a, b, c, d, e) {\n    if (d && d.once) od(a, b, c, d, e);else if (Array.isArray(b)) for (var f = 0; f < b.length; f++) {\n      nd(a, b[f], c, d, e);\n    } else c = pd(c), a && a[dd] ? qd(a, b, c, m(d) ? !!d.capture : !!d, e) : rd(a, b, c, !1, d, e);\n  }\n\n  function rd(a, b, c, d, e, f) {\n    if (!b) throw Error("Invalid event type");\n    var g = m(e) ? !!e.capture : !!e,\n        h = sd(a);\n    h || (a[kd] = h = new hd(a));\n    c = h.add(b, c, d, g, f);\n\n    if (!c.proxy) {\n      d = td();\n      c.proxy = d;\n      d.src = a;\n      d.listener = c;\n      if (a.addEventListener) ad || (e = g), void 0 === e && (e = !1), a.addEventListener(b.toString(), d, e);else if (a.attachEvent) a.attachEvent(ud(b.toString()), d);else if (a.addListener && a.removeListener) a.addListener(d);else throw Error("addEventListener and attachEvent are unavailable.");\n      md++;\n    }\n  }\n\n  function td() {\n    var a = vd,\n        b = Zc ? function (c) {\n      return a.call(b.src, b.listener, c);\n    } : function (c) {\n      c = a.call(b.src, b.listener, c);\n      if (!c) return c;\n    };\n    return b;\n  }\n\n  function od(a, b, c, d, e) {\n    if (Array.isArray(b)) for (var f = 0; f < b.length; f++) {\n      od(a, b[f], c, d, e);\n    } else c = pd(c), a && a[dd] ? wd(a, b, c, m(d) ? !!d.capture : !!d, e) : rd(a, b, c, !0, d, e);\n  }\n\n  function H(a, b, c, d, e) {\n    if (Array.isArray(b)) for (var f = 0; f < b.length; f++) {\n      H(a, b[f], c, d, e);\n    } else (d = m(d) ? !!d.capture : !!d, c = pd(c), a && a[dd]) ? (a = a.v, b = String(b).toString(), b in a.a && (f = a.a[b], c = id(f, c, d, e), -1 < c && (gd(f[c]), Array.prototype.splice.call(f, c, 1), 0 == f.length && (delete a.a[b], a.b--)))) : a && (a = sd(a)) && (b = a.a[b.toString()], a = -1, b && (a = id(b, c, d, e)), (c = -1 < a ? b[a] : null) && xd(c));\n  }\n\n  function xd(a) {\n    if ("number" !== typeof a && a && !a.va) {\n      var b = a.src;\n      if (b && b[dd]) jd(b.v, a);else {\n        var c = a.type,\n            d = a.proxy;\n        b.removeEventListener ? b.removeEventListener(c, d, a.capture) : b.detachEvent ? b.detachEvent(ud(c), d) : b.addListener && b.removeListener && b.removeListener(d);\n        md--;\n        (c = sd(b)) ? (jd(c, a), 0 == c.b && (c.src = null, b[kd] = null)) : gd(a);\n      }\n    }\n  }\n\n  function ud(a) {\n    return a in ld ? ld[a] : ld[a] = "on" + a;\n  }\n\n  function yd(a, b, c, d) {\n    var e = !0;\n    if (a = sd(a)) if (b = a.a[b.toString()]) for (b = b.concat(), a = 0; a < b.length; a++) {\n      var f = b[a];\n      f && f.capture == c && !f.va && (f = zd(f, d), e = e && !1 !== f);\n    }\n    return e;\n  }\n\n  function zd(a, b) {\n    var c = a.listener,\n        d = a.Ua || a.src;\n    a.Oa && xd(a);\n    return c.call(d, b);\n  }\n\n  function vd(a, b) {\n    if (a.va) return !0;\n\n    if (!Zc) {\n      if (!b) a: {\n        b = ["window", "event"];\n\n        for (var c = l, d = 0; d < b.length; d++) {\n          if (c = c[b[d]], null == c) {\n            b = null;\n            break a;\n          }\n        }\n\n        b = c;\n      }\n      d = b;\n      b = new bd(d, this);\n      c = !0;\n\n      if (!(0 > d.keyCode || void 0 != d.returnValue)) {\n        a: {\n          var e = !1;\n          if (0 == d.keyCode) try {\n            d.keyCode = -1;\n            break a;\n          } catch (g) {\n            e = !0;\n          }\n          if (e || void 0 == d.returnValue) d.returnValue = !0;\n        }\n\n        d = [];\n\n        for (e = b.b; e; e = e.parentNode) {\n          d.push(e);\n        }\n\n        a = a.type;\n\n        for (e = d.length - 1; 0 <= e; e--) {\n          b.b = d[e];\n          var f = yd(d[e], a, !0, b);\n          c = c && f;\n        }\n\n        for (e = 0; e < d.length; e++) {\n          b.b = d[e], f = yd(d[e], a, !1, b), c = c && f;\n        }\n      }\n\n      return c;\n    }\n\n    return zd(a, new bd(b, this));\n  }\n\n  function sd(a) {\n    a = a[kd];\n    return a instanceof hd ? a : null;\n  }\n\n  var Bd = "__closure_events_fn_" + (1E9 * Math.random() >>> 0);\n\n  function pd(a) {\n    if (oa(a)) return a;\n    a[Bd] || (a[Bd] = function (b) {\n      return a.handleEvent(b);\n    });\n    return a[Bd];\n  }\n\n  ;\n\n  function I() {\n    Uc.call(this);\n    this.v = new hd(this);\n    this.$b = this;\n    this.fb = null;\n  }\n\n  r(I, Uc);\n  I.prototype[dd] = !0;\n\n  I.prototype.addEventListener = function (a, b, c, d) {\n    nd(this, a, b, c, d);\n  };\n\n  I.prototype.removeEventListener = function (a, b, c, d) {\n    H(this, a, b, c, d);\n  };\n\n  I.prototype.dispatchEvent = function (a) {\n    var b,\n        c = this.fb;\n    if (c) for (b = []; c; c = c.fb) {\n      b.push(c);\n    }\n    c = this.$b;\n    var d = a.type || a;\n    if ("string" === typeof a) a = new G(a, c);else if (a instanceof G) a.target = a.target || c;else {\n      var e = a;\n      a = new G(d, c);\n      z(a, e);\n    }\n    e = !0;\n    if (b) for (var f = b.length - 1; 0 <= f; f--) {\n      var g = a.b = b[f];\n      e = Cd(g, d, !0, a) && e;\n    }\n    g = a.b = c;\n    e = Cd(g, d, !0, a) && e;\n    e = Cd(g, d, !1, a) && e;\n    if (b) for (f = 0; f < b.length; f++) {\n      g = a.b = b[f], e = Cd(g, d, !1, a) && e;\n    }\n    return e;\n  };\n\n  I.prototype.Da = function () {\n    I.$a.Da.call(this);\n\n    if (this.v) {\n      var a = this.v,\n          b = 0,\n          c;\n\n      for (c in a.a) {\n        for (var d = a.a[c], e = 0; e < d.length; e++) {\n          ++b, gd(d[e]);\n        }\n\n        delete a.a[c];\n        a.b--;\n      }\n    }\n\n    this.fb = null;\n  };\n\n  function qd(a, b, c, d, e) {\n    a.v.add(String(b), c, !1, d, e);\n  }\n\n  function wd(a, b, c, d, e) {\n    a.v.add(String(b), c, !0, d, e);\n  }\n\n  function Cd(a, b, c, d) {\n    b = a.v.a[String(b)];\n    if (!b) return !0;\n    b = b.concat();\n\n    for (var e = !0, f = 0; f < b.length; ++f) {\n      var g = b[f];\n\n      if (g && !g.va && g.capture == c) {\n        var h = g.listener,\n            n = g.Ua || g.src;\n        g.Oa && jd(a.v, g);\n        e = !1 !== h.call(n, d) && e;\n      }\n    }\n\n    return e && !d.defaultPrevented;\n  }\n\n  ;\n\n  function Dd(a, b, c) {\n    if (oa(a)) c && (a = q(a, c));else if (a && "function" == typeof a.handleEvent) a = q(a.handleEvent, a);else throw Error("Invalid listener argument");\n    return 2147483647 < Number(b) ? -1 : l.setTimeout(a, b || 0);\n  }\n\n  function Ed(a) {\n    var b = null;\n    return new D(function (c, d) {\n      b = Dd(function () {\n        c(void 0);\n      }, a);\n      -1 == b && d(Error("Failed to schedule timer."));\n    }).s(function (c) {\n      l.clearTimeout(b);\n      throw c;\n    });\n  }\n\n  ;\n\n  function Fd(a) {\n    if (a.V && "function" == typeof a.V) return a.V();\n    if ("string" === typeof a) return a.split("");\n\n    if (na(a)) {\n      for (var b = [], c = a.length, d = 0; d < c; d++) {\n        b.push(a[d]);\n      }\n\n      return b;\n    }\n\n    b = [];\n    c = 0;\n\n    for (d in a) {\n      b[c++] = a[d];\n    }\n\n    return b;\n  }\n\n  function Gd(a) {\n    if (a.Y && "function" == typeof a.Y) return a.Y();\n\n    if (!a.V || "function" != typeof a.V) {\n      if (na(a) || "string" === typeof a) {\n        var b = [];\n        a = a.length;\n\n        for (var c = 0; c < a; c++) {\n          b.push(c);\n        }\n\n        return b;\n      }\n\n      b = [];\n      c = 0;\n\n      for (var d in a) {\n        b[c++] = d;\n      }\n\n      return b;\n    }\n  }\n\n  function Hd(a, b) {\n    if (a.forEach && "function" == typeof a.forEach) a.forEach(b, void 0);else if (na(a) || "string" === typeof a) w(a, b, void 0);else for (var c = Gd(a), d = Fd(a), e = d.length, f = 0; f < e; f++) {\n      b.call(void 0, d[f], c && c[f], a);\n    }\n  }\n\n  ;\n\n  function Id(a, b) {\n    this.b = {};\n    this.a = [];\n    this.c = 0;\n    var c = arguments.length;\n\n    if (1 < c) {\n      if (c % 2) throw Error("Uneven number of arguments");\n\n      for (var d = 0; d < c; d += 2) {\n        this.set(arguments[d], arguments[d + 1]);\n      }\n    } else if (a) if (a instanceof Id) for (c = a.Y(), d = 0; d < c.length; d++) {\n      this.set(c[d], a.get(c[d]));\n    } else for (d in a) {\n      this.set(d, a[d]);\n    }\n  }\n\n  k = Id.prototype;\n\n  k.V = function () {\n    Jd(this);\n\n    for (var a = [], b = 0; b < this.a.length; b++) {\n      a.push(this.b[this.a[b]]);\n    }\n\n    return a;\n  };\n\n  k.Y = function () {\n    Jd(this);\n    return this.a.concat();\n  };\n\n  k.clear = function () {\n    this.b = {};\n    this.c = this.a.length = 0;\n  };\n\n  function Jd(a) {\n    if (a.c != a.a.length) {\n      for (var b = 0, c = 0; b < a.a.length;) {\n        var d = a.a[b];\n        Kd(a.b, d) && (a.a[c++] = d);\n        b++;\n      }\n\n      a.a.length = c;\n    }\n\n    if (a.c != a.a.length) {\n      var e = {};\n\n      for (c = b = 0; b < a.a.length;) {\n        d = a.a[b], Kd(e, d) || (a.a[c++] = d, e[d] = 1), b++;\n      }\n\n      a.a.length = c;\n    }\n  }\n\n  k.get = function (a, b) {\n    return Kd(this.b, a) ? this.b[a] : b;\n  };\n\n  k.set = function (a, b) {\n    Kd(this.b, a) || (this.c++, this.a.push(a));\n    this.b[a] = b;\n  };\n\n  k.forEach = function (a, b) {\n    for (var c = this.Y(), d = 0; d < c.length; d++) {\n      var e = c[d],\n          f = this.get(e);\n      a.call(b, f, e, this);\n    }\n  };\n\n  function Kd(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  ;\n  var Ld = /^(?:([^:/?#.]+):)?(?:\\/\\/(?:([^\\\\/?#]*)@)?([^\\\\/?#]*?)(?::([0-9]+))?(?=[\\\\/?#]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#([\\s\\S]*))?$/;\n\n  function Md(a, b) {\n    if (a) {\n      a = a.split("&");\n\n      for (var c = 0; c < a.length; c++) {\n        var d = a[c].indexOf("="),\n            e = null;\n\n        if (0 <= d) {\n          var f = a[c].substring(0, d);\n          e = a[c].substring(d + 1);\n        } else f = a[c];\n\n        b(f, e ? decodeURIComponent(e.replace(/\\+/g, " ")) : "");\n      }\n    }\n  }\n\n  ;\n\n  function Nd(a, b) {\n    this.a = this.l = this.f = "";\n    this.g = null;\n    this.h = this.c = "";\n    this.i = !1;\n    var c;\n    a instanceof Nd ? (this.i = void 0 !== b ? b : a.i, Od(this, a.f), this.l = a.l, this.a = a.a, Pd(this, a.g), this.c = a.c, Qd(this, Rd(a.b)), this.h = a.h) : a && (c = String(a).match(Ld)) ? (this.i = !!b, Od(this, c[1] || "", !0), this.l = Sd(c[2] || ""), this.a = Sd(c[3] || "", !0), Pd(this, c[4]), this.c = Sd(c[5] || "", !0), Qd(this, c[6] || "", !0), this.h = Sd(c[7] || "")) : (this.i = !!b, this.b = new Td(null, this.i));\n  }\n\n  Nd.prototype.toString = function () {\n    var a = [],\n        b = this.f;\n    b && a.push(Ud(b, Vd, !0), ":");\n    var c = this.a;\n    if (c || "file" == b) a.push("//"), (b = this.l) && a.push(Ud(b, Vd, !0), "@"), a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g, "%$1")), c = this.g, null != c && a.push(":", String(c));\n    if (c = this.c) this.a && "/" != c.charAt(0) && a.push("/"), a.push(Ud(c, "/" == c.charAt(0) ? Wd : Xd, !0));\n    (c = this.b.toString()) && a.push("?", c);\n    (c = this.h) && a.push("#", Ud(c, Yd));\n    return a.join("");\n  };\n\n  Nd.prototype.resolve = function (a) {\n    var b = new Nd(this),\n        c = !!a.f;\n    c ? Od(b, a.f) : c = !!a.l;\n    c ? b.l = a.l : c = !!a.a;\n    c ? b.a = a.a : c = null != a.g;\n    var d = a.c;\n    if (c) Pd(b, a.g);else if (c = !!a.c) {\n      if ("/" != d.charAt(0)) if (this.a && !this.c) d = "/" + d;else {\n        var e = b.c.lastIndexOf("/");\n        -1 != e && (d = b.c.substr(0, e + 1) + d);\n      }\n      e = d;\n      if (".." == e || "." == e) d = "";else if (x(e, "./") || x(e, "/.")) {\n        d = 0 == e.lastIndexOf("/", 0);\n        e = e.split("/");\n\n        for (var f = [], g = 0; g < e.length;) {\n          var h = e[g++];\n          "." == h ? d && g == e.length && f.push("") : ".." == h ? ((1 < f.length || 1 == f.length && "" != f[0]) && f.pop(), d && g == e.length && f.push("")) : (f.push(h), d = !0);\n        }\n\n        d = f.join("/");\n      } else d = e;\n    }\n    c ? b.c = d : c = "" !== a.b.toString();\n    c ? Qd(b, Rd(a.b)) : c = !!a.h;\n    c && (b.h = a.h);\n    return b;\n  };\n\n  function Od(a, b, c) {\n    a.f = c ? Sd(b, !0) : b;\n    a.f && (a.f = a.f.replace(/:$/, ""));\n  }\n\n  function Pd(a, b) {\n    if (b) {\n      b = Number(b);\n      if (isNaN(b) || 0 > b) throw Error("Bad port number " + b);\n      a.g = b;\n    } else a.g = null;\n  }\n\n  function Qd(a, b, c) {\n    b instanceof Td ? (a.b = b, Zd(a.b, a.i)) : (c || (b = Ud(b, $d)), a.b = new Td(b, a.i));\n  }\n\n  function J(a, b, c) {\n    a.b.set(b, c);\n  }\n\n  function ae(a, b) {\n    return a.b.get(b);\n  }\n\n  function be(a) {\n    return a instanceof Nd ? new Nd(a) : new Nd(a, void 0);\n  }\n\n  function ce(a, b, c, d) {\n    var e = new Nd(null, void 0);\n    a && Od(e, a);\n    b && (e.a = b);\n    c && Pd(e, c);\n    d && (e.c = d);\n    return e;\n  }\n\n  function Sd(a, b) {\n    return a ? b ? decodeURI(a.replace(/%25/g, "%2525")) : decodeURIComponent(a) : "";\n  }\n\n  function Ud(a, b, c) {\n    return "string" === typeof a ? (a = encodeURI(a).replace(b, de), c && (a = a.replace(/%25([0-9a-fA-F]{2})/g, "%$1")), a) : null;\n  }\n\n  function de(a) {\n    a = a.charCodeAt(0);\n    return "%" + (a >> 4 & 15).toString(16) + (a & 15).toString(16);\n  }\n\n  var Vd = /[#\\/\\?@]/g,\n      Xd = /[#\\?:]/g,\n      Wd = /[#\\?]/g,\n      $d = /[#\\?@]/g,\n      Yd = /#/g;\n\n  function Td(a, b) {\n    this.b = this.a = null;\n    this.c = a || null;\n    this.f = !!b;\n  }\n\n  function ee(a) {\n    a.a || (a.a = new Id(), a.b = 0, a.c && Md(a.c, function (b, c) {\n      a.add(decodeURIComponent(b.replace(/\\+/g, " ")), c);\n    }));\n  }\n\n  function fe(a) {\n    var b = Gd(a);\n    if ("undefined" == typeof b) throw Error("Keys are undefined");\n    var c = new Td(null, void 0);\n    a = Fd(a);\n\n    for (var d = 0; d < b.length; d++) {\n      var e = b[d],\n          f = a[d];\n      Array.isArray(f) ? ge(c, e, f) : c.add(e, f);\n    }\n\n    return c;\n  }\n\n  k = Td.prototype;\n\n  k.add = function (a, b) {\n    ee(this);\n    this.c = null;\n    a = he(this, a);\n    var c = this.a.get(a);\n    c || this.a.set(a, c = []);\n    c.push(b);\n    this.b += 1;\n    return this;\n  };\n\n  function ie(a, b) {\n    ee(a);\n    b = he(a, b);\n    Kd(a.a.b, b) && (a.c = null, a.b -= a.a.get(b).length, a = a.a, Kd(a.b, b) && (delete a.b[b], a.c--, a.a.length > 2 * a.c && Jd(a)));\n  }\n\n  k.clear = function () {\n    this.a = this.c = null;\n    this.b = 0;\n  };\n\n  function je(a, b) {\n    ee(a);\n    b = he(a, b);\n    return Kd(a.a.b, b);\n  }\n\n  k.forEach = function (a, b) {\n    ee(this);\n    this.a.forEach(function (c, d) {\n      w(c, function (e) {\n        a.call(b, e, d, this);\n      }, this);\n    }, this);\n  };\n\n  k.Y = function () {\n    ee(this);\n\n    for (var a = this.a.V(), b = this.a.Y(), c = [], d = 0; d < b.length; d++) {\n      for (var e = a[d], f = 0; f < e.length; f++) {\n        c.push(b[d]);\n      }\n    }\n\n    return c;\n  };\n\n  k.V = function (a) {\n    ee(this);\n    var b = [];\n    if ("string" === typeof a) je(this, a) && (b = Ya(b, this.a.get(he(this, a))));else {\n      a = this.a.V();\n\n      for (var c = 0; c < a.length; c++) {\n        b = Ya(b, a[c]);\n      }\n    }\n    return b;\n  };\n\n  k.set = function (a, b) {\n    ee(this);\n    this.c = null;\n    a = he(this, a);\n    je(this, a) && (this.b -= this.a.get(a).length);\n    this.a.set(a, [b]);\n    this.b += 1;\n    return this;\n  };\n\n  k.get = function (a, b) {\n    if (!a) return b;\n    a = this.V(a);\n    return 0 < a.length ? String(a[0]) : b;\n  };\n\n  function ge(a, b, c) {\n    ie(a, b);\n    0 < c.length && (a.c = null, a.a.set(he(a, b), Za(c)), a.b += c.length);\n  }\n\n  k.toString = function () {\n    if (this.c) return this.c;\n    if (!this.a) return "";\n\n    for (var a = [], b = this.a.Y(), c = 0; c < b.length; c++) {\n      var d = b[c],\n          e = encodeURIComponent(String(d));\n      d = this.V(d);\n\n      for (var f = 0; f < d.length; f++) {\n        var g = e;\n        "" !== d[f] && (g += "=" + encodeURIComponent(String(d[f])));\n        a.push(g);\n      }\n    }\n\n    return this.c = a.join("&");\n  };\n\n  function Rd(a) {\n    var b = new Td();\n    b.c = a.c;\n    a.a && (b.a = new Id(a.a), b.b = a.b);\n    return b;\n  }\n\n  function he(a, b) {\n    b = String(b);\n    a.f && (b = b.toLowerCase());\n    return b;\n  }\n\n  function Zd(a, b) {\n    b && !a.f && (ee(a), a.c = null, a.a.forEach(function (c, d) {\n      var e = d.toLowerCase();\n      d != e && (ie(this, d), ge(this, e, c));\n    }, a));\n    a.f = b;\n  }\n\n  ;\n\n  function ke(a) {\n    var b = [];\n    le(new me(), a, b);\n    return b.join("");\n  }\n\n  function me() {}\n\n  function le(a, b, c) {\n    if (null == b) c.push("null");else {\n      if ("object" == typeof b) {\n        if (Array.isArray(b)) {\n          var d = b;\n          b = d.length;\n          c.push("[");\n\n          for (var e = "", f = 0; f < b; f++) {\n            c.push(e), le(a, d[f], c), e = ",";\n          }\n\n          c.push("]");\n          return;\n        }\n\n        if (b instanceof String || b instanceof Number || b instanceof Boolean) b = b.valueOf();else {\n          c.push("{");\n          e = "";\n\n          for (d in b) {\n            Object.prototype.hasOwnProperty.call(b, d) && (f = b[d], "function" != typeof f && (c.push(e), ne(d, c), c.push(":"), le(a, f, c), e = ","));\n          }\n\n          c.push("}");\n          return;\n        }\n      }\n\n      switch (typeof b) {\n        case "string":\n          ne(b, c);\n          break;\n\n        case "number":\n          c.push(isFinite(b) && !isNaN(b) ? String(b) : "null");\n          break;\n\n        case "boolean":\n          c.push(String(b));\n          break;\n\n        case "function":\n          c.push("null");\n          break;\n\n        default:\n          throw Error("Unknown type: " + typeof b);\n      }\n    }\n  }\n\n  var oe = {\n    \'"\': \'\\\\"\',\n    "\\\\": "\\\\\\\\",\n    "/": "\\\\/",\n    "\\b": "\\\\b",\n    "\\f": "\\\\f",\n    "\\n": "\\\\n",\n    "\\r": "\\\\r",\n    "\\t": "\\\\t",\n    "\\x0B": "\\\\u000b"\n  },\n      pe = /\\uffff/.test("\\uFFFF") ? /[\\\\"\\x00-\\x1f\\x7f-\\uffff]/g : /[\\\\"\\x00-\\x1f\\x7f-\\xff]/g;\n\n  function ne(a, b) {\n    b.push(\'"\', a.replace(pe, function (c) {\n      var d = oe[c];\n      d || (d = "\\\\u" + (c.charCodeAt(0) | 65536).toString(16).substr(1), oe[c] = d);\n      return d;\n    }), \'"\');\n  }\n\n  ;\n\n  function qe() {\n    var a = K();\n    return Wb && !!ic && 11 == ic || /Edge\\/\\d+/.test(a);\n  }\n\n  function re() {\n    return l.window && l.window.location.href || self && self.location && self.location.href || "";\n  }\n\n  function se(a, b) {\n    b = b || l.window;\n    var c = "about:blank";\n    a && (c = Eb(Ib(a) || Kb));\n    b.location.href = c;\n  }\n\n  function te(a, b) {\n    var c = [],\n        d;\n\n    for (d in a) {\n      d in b ? typeof a[d] != typeof b[d] ? c.push(d) : "object" == typeof a[d] && null != a[d] && null != b[d] ? 0 < te(a[d], b[d]).length && c.push(d) : a[d] !== b[d] && c.push(d) : c.push(d);\n    }\n\n    for (d in b) {\n      d in a || c.push(d);\n    }\n\n    return c;\n  }\n\n  function ue() {\n    var a = K();\n    a = ve(a) != we ? null : (a = a.match(/\\sChrome\\/(\\d+)/i)) && 2 == a.length ? parseInt(a[1], 10) : null;\n    return a && 30 > a ? !1 : !Wb || !ic || 9 < ic;\n  }\n\n  function xe(a) {\n    a = (a || K()).toLowerCase();\n    return a.match(/android/) || a.match(/webos/) || a.match(/iphone|ipad|ipod/) || a.match(/blackberry/) || a.match(/windows phone/) || a.match(/iemobile/) ? !0 : !1;\n  }\n\n  function ye(a) {\n    a = a || l.window;\n\n    try {\n      a.close();\n    } catch (b) {}\n  }\n\n  function ze(a, b, c) {\n    var d = Math.floor(1E9 * Math.random()).toString();\n    b = b || 500;\n    c = c || 600;\n    var e = (window.screen.availHeight - c) / 2,\n        f = (window.screen.availWidth - b) / 2;\n    b = {\n      width: b,\n      height: c,\n      top: 0 < e ? e : 0,\n      left: 0 < f ? f : 0,\n      location: !0,\n      resizable: !0,\n      statusbar: !0,\n      toolbar: !1\n    };\n    c = K().toLowerCase();\n    d && (b.target = d, x(c, "crios/") && (b.target = "_blank"));\n    ve(K()) == Ae && (a = a || "http://localhost", b.scrollbars = !0);\n    c = a || "";\n    (a = b) || (a = {});\n    d = window;\n    b = c instanceof C ? c : Ib("undefined" != typeof c.href ? c.href : String(c)) || Kb;\n    c = a.target || c.target;\n    e = [];\n\n    for (g in a) {\n      switch (g) {\n        case "width":\n        case "height":\n        case "top":\n        case "left":\n          e.push(g + "=" + a[g]);\n          break;\n\n        case "target":\n        case "noopener":\n        case "noreferrer":\n          break;\n\n        default:\n          e.push(g + "=" + (a[g] ? 1 : 0));\n      }\n    }\n\n    var g = e.join(",");\n    if ((y("iPhone") && !y("iPod") && !y("iPad") || y("iPad") || y("iPod")) && d.navigator && d.navigator.standalone && c && "_self" != c) g = oc(document, "A"), pb(g, "HTMLAnchorElement"), b = b instanceof C ? b : Jb(b), g.href = Eb(b), g.setAttribute("target", c), a.noreferrer && g.setAttribute("rel", "noreferrer"), a = document.createEvent("MouseEvent"), a.initMouseEvent("click", !0, !0, d, 1), g.dispatchEvent(a), g = {};else if (a.noreferrer) {\n      if (g = Pb("", d, c, g), a = Eb(b), g && (Yb && x(a, ";") && (a = "\'" + a.replace(/\'/g, "%27") + "\'"), g.opener = null, a = \'<meta name="referrer" content="no-referrer"><meta http-equiv="refresh" content="0; url=\' + Rb(a) + \'">\', a = (d = vb()) ? d.createHTML(a) : a, a = new Lb(a, null, Mb), d = g.document)) d.write(Nb(a)), d.close();\n    } else (g = Pb(b, d, c, g)) && a.noopener && (g.opener = null);\n    if (g) try {\n      g.focus();\n    } catch (h) {}\n    return g;\n  }\n\n  function Be(a) {\n    return new D(function (b) {\n      function c() {\n        Ed(2E3).then(function () {\n          if (!a || a.closed) b();else return c();\n        });\n      }\n\n      return c();\n    });\n  }\n\n  var Ce = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/,\n      De = /^[^@]+@[^@]+$/;\n\n  function Ee() {\n    var a = null;\n    return new D(function (b) {\n      "complete" == l.document.readyState ? b() : (a = function a() {\n        b();\n      }, od(window, "load", a));\n    }).s(function (b) {\n      H(window, "load", a);\n      throw b;\n    });\n  }\n\n  function Fe() {\n    return Ge(void 0) ? Ee().then(function () {\n      return new D(function (a, b) {\n        var c = l.document,\n            d = setTimeout(function () {\n          b(Error("Cordova framework is not ready."));\n        }, 1E3);\n        c.addEventListener("deviceready", function () {\n          clearTimeout(d);\n          a();\n        }, !1);\n      });\n    }) : F(Error("Cordova must run in an Android or iOS file scheme."));\n  }\n\n  function Ge(a) {\n    a = a || K();\n    return !("file:" !== He() && "ionic:" !== He() || !a.toLowerCase().match(/iphone|ipad|ipod|android/));\n  }\n\n  function Ie() {\n    var a = l.window;\n\n    try {\n      return !(!a || a == a.top);\n    } catch (b) {\n      return !1;\n    }\n  }\n\n  function Je() {\n    return "undefined" !== typeof l.WorkerGlobalScope && "function" === typeof l.importScripts;\n  }\n\n  function Ke() {\n    return _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].INTERNAL.hasOwnProperty("reactNative") ? "ReactNative" : _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].INTERNAL.hasOwnProperty("node") ? "Node" : Je() ? "Worker" : "Browser";\n  }\n\n  function Le() {\n    var a = Ke();\n    return "ReactNative" === a || "Node" === a;\n  }\n\n  function Me() {\n    for (var a = 50, b = []; 0 < a;) {\n      b.push("1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(Math.floor(62 * Math.random()))), a--;\n    }\n\n    return b.join("");\n  }\n\n  var Ae = "Firefox",\n      we = "Chrome";\n\n  function ve(a) {\n    var b = a.toLowerCase();\n    if (x(b, "opera/") || x(b, "opr/") || x(b, "opios/")) return "Opera";\n    if (x(b, "iemobile")) return "IEMobile";\n    if (x(b, "msie") || x(b, "trident/")) return "IE";\n    if (x(b, "edge/")) return "Edge";\n    if (x(b, "firefox/")) return Ae;\n    if (x(b, "silk/")) return "Silk";\n    if (x(b, "blackberry")) return "Blackberry";\n    if (x(b, "webos")) return "Webos";\n    if (!x(b, "safari/") || x(b, "chrome/") || x(b, "crios/") || x(b, "android")) {\n      if (!x(b, "chrome/") && !x(b, "crios/") || x(b, "edge/")) {\n        if (x(b, "android")) return "Android";\n        if ((a = a.match(/([a-zA-Z\\d\\.]+)\\/[a-zA-Z\\d\\.]*$/)) && 2 == a.length) return a[1];\n      } else return we;\n    } else return "Safari";\n    return "Other";\n  }\n\n  var Ne = {\n    ld: "FirebaseCore-web",\n    nd: "FirebaseUI-web"\n  };\n\n  function Oe(a, b) {\n    b = b || [];\n    var c = [],\n        d = {},\n        e;\n\n    for (e in Ne) {\n      d[Ne[e]] = !0;\n    }\n\n    for (e = 0; e < b.length; e++) {\n      "undefined" !== typeof d[b[e]] && (delete d[b[e]], c.push(b[e]));\n    }\n\n    c.sort();\n    b = c;\n    b.length || (b = ["FirebaseCore-web"]);\n    c = Ke();\n    "Browser" === c ? (d = K(), c = ve(d)) : "Worker" === c && (d = K(), c = ve(d) + "-" + c);\n    return c + "/JsCore/" + a + "/" + b.join(",");\n  }\n\n  function K() {\n    return l.navigator && l.navigator.userAgent || "";\n  }\n\n  function L(a, b) {\n    a = a.split(".");\n    b = b || l;\n\n    for (var c = 0; c < a.length && "object" == typeof b && null != b; c++) {\n      b = b[a[c]];\n    }\n\n    c != a.length && (b = void 0);\n    return b;\n  }\n\n  function Pe() {\n    try {\n      var a = l.localStorage,\n          b = Qe();\n      if (a) return a.setItem(b, "1"), a.removeItem(b), qe() ? !!l.indexedDB : !0;\n    } catch (c) {\n      return Je() && !!l.indexedDB;\n    }\n\n    return !1;\n  }\n\n  function Re() {\n    return (Se() || "chrome-extension:" === He() || Ge()) && !Le() && Pe() && !Je();\n  }\n\n  function Se() {\n    return "http:" === He() || "https:" === He();\n  }\n\n  function He() {\n    return l.location && l.location.protocol || null;\n  }\n\n  function Te(a) {\n    a = a || K();\n    return xe(a) || ve(a) == Ae ? !1 : !0;\n  }\n\n  function Ue(a) {\n    return "undefined" === typeof a ? null : ke(a);\n  }\n\n  function Ve(a) {\n    var b = {},\n        c;\n\n    for (c in a) {\n      a.hasOwnProperty(c) && null !== a[c] && void 0 !== a[c] && (b[c] = a[c]);\n    }\n\n    return b;\n  }\n\n  function We(a) {\n    if (null !== a) return JSON.parse(a);\n  }\n\n  function Qe(a) {\n    return a ? a : Math.floor(1E9 * Math.random()).toString();\n  }\n\n  function Xe(a) {\n    a = a || K();\n    return "Safari" == ve(a) || a.toLowerCase().match(/iphone|ipad|ipod/) ? !1 : !0;\n  }\n\n  function Ye() {\n    var a = l.___jsl;\n    if (a && a.H) for (var b in a.H) {\n      if (a.H[b].r = a.H[b].r || [], a.H[b].L = a.H[b].L || [], a.H[b].r = a.H[b].L.concat(), a.CP) for (var c = 0; c < a.CP.length; c++) {\n        a.CP[c] = null;\n      }\n    }\n  }\n\n  function Ze(a, b) {\n    if (a > b) throw Error("Short delay should be less than long delay!");\n    this.a = a;\n    this.c = b;\n    a = K();\n    b = Ke();\n    this.b = xe(a) || "ReactNative" === b;\n  }\n\n  Ze.prototype.get = function () {\n    var a = l.navigator;\n    return (a && "boolean" === typeof a.onLine && (Se() || "chrome-extension:" === He() || "undefined" !== typeof a.connection) ? a.onLine : 1) ? this.b ? this.c : this.a : Math.min(5E3, this.a);\n  };\n\n  function $e() {\n    var a = l.document;\n    return a && "undefined" !== typeof a.visibilityState ? "visible" == a.visibilityState : !0;\n  }\n\n  function af() {\n    var a = l.document,\n        _b = null;\n    return $e() || !a ? E() : new D(function (c) {\n      _b = function b() {\n        $e() && (a.removeEventListener("visibilitychange", _b, !1), c());\n      };\n\n      a.addEventListener("visibilitychange", _b, !1);\n    }).s(function (c) {\n      a.removeEventListener("visibilitychange", _b, !1);\n      throw c;\n    });\n  }\n\n  function bf(a) {\n    "undefined" !== typeof console && "function" === typeof console.warn && console.warn(a);\n  }\n\n  function cf(a) {\n    try {\n      var b = new Date(parseInt(a, 10));\n      if (!isNaN(b.getTime()) && !/[^0-9]/.test(a)) return b.toUTCString();\n    } catch (c) {}\n\n    return null;\n  }\n\n  function df() {\n    return !(!L("fireauth.oauthhelper", l) && !L("fireauth.iframe", l));\n  }\n\n  function ef() {\n    var a = l.navigator;\n    return a && a.serviceWorker && a.serviceWorker.controller || null;\n  }\n\n  function ff() {\n    var a = l.navigator;\n    return a && a.serviceWorker ? E().then(function () {\n      return a.serviceWorker.ready;\n    }).then(function (b) {\n      return b.active || null;\n    }).s(function () {\n      return null;\n    }) : E(null);\n  }\n\n  ;\n  var gf = {};\n\n  function hf(a) {\n    gf[a] || (gf[a] = !0, bf(a));\n  }\n\n  ;\n  var jf;\n\n  try {\n    var kf = {};\n    Object.defineProperty(kf, "abcd", {\n      configurable: !0,\n      enumerable: !0,\n      value: 1\n    });\n    Object.defineProperty(kf, "abcd", {\n      configurable: !0,\n      enumerable: !0,\n      value: 2\n    });\n    jf = 2 == kf.abcd;\n  } catch (a) {\n    jf = !1;\n  }\n\n  function M(a, b, c) {\n    jf ? Object.defineProperty(a, b, {\n      configurable: !0,\n      enumerable: !0,\n      value: c\n    }) : a[b] = c;\n  }\n\n  function N(a, b) {\n    if (b) for (var c in b) {\n      b.hasOwnProperty(c) && M(a, c, b[c]);\n    }\n  }\n\n  function lf(a) {\n    var b = {};\n    N(b, a);\n    return b;\n  }\n\n  function mf(a) {\n    var b = {},\n        c;\n\n    for (c in a) {\n      a.hasOwnProperty(c) && (b[c] = a[c]);\n    }\n\n    return b;\n  }\n\n  function nf(a, b) {\n    if (!b || !b.length) return !0;\n    if (!a) return !1;\n\n    for (var c = 0; c < b.length; c++) {\n      var d = a[b[c]];\n      if (void 0 === d || null === d || "" === d) return !1;\n    }\n\n    return !0;\n  }\n\n  function of(a) {\n    var b = a;\n\n    if ("object" == typeof a && null != a) {\n      b = "length" in a ? [] : {};\n\n      for (var c in a) {\n        M(b, c, of(a[c]));\n      }\n    }\n\n    return b;\n  }\n\n  ;\n  /*\n  Copyright 2019 Google Inc.\n  Licensed under the Apache License, Version 2.0 (the "License");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an "AS IS" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  */\n\n  function pf(a) {\n    var b = a && (a[qf] ? "phone" : null);\n\n    if (b && a && a[rf]) {\n      M(this, "uid", a[rf]);\n      M(this, "displayName", a[sf] || null);\n      var c = null;\n      a[tf] && (c = new Date(a[tf]).toUTCString());\n      M(this, "enrollmentTime", c);\n      M(this, "factorId", b);\n    } else throw new t("internal-error", "Internal assert: invalid MultiFactorInfo object");\n  }\n\n  pf.prototype.w = function () {\n    return {\n      uid: this.uid,\n      displayName: this.displayName,\n      factorId: this.factorId,\n      enrollmentTime: this.enrollmentTime\n    };\n  };\n\n  function uf(a) {\n    try {\n      var b = new vf(a);\n    } catch (c) {\n      b = null;\n    }\n\n    return b;\n  }\n\n  var sf = "displayName",\n      tf = "enrolledAt",\n      rf = "mfaEnrollmentId",\n      qf = "phoneInfo";\n\n  function vf(a) {\n    pf.call(this, a);\n    M(this, "phoneNumber", a[qf]);\n  }\n\n  r(vf, pf);\n\n  vf.prototype.w = function () {\n    var a = vf.$a.w.call(this);\n    a.phoneNumber = this.phoneNumber;\n    return a;\n  };\n\n  function wf(a) {\n    var b = {},\n        c = a[xf],\n        d = a[yf],\n        e = a[zf];\n    a = uf(a[Af]);\n    if (!e || e != Bf && e != Cf && !c || e == Cf && !d || e == Df && !a) throw Error("Invalid checkActionCode response!");\n    e == Cf ? (b[Ef] = c || null, b[Ff] = c || null, b[Gf] = d) : (b[Ef] = d || null, b[Ff] = d || null, b[Gf] = c || null);\n    b[Hf] = a || null;\n    M(this, If, e);\n    M(this, Jf, of(b));\n  }\n\n  var Df = "REVERT_SECOND_FACTOR_ADDITION",\n      Bf = "EMAIL_SIGNIN",\n      Cf = "VERIFY_AND_CHANGE_EMAIL",\n      xf = "email",\n      Af = "mfaInfo",\n      yf = "newEmail",\n      zf = "requestType",\n      Gf = "email",\n      Ef = "fromEmail",\n      Hf = "multiFactorInfo",\n      Ff = "previousEmail",\n      Jf = "data",\n      If = "operation";\n\n  function Kf(a) {\n    a = be(a);\n    var b = ae(a, Lf) || null,\n        c = ae(a, Mf) || null,\n        d = ae(a, Nf) || null;\n    d = d ? Of[d] || null : null;\n    if (!b || !c || !d) throw new t("argument-error", Lf + ", " + Mf + "and " + Nf + " are required in a valid action code URL.");\n    N(this, {\n      apiKey: b,\n      operation: d,\n      code: c,\n      continueUrl: ae(a, Pf) || null,\n      languageCode: ae(a, Qf) || null,\n      tenantId: ae(a, Rf) || null\n    });\n  }\n\n  var Lf = "apiKey",\n      Mf = "oobCode",\n      Pf = "continueUrl",\n      Qf = "languageCode",\n      Nf = "mode",\n      Rf = "tenantId",\n      Of = {\n    recoverEmail: "RECOVER_EMAIL",\n    resetPassword: "PASSWORD_RESET",\n    revertSecondFactorAddition: Df,\n    signIn: Bf,\n    verifyAndChangeEmail: Cf,\n    verifyEmail: "VERIFY_EMAIL"\n  };\n\n  function Sf(a) {\n    try {\n      return new Kf(a);\n    } catch (b) {\n      return null;\n    }\n  }\n\n  ;\n\n  function Tf(a) {\n    var b = a[Uf];\n    if ("undefined" === typeof b) throw new t("missing-continue-uri");\n    if ("string" !== typeof b || "string" === typeof b && !b.length) throw new t("invalid-continue-uri");\n    this.h = b;\n    this.b = this.a = null;\n    this.g = !1;\n    var c = a[Vf];\n\n    if (c && "object" === typeof c) {\n      b = c[Wf];\n      var d = c[Xf];\n      c = c[Yf];\n\n      if ("string" === typeof b && b.length) {\n        this.a = b;\n        if ("undefined" !== typeof d && "boolean" !== typeof d) throw new t("argument-error", Xf + " property must be a boolean when specified.");\n        this.g = !!d;\n        if ("undefined" !== typeof c && ("string" !== typeof c || "string" === typeof c && !c.length)) throw new t("argument-error", Yf + " property must be a non empty string when specified.");\n        this.b = c || null;\n      } else {\n        if ("undefined" !== typeof b) throw new t("argument-error", Wf + " property must be a non empty string when specified.");\n        if ("undefined" !== typeof d || "undefined" !== typeof c) throw new t("missing-android-pkg-name");\n      }\n    } else if ("undefined" !== typeof c) throw new t("argument-error", Vf + " property must be a non null object when specified.");\n\n    this.f = null;\n    if ((b = a[Zf]) && "object" === typeof b) {\n      if (b = b[$f], "string" === typeof b && b.length) this.f = b;else {\n        if ("undefined" !== typeof b) throw new t("argument-error", $f + " property must be a non empty string when specified.");\n      }\n    } else if ("undefined" !== typeof b) throw new t("argument-error", Zf + " property must be a non null object when specified.");\n    b = a[ag];\n    if ("undefined" !== typeof b && "boolean" !== typeof b) throw new t("argument-error", ag + " property must be a boolean when specified.");\n    this.c = !!b;\n    a = a[bg];\n    if ("undefined" !== typeof a && ("string" !== typeof a || "string" === typeof a && !a.length)) throw new t("argument-error", bg + " property must be a non empty string when specified.");\n    this.i = a || null;\n  }\n\n  var Vf = "android",\n      bg = "dynamicLinkDomain",\n      ag = "handleCodeInApp",\n      Zf = "iOS",\n      Uf = "url",\n      Xf = "installApp",\n      Yf = "minimumVersion",\n      Wf = "packageName",\n      $f = "bundleId";\n\n  function cg(a) {\n    var b = {};\n    b.continueUrl = a.h;\n    b.canHandleCodeInApp = a.c;\n    if (b.androidPackageName = a.a) b.androidMinimumVersion = a.b, b.androidInstallApp = a.g;\n    b.iOSBundleId = a.f;\n    b.dynamicLinkDomain = a.i;\n\n    for (var c in b) {\n      null === b[c] && delete b[c];\n    }\n\n    return b;\n  }\n\n  ;\n\n  function dg(a) {\n    return Ra(a, function (b) {\n      b = b.toString(16);\n      return 1 < b.length ? b : "0" + b;\n    }).join("");\n  }\n\n  ;\n  var eg = null;\n\n  function fg(a) {\n    var b = "";\n    gg(a, function (c) {\n      b += String.fromCharCode(c);\n    });\n    return b;\n  }\n\n  function gg(a, b) {\n    function c(n) {\n      for (; d < a.length;) {\n        var p = a.charAt(d++),\n            v = eg[p];\n        if (null != v) return v;\n        if (!/^[\\s\\xa0]*$/.test(p)) throw Error("Unknown base64 encoding at char: " + p);\n      }\n\n      return n;\n    }\n\n    hg();\n\n    for (var d = 0;;) {\n      var e = c(-1),\n          f = c(0),\n          g = c(64),\n          h = c(64);\n      if (64 === h && -1 === e) break;\n      b(e << 2 | f >> 4);\n      64 != g && (b(f << 4 & 240 | g >> 2), 64 != h && b(g << 6 & 192 | h));\n    }\n  }\n\n  function hg() {\n    if (!eg) {\n      eg = {};\n\n      for (var a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""), b = ["+/=", "+/", "-_=", "-_.", "-_"], c = 0; 5 > c; c++) {\n        for (var d = a.concat(b[c].split("")), e = 0; e < d.length; e++) {\n          var f = d[e];\n          void 0 === eg[f] && (eg[f] = e);\n        }\n      }\n    }\n  }\n\n  ;\n\n  function ig(a) {\n    var b = jg(a);\n    if (!(b && b.sub && b.iss && b.aud && b.exp)) throw Error("Invalid JWT");\n    this.g = a;\n    this.c = b.exp;\n    this.h = b.sub;\n    va();\n    this.a = b.provider_id || b.firebase && b.firebase.sign_in_provider || null;\n    this.f = b.firebase && b.firebase.tenant || null;\n    this.b = !!b.is_anonymous || "anonymous" == this.a;\n  }\n\n  ig.prototype.S = function () {\n    return this.f;\n  };\n\n  ig.prototype.i = function () {\n    return this.b;\n  };\n\n  ig.prototype.toString = function () {\n    return this.g;\n  };\n\n  function kg(a) {\n    try {\n      return new ig(a);\n    } catch (b) {\n      return null;\n    }\n  }\n\n  function jg(a) {\n    if (!a) return null;\n    a = a.split(".");\n    if (3 != a.length) return null;\n    a = a[1];\n\n    for (var b = (4 - a.length % 4) % 4, c = 0; c < b; c++) {\n      a += ".";\n    }\n\n    try {\n      return JSON.parse(fg(a));\n    } catch (d) {}\n\n    return null;\n  }\n\n  ;\n  var lg = "oauth_consumer_key oauth_nonce oauth_signature oauth_signature_method oauth_timestamp oauth_token oauth_version".split(" "),\n      mg = ["client_id", "response_type", "scope", "redirect_uri", "state"],\n      ng = {\n    md: {\n      Ja: "locale",\n      ua: 700,\n      ta: 600,\n      fa: "facebook.com",\n      Wa: mg\n    },\n    od: {\n      Ja: null,\n      ua: 500,\n      ta: 750,\n      fa: "github.com",\n      Wa: mg\n    },\n    pd: {\n      Ja: "hl",\n      ua: 515,\n      ta: 680,\n      fa: "google.com",\n      Wa: mg\n    },\n    vd: {\n      Ja: "lang",\n      ua: 485,\n      ta: 705,\n      fa: "twitter.com",\n      Wa: lg\n    },\n    jd: {\n      Ja: "locale",\n      ua: 640,\n      ta: 600,\n      fa: "apple.com",\n      Wa: []\n    }\n  };\n\n  function og(a) {\n    for (var b in ng) {\n      if (ng[b].fa == a) return ng[b];\n    }\n\n    return null;\n  }\n\n  ;\n\n  function pg(a) {\n    var b = {};\n    b["facebook.com"] = qg;\n    b["google.com"] = rg;\n    b["github.com"] = sg;\n    b["twitter.com"] = tg;\n    var c = a && a[ug];\n\n    try {\n      if (c) return b[c] ? new b[c](a) : new vg(a);\n      if ("undefined" !== typeof a[wg]) return new xg(a);\n    } catch (d) {}\n\n    return null;\n  }\n\n  var wg = "idToken",\n      ug = "providerId";\n\n  function xg(a) {\n    var b = a[ug];\n\n    if (!b && a[wg]) {\n      var c = kg(a[wg]);\n      c && c.a && (b = c.a);\n    }\n\n    if (!b) throw Error("Invalid additional user info!");\n    if ("anonymous" == b || "custom" == b) b = null;\n    c = !1;\n    "undefined" !== typeof a.isNewUser ? c = !!a.isNewUser : "identitytoolkit#SignupNewUserResponse" === a.kind && (c = !0);\n    M(this, "providerId", b);\n    M(this, "isNewUser", c);\n  }\n\n  function vg(a) {\n    xg.call(this, a);\n    a = We(a.rawUserInfo || "{}");\n    M(this, "profile", of(a || {}));\n  }\n\n  r(vg, xg);\n\n  function qg(a) {\n    vg.call(this, a);\n    if ("facebook.com" != this.providerId) throw Error("Invalid provider ID!");\n  }\n\n  r(qg, vg);\n\n  function sg(a) {\n    vg.call(this, a);\n    if ("github.com" != this.providerId) throw Error("Invalid provider ID!");\n    M(this, "username", this.profile && this.profile.login || null);\n  }\n\n  r(sg, vg);\n\n  function rg(a) {\n    vg.call(this, a);\n    if ("google.com" != this.providerId) throw Error("Invalid provider ID!");\n  }\n\n  r(rg, vg);\n\n  function tg(a) {\n    vg.call(this, a);\n    if ("twitter.com" != this.providerId) throw Error("Invalid provider ID!");\n    M(this, "username", a.screenName || null);\n  }\n\n  r(tg, vg);\n\n  function yg(a) {\n    var b = be(a),\n        c = ae(b, "link"),\n        d = ae(be(c), "link");\n    b = ae(b, "deep_link_id");\n    return ae(be(b), "link") || b || d || c || a;\n  }\n\n  ;\n\n  function zg(a, b) {\n    if (!a && !b) throw new t("internal-error", "Internal assert: no raw session string available");\n    if (a && b) throw new t("internal-error", "Internal assert: unable to determine the session type");\n    this.a = a || null;\n    this.b = b || null;\n    this.type = this.a ? Ag : Bg;\n  }\n\n  var Ag = "enroll",\n      Bg = "signin";\n\n  zg.prototype.Ha = function () {\n    return this.a ? E(this.a) : E(this.b);\n  };\n\n  zg.prototype.w = function () {\n    return this.type == Ag ? {\n      multiFactorSession: {\n        idToken: this.a\n      }\n    } : {\n      multiFactorSession: {\n        pendingCredential: this.b\n      }\n    };\n  };\n\n  function Cg() {}\n\n  Cg.prototype.ja = function () {};\n\n  Cg.prototype.b = function () {};\n\n  Cg.prototype.c = function () {};\n\n  Cg.prototype.w = function () {};\n\n  function Dg(a, b) {\n    return a.then(function (c) {\n      if (c[Eg]) {\n        var d = kg(c[Eg]);\n        if (!d || b != d.h) throw new t("user-mismatch");\n        return c;\n      }\n\n      throw new t("user-mismatch");\n    }).s(function (c) {\n      throw c && c.code && c.code == ya + "user-not-found" ? new t("user-mismatch") : c;\n    });\n  }\n\n  function Fg(a, b) {\n    if (b) this.a = b;else throw new t("internal-error", "failed to construct a credential");\n    M(this, "providerId", a);\n    M(this, "signInMethod", a);\n  }\n\n  Fg.prototype.ja = function (a) {\n    return Gg(a, Hg(this));\n  };\n\n  Fg.prototype.b = function (a, b) {\n    var c = Hg(this);\n    c.idToken = b;\n    return Ig(a, c);\n  };\n\n  Fg.prototype.c = function (a, b) {\n    return Dg(Jg(a, Hg(this)), b);\n  };\n\n  function Hg(a) {\n    return {\n      pendingToken: a.a,\n      requestUri: "http://localhost"\n    };\n  }\n\n  Fg.prototype.w = function () {\n    return {\n      providerId: this.providerId,\n      signInMethod: this.signInMethod,\n      pendingToken: this.a\n    };\n  };\n\n  function Kg(a) {\n    if (a && a.providerId && a.signInMethod && 0 == a.providerId.indexOf("saml.") && a.pendingToken) try {\n      return new Fg(a.providerId, a.pendingToken);\n    } catch (b) {}\n    return null;\n  }\n\n  function Lg(a, b, c) {\n    this.a = null;\n    if (b.idToken || b.accessToken) b.idToken && M(this, "idToken", b.idToken), b.accessToken && M(this, "accessToken", b.accessToken), b.nonce && !b.pendingToken && M(this, "nonce", b.nonce), b.pendingToken && (this.a = b.pendingToken);else if (b.oauthToken && b.oauthTokenSecret) M(this, "accessToken", b.oauthToken), M(this, "secret", b.oauthTokenSecret);else throw new t("internal-error", "failed to construct a credential");\n    M(this, "providerId", a);\n    M(this, "signInMethod", c);\n  }\n\n  Lg.prototype.ja = function (a) {\n    return Gg(a, Mg(this));\n  };\n\n  Lg.prototype.b = function (a, b) {\n    var c = Mg(this);\n    c.idToken = b;\n    return Ig(a, c);\n  };\n\n  Lg.prototype.c = function (a, b) {\n    var c = Mg(this);\n    return Dg(Jg(a, c), b);\n  };\n\n  function Mg(a) {\n    var b = {};\n    a.idToken && (b.id_token = a.idToken);\n    a.accessToken && (b.access_token = a.accessToken);\n    a.secret && (b.oauth_token_secret = a.secret);\n    b.providerId = a.providerId;\n    a.nonce && !a.a && (b.nonce = a.nonce);\n    b = {\n      postBody: fe(b).toString(),\n      requestUri: "http://localhost"\n    };\n    a.a && (delete b.postBody, b.pendingToken = a.a);\n    return b;\n  }\n\n  Lg.prototype.w = function () {\n    var a = {\n      providerId: this.providerId,\n      signInMethod: this.signInMethod\n    };\n    this.idToken && (a.oauthIdToken = this.idToken);\n    this.accessToken && (a.oauthAccessToken = this.accessToken);\n    this.secret && (a.oauthTokenSecret = this.secret);\n    this.nonce && (a.nonce = this.nonce);\n    this.a && (a.pendingToken = this.a);\n    return a;\n  };\n\n  function Ng(a) {\n    if (a && a.providerId && a.signInMethod) {\n      var b = {\n        idToken: a.oauthIdToken,\n        accessToken: a.oauthTokenSecret ? null : a.oauthAccessToken,\n        oauthTokenSecret: a.oauthTokenSecret,\n        oauthToken: a.oauthTokenSecret && a.oauthAccessToken,\n        nonce: a.nonce,\n        pendingToken: a.pendingToken\n      };\n\n      try {\n        return new Lg(a.providerId, b, a.signInMethod);\n      } catch (c) {}\n    }\n\n    return null;\n  }\n\n  function Og(a, b) {\n    this.Pc = b || [];\n    N(this, {\n      providerId: a,\n      isOAuthProvider: !0\n    });\n    this.Hb = {};\n    this.ob = (og(a) || {}).Ja || null;\n    this.nb = null;\n  }\n\n  Og.prototype.Ka = function (a) {\n    this.Hb = nb(a);\n    return this;\n  };\n\n  function Pg(a) {\n    if ("string" !== typeof a || 0 != a.indexOf("saml.")) throw new t("argument-error", \'SAML provider IDs must be prefixed with "saml."\');\n    Og.call(this, a, []);\n  }\n\n  r(Pg, Og);\n\n  function Qg(a) {\n    Og.call(this, a, mg);\n    this.a = [];\n  }\n\n  r(Qg, Og);\n\n  Qg.prototype.Ca = function (a) {\n    Va(this.a, a) || this.a.push(a);\n    return this;\n  };\n\n  Qg.prototype.Pb = function () {\n    return Za(this.a);\n  };\n\n  Qg.prototype.credential = function (a, b) {\n    var c;\n    m(a) ? c = {\n      idToken: a.idToken || null,\n      accessToken: a.accessToken || null,\n      nonce: a.rawNonce || null\n    } : c = {\n      idToken: a || null,\n      accessToken: b || null\n    };\n    if (!c.idToken && !c.accessToken) throw new t("argument-error", "credential failed: must provide the ID token and/or the access token.");\n    return new Lg(this.providerId, c, this.providerId);\n  };\n\n  function Rg() {\n    Qg.call(this, "facebook.com");\n  }\n\n  r(Rg, Qg);\n  M(Rg, "PROVIDER_ID", "facebook.com");\n  M(Rg, "FACEBOOK_SIGN_IN_METHOD", "facebook.com");\n\n  function Sg(a) {\n    if (!a) throw new t("argument-error", "credential failed: expected 1 argument (the OAuth access token).");\n    var b = a;\n    m(a) && (b = a.accessToken);\n    return new Rg().credential({\n      accessToken: b\n    });\n  }\n\n  function Tg() {\n    Qg.call(this, "github.com");\n  }\n\n  r(Tg, Qg);\n  M(Tg, "PROVIDER_ID", "github.com");\n  M(Tg, "GITHUB_SIGN_IN_METHOD", "github.com");\n\n  function Ug(a) {\n    if (!a) throw new t("argument-error", "credential failed: expected 1 argument (the OAuth access token).");\n    var b = a;\n    m(a) && (b = a.accessToken);\n    return new Tg().credential({\n      accessToken: b\n    });\n  }\n\n  function Vg() {\n    Qg.call(this, "google.com");\n    this.Ca("profile");\n  }\n\n  r(Vg, Qg);\n  M(Vg, "PROVIDER_ID", "google.com");\n  M(Vg, "GOOGLE_SIGN_IN_METHOD", "google.com");\n\n  function Wg(a, b) {\n    var c = a;\n    m(a) && (c = a.idToken, b = a.accessToken);\n    return new Vg().credential({\n      idToken: c,\n      accessToken: b\n    });\n  }\n\n  function Xg() {\n    Og.call(this, "twitter.com", lg);\n  }\n\n  r(Xg, Og);\n  M(Xg, "PROVIDER_ID", "twitter.com");\n  M(Xg, "TWITTER_SIGN_IN_METHOD", "twitter.com");\n\n  function Yg(a, b) {\n    var c = a;\n    m(c) || (c = {\n      oauthToken: a,\n      oauthTokenSecret: b\n    });\n    if (!c.oauthToken || !c.oauthTokenSecret) throw new t("argument-error", "credential failed: expected 2 arguments (the OAuth access token and secret).");\n    return new Lg("twitter.com", c, "twitter.com");\n  }\n\n  function Zg(a, b, c) {\n    this.a = a;\n    this.f = b;\n    M(this, "providerId", "password");\n    M(this, "signInMethod", c === $g.EMAIL_LINK_SIGN_IN_METHOD ? $g.EMAIL_LINK_SIGN_IN_METHOD : $g.EMAIL_PASSWORD_SIGN_IN_METHOD);\n  }\n\n  Zg.prototype.ja = function (a) {\n    return this.signInMethod == $g.EMAIL_LINK_SIGN_IN_METHOD ? O(a, ah, {\n      email: this.a,\n      oobCode: this.f\n    }) : O(a, bh, {\n      email: this.a,\n      password: this.f\n    });\n  };\n\n  Zg.prototype.b = function (a, b) {\n    return this.signInMethod == $g.EMAIL_LINK_SIGN_IN_METHOD ? O(a, ch, {\n      idToken: b,\n      email: this.a,\n      oobCode: this.f\n    }) : O(a, dh, {\n      idToken: b,\n      email: this.a,\n      password: this.f\n    });\n  };\n\n  Zg.prototype.c = function (a, b) {\n    return Dg(this.ja(a), b);\n  };\n\n  Zg.prototype.w = function () {\n    return {\n      email: this.a,\n      password: this.f,\n      signInMethod: this.signInMethod\n    };\n  };\n\n  function eh(a) {\n    return a && a.email && a.password ? new Zg(a.email, a.password, a.signInMethod) : null;\n  }\n\n  function $g() {\n    N(this, {\n      providerId: "password",\n      isOAuthProvider: !1\n    });\n  }\n\n  function fh(a, b) {\n    b = gh(b);\n    if (!b) throw new t("argument-error", "Invalid email link!");\n    return new Zg(a, b.code, $g.EMAIL_LINK_SIGN_IN_METHOD);\n  }\n\n  function gh(a) {\n    a = yg(a);\n    return (a = Sf(a)) && a.operation === Bf ? a : null;\n  }\n\n  N($g, {\n    PROVIDER_ID: "password"\n  });\n  N($g, {\n    EMAIL_LINK_SIGN_IN_METHOD: "emailLink"\n  });\n  N($g, {\n    EMAIL_PASSWORD_SIGN_IN_METHOD: "password"\n  });\n\n  function hh(a) {\n    if (!(a.cb && a.bb || a.La && a.ea)) throw new t("internal-error");\n    this.a = a;\n    M(this, "providerId", "phone");\n    this.fa = "phone";\n    M(this, "signInMethod", "phone");\n  }\n\n  hh.prototype.ja = function (a) {\n    return a.eb(ih(this));\n  };\n\n  hh.prototype.b = function (a, b) {\n    var c = ih(this);\n    c.idToken = b;\n    return O(a, jh, c);\n  };\n\n  hh.prototype.c = function (a, b) {\n    var c = ih(this);\n    c.operation = "REAUTH";\n    a = O(a, kh, c);\n    return Dg(a, b);\n  };\n\n  hh.prototype.w = function () {\n    var a = {\n      providerId: "phone"\n    };\n    this.a.cb && (a.verificationId = this.a.cb);\n    this.a.bb && (a.verificationCode = this.a.bb);\n    this.a.La && (a.temporaryProof = this.a.La);\n    this.a.ea && (a.phoneNumber = this.a.ea);\n    return a;\n  };\n\n  function lh(a) {\n    if (a && "phone" === a.providerId && (a.verificationId && a.verificationCode || a.temporaryProof && a.phoneNumber)) {\n      var b = {};\n      w(["verificationId", "verificationCode", "temporaryProof", "phoneNumber"], function (c) {\n        a[c] && (b[c] = a[c]);\n      });\n      return new hh(b);\n    }\n\n    return null;\n  }\n\n  function ih(a) {\n    return a.a.La && a.a.ea ? {\n      temporaryProof: a.a.La,\n      phoneNumber: a.a.ea\n    } : {\n      sessionInfo: a.a.cb,\n      code: a.a.bb\n    };\n  }\n\n  function mh(a) {\n    try {\n      this.a = a || _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].auth();\n    } catch (b) {\n      throw new t("argument-error", "Either an instance of firebase.auth.Auth must be passed as an argument to the firebase.auth.PhoneAuthProvider constructor, or the default firebase App instance must be initialized via firebase.initializeApp().");\n    }\n\n    N(this, {\n      providerId: "phone",\n      isOAuthProvider: !1\n    });\n  }\n\n  mh.prototype.eb = function (a, b) {\n    var c = this.a.a;\n    return E(b.verify()).then(function (d) {\n      if ("string" !== typeof d) throw new t("argument-error", "An implementation of firebase.auth.ApplicationVerifier.prototype.verify() must return a firebase.Promise that resolves with a string.");\n\n      switch (b.type) {\n        case "recaptcha":\n          var e = m(a) ? a.session : null,\n              f = m(a) ? a.phoneNumber : a,\n              g;\n          e && e.type == Ag ? g = e.Ha().then(function (h) {\n            return nh(c, {\n              idToken: h,\n              phoneEnrollmentInfo: {\n                phoneNumber: f,\n                recaptchaToken: d\n              }\n            });\n          }) : e && e.type == Bg ? g = e.Ha().then(function (h) {\n            return oh(c, {\n              mfaPendingCredential: h,\n              mfaEnrollmentId: a.multiFactorHint && a.multiFactorHint.uid || a.multiFactorUid,\n              phoneSignInInfo: {\n                recaptchaToken: d\n              }\n            });\n          }) : g = ph(c, {\n            phoneNumber: f,\n            recaptchaToken: d\n          });\n          return g.then(function (h) {\n            "function" === typeof b.reset && b.reset();\n            return h;\n          }, function (h) {\n            "function" === typeof b.reset && b.reset();\n            throw h;\n          });\n\n        default:\n          throw new t("argument-error", \'Only firebase.auth.ApplicationVerifiers with type="recaptcha" are currently supported.\');\n      }\n    });\n  };\n\n  function qh(a, b) {\n    if (!a) throw new t("missing-verification-id");\n    if (!b) throw new t("missing-verification-code");\n    return new hh({\n      cb: a,\n      bb: b\n    });\n  }\n\n  N(mh, {\n    PROVIDER_ID: "phone"\n  });\n  N(mh, {\n    PHONE_SIGN_IN_METHOD: "phone"\n  });\n\n  function rh(a) {\n    if (a.temporaryProof && a.phoneNumber) return new hh({\n      La: a.temporaryProof,\n      ea: a.phoneNumber\n    });\n    var b = a && a.providerId;\n    if (!b || "password" === b) return null;\n    var c = a && a.oauthAccessToken,\n        d = a && a.oauthTokenSecret,\n        e = a && a.nonce,\n        f = a && a.oauthIdToken,\n        g = a && a.pendingToken;\n\n    try {\n      switch (b) {\n        case "google.com":\n          return Wg(f, c);\n\n        case "facebook.com":\n          return Sg(c);\n\n        case "github.com":\n          return Ug(c);\n\n        case "twitter.com":\n          return Yg(c, d);\n\n        default:\n          return c || d || f || g ? g ? 0 == b.indexOf("saml.") ? new Fg(b, g) : new Lg(b, {\n            pendingToken: g,\n            idToken: a.oauthIdToken,\n            accessToken: a.oauthAccessToken\n          }, b) : new Qg(b).credential({\n            idToken: f,\n            accessToken: c,\n            rawNonce: e\n          }) : null;\n      }\n    } catch (h) {\n      return null;\n    }\n  }\n\n  function sh(a) {\n    if (!a.isOAuthProvider) throw new t("invalid-oauth-provider");\n  }\n\n  ;\n\n  function th(a, b, c, d, e, f, g) {\n    this.c = a;\n    this.b = b || null;\n    this.g = c || null;\n    this.f = d || null;\n    this.i = f || null;\n    this.h = g || null;\n    this.a = e || null;\n\n    if (this.g || this.a) {\n      if (this.g && this.a) throw new t("invalid-auth-event");\n      if (this.g && !this.f) throw new t("invalid-auth-event");\n    } else throw new t("invalid-auth-event");\n  }\n\n  th.prototype.getUid = function () {\n    var a = [];\n    a.push(this.c);\n    this.b && a.push(this.b);\n    this.f && a.push(this.f);\n    this.h && a.push(this.h);\n    return a.join("-");\n  };\n\n  th.prototype.S = function () {\n    return this.h;\n  };\n\n  th.prototype.w = function () {\n    return {\n      type: this.c,\n      eventId: this.b,\n      urlResponse: this.g,\n      sessionId: this.f,\n      postBody: this.i,\n      tenantId: this.h,\n      error: this.a && this.a.w()\n    };\n  };\n\n  function uh(a) {\n    a = a || {};\n    return a.type ? new th(a.type, a.eventId, a.urlResponse, a.sessionId, a.error && Aa(a.error), a.postBody, a.tenantId) : null;\n  }\n\n  ;\n  /*\n  Copyright 2018 Google Inc.\n  Licensed under the Apache License, Version 2.0 (the "License");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an "AS IS" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  */\n\n  function vh() {\n    this.b = null;\n    this.a = [];\n  }\n\n  var wh = null;\n\n  function xh(a) {\n    var b = wh;\n    b.a.push(a);\n    b.b || (b.b = function (c) {\n      for (var d = 0; d < b.a.length; d++) {\n        b.a[d](c);\n      }\n    }, a = L("universalLinks.subscribe", l), "function" === typeof a && a(null, b.b));\n  }\n\n  ;\n\n  function yh(a) {\n    var b = "unauthorized-domain",\n        c = void 0,\n        d = be(a);\n    a = d.a;\n    d = d.f;\n    "chrome-extension" == d ? c = Qb("This chrome extension ID (chrome-extension://%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.", a) : "http" == d || "https" == d ? c = Qb("This domain (%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.", a) : b = "operation-not-supported-in-this-environment";\n    t.call(this, b, c);\n  }\n\n  r(yh, t);\n\n  function zh(a, b, c) {\n    t.call(this, a, c);\n    a = b || {};\n    a.Ib && M(this, "email", a.Ib);\n    a.ea && M(this, "phoneNumber", a.ea);\n    a.credential && M(this, "credential", a.credential);\n    a.Yb && M(this, "tenantId", a.Yb);\n  }\n\n  r(zh, t);\n\n  zh.prototype.w = function () {\n    var a = {\n      code: this.code,\n      message: this.message\n    };\n    this.email && (a.email = this.email);\n    this.phoneNumber && (a.phoneNumber = this.phoneNumber);\n    this.tenantId && (a.tenantId = this.tenantId);\n    var b = this.credential && this.credential.w();\n    b && z(a, b);\n    return a;\n  };\n\n  zh.prototype.toJSON = function () {\n    return this.w();\n  };\n\n  function Ah(a) {\n    if (a.code) {\n      var b = a.code || "";\n      0 == b.indexOf(ya) && (b = b.substring(ya.length));\n      var c = {\n        credential: rh(a),\n        Yb: a.tenantId\n      };\n      if (a.email) c.Ib = a.email;else if (a.phoneNumber) c.ea = a.phoneNumber;else if (!c.credential) return new t(b, a.message || void 0);\n      return new zh(b, c, a.message);\n    }\n\n    return null;\n  }\n\n  ;\n\n  function Bh() {}\n\n  Bh.prototype.c = null;\n\n  function Ch(a) {\n    return a.c || (a.c = a.b());\n  }\n\n  ;\n  var Dh;\n\n  function Eh() {}\n\n  r(Eh, Bh);\n\n  Eh.prototype.a = function () {\n    var a = Fh(this);\n    return a ? new ActiveXObject(a) : new XMLHttpRequest();\n  };\n\n  Eh.prototype.b = function () {\n    var a = {};\n    Fh(this) && (a[0] = !0, a[1] = !0);\n    return a;\n  };\n\n  function Fh(a) {\n    if (!a.f && "undefined" == typeof XMLHttpRequest && "undefined" != typeof ActiveXObject) {\n      for (var b = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"], c = 0; c < b.length; c++) {\n        var d = b[c];\n\n        try {\n          return new ActiveXObject(d), a.f = d;\n        } catch (e) {}\n      }\n\n      throw Error("Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed");\n    }\n\n    return a.f;\n  }\n\n  Dh = new Eh();\n\n  function Gh() {}\n\n  r(Gh, Bh);\n\n  Gh.prototype.a = function () {\n    var a = new XMLHttpRequest();\n    if ("withCredentials" in a) return a;\n    if ("undefined" != typeof XDomainRequest) return new Hh();\n    throw Error("Unsupported browser");\n  };\n\n  Gh.prototype.b = function () {\n    return {};\n  };\n\n  function Hh() {\n    this.a = new XDomainRequest();\n    this.readyState = 0;\n    this.onreadystatechange = null;\n    this.responseType = this.responseText = this.response = "";\n    this.status = -1;\n    this.statusText = "";\n    this.a.onload = q(this.pc, this);\n    this.a.onerror = q(this.Rb, this);\n    this.a.onprogress = q(this.qc, this);\n    this.a.ontimeout = q(this.uc, this);\n  }\n\n  k = Hh.prototype;\n\n  k.open = function (a, b, c) {\n    if (null != c && !c) throw Error("Only async requests are supported.");\n    this.a.open(a, b);\n  };\n\n  k.send = function (a) {\n    if (a) {\n      if ("string" == typeof a) this.a.send(a);else throw Error("Only string data is supported");\n    } else this.a.send();\n  };\n\n  k.abort = function () {\n    this.a.abort();\n  };\n\n  k.setRequestHeader = function () {};\n\n  k.getResponseHeader = function (a) {\n    return "content-type" == a.toLowerCase() ? this.a.contentType : "";\n  };\n\n  k.pc = function () {\n    this.status = 200;\n    this.response = this.responseText = this.a.responseText;\n    Ih(this, 4);\n  };\n\n  k.Rb = function () {\n    this.status = 500;\n    this.response = this.responseText = "";\n    Ih(this, 4);\n  };\n\n  k.uc = function () {\n    this.Rb();\n  };\n\n  k.qc = function () {\n    this.status = 200;\n    Ih(this, 1);\n  };\n\n  function Ih(a, b) {\n    a.readyState = b;\n    if (a.onreadystatechange) a.onreadystatechange();\n  }\n\n  k.getAllResponseHeaders = function () {\n    return "content-type: " + this.a.contentType;\n  };\n\n  function Jh(a, b, c) {\n    this.reset(a, b, c, void 0, void 0);\n  }\n\n  Jh.prototype.a = null;\n  var Kh = 0;\n\n  Jh.prototype.reset = function (a, b, c, d, e) {\n    "number" == typeof e || Kh++;\n    d || va();\n    delete this.a;\n  };\n\n  function Lh(a) {\n    this.f = a;\n    this.b = this.c = this.a = null;\n  }\n\n  function Mh(a, b) {\n    this.name = a;\n    this.value = b;\n  }\n\n  Mh.prototype.toString = function () {\n    return this.name;\n  };\n\n  var Nh = new Mh("SEVERE", 1E3),\n      Oh = new Mh("WARNING", 900),\n      Ph = new Mh("CONFIG", 700),\n      Qh = new Mh("FINE", 500);\n\n  function Rh(a) {\n    if (a.c) return a.c;\n    if (a.a) return Rh(a.a);\n    Ga("Root logger has no level set.");\n    return null;\n  }\n\n  Lh.prototype.log = function (a, b, c) {\n    if (a.value >= Rh(this).value) for (oa(b) && (b = b()), a = new Jh(a, String(b), this.f), c && (a.a = c), c = this; c;) {\n      c = c.a;\n    }\n  };\n\n  var Sh = {},\n      Th = null;\n\n  function Uh(a) {\n    Th || (Th = new Lh(""), Sh[""] = Th, Th.c = Ph);\n    var b;\n\n    if (!(b = Sh[a])) {\n      b = new Lh(a);\n      var c = a.lastIndexOf("."),\n          d = a.substr(c + 1);\n      c = Uh(a.substr(0, c));\n      c.b || (c.b = {});\n      c.b[d] = b;\n      b.a = c;\n      Sh[a] = b;\n    }\n\n    return b;\n  }\n\n  ;\n\n  function Vh(a, b) {\n    a && a.log(Qh, b, void 0);\n  }\n\n  ;\n\n  function Wh(a) {\n    this.f = a;\n  }\n\n  r(Wh, Bh);\n\n  Wh.prototype.a = function () {\n    return new Xh(this.f);\n  };\n\n  Wh.prototype.b = function (a) {\n    return function () {\n      return a;\n    };\n  }({});\n\n  function Xh(a) {\n    I.call(this);\n    this.u = a;\n    this.h = void 0;\n    this.readyState = Yh;\n    this.status = 0;\n    this.responseType = this.responseText = this.response = this.statusText = "";\n    this.onreadystatechange = null;\n    this.l = new Headers();\n    this.b = null;\n    this.o = "GET";\n    this.f = "";\n    this.a = !1;\n    this.i = Uh("goog.net.FetchXmlHttp");\n    this.m = this.c = this.g = null;\n  }\n\n  r(Xh, I);\n  var Yh = 0;\n  k = Xh.prototype;\n\n  k.open = function (a, b) {\n    if (this.readyState != Yh) throw this.abort(), Error("Error reopening a connection");\n    this.o = a;\n    this.f = b;\n    this.readyState = 1;\n    Zh(this);\n  };\n\n  k.send = function (a) {\n    if (1 != this.readyState) throw this.abort(), Error("need to call open() first. ");\n    this.a = !0;\n    var b = {\n      headers: this.l,\n      method: this.o,\n      credentials: this.h,\n      cache: void 0\n    };\n    a && (b.body = a);\n    this.u.fetch(new Request(this.f, b)).then(this.tc.bind(this), this.Ta.bind(this));\n  };\n\n  k.abort = function () {\n    this.response = this.responseText = "";\n    this.l = new Headers();\n    this.status = 0;\n    this.c && this.c.cancel("Request was aborted.");\n    1 <= this.readyState && this.a && 4 != this.readyState && (this.a = !1, $h(this));\n    this.readyState = Yh;\n  };\n\n  k.tc = function (a) {\n    this.a && (this.g = a, this.b || (this.status = this.g.status, this.statusText = this.g.statusText, this.b = a.headers, this.readyState = 2, Zh(this)), this.a && (this.readyState = 3, Zh(this), this.a && ("arraybuffer" === this.responseType ? a.arrayBuffer().then(this.rc.bind(this), this.Ta.bind(this)) : "undefined" !== typeof l.ReadableStream && "body" in a ? (this.response = this.responseText = "", this.c = a.body.getReader(), this.m = new TextDecoder(), ai(this)) : a.text().then(this.sc.bind(this), this.Ta.bind(this)))));\n  };\n\n  function ai(a) {\n    a.c.read().then(a.oc.bind(a)).catch(a.Ta.bind(a));\n  }\n\n  k.oc = function (a) {\n    if (this.a) {\n      var b = this.m.decode(a.value ? a.value : new Uint8Array(0), {\n        stream: !a.done\n      });\n      b && (this.response = this.responseText += b);\n      a.done ? $h(this) : Zh(this);\n      3 == this.readyState && ai(this);\n    }\n  };\n\n  k.sc = function (a) {\n    this.a && (this.response = this.responseText = a, $h(this));\n  };\n\n  k.rc = function (a) {\n    this.a && (this.response = a, $h(this));\n  };\n\n  k.Ta = function (a) {\n    var b = this.i;\n    b && b.log(Oh, "Failed to fetch url " + this.f, a instanceof Error ? a : Error(a));\n    this.a && $h(this);\n  };\n\n  function $h(a) {\n    a.readyState = 4;\n    a.g = null;\n    a.c = null;\n    a.m = null;\n    Zh(a);\n  }\n\n  k.setRequestHeader = function (a, b) {\n    this.l.append(a, b);\n  };\n\n  k.getResponseHeader = function (a) {\n    return this.b ? this.b.get(a.toLowerCase()) || "" : ((a = this.i) && a.log(Oh, "Attempting to get response header but no headers have been received for url: " + this.f, void 0), "");\n  };\n\n  k.getAllResponseHeaders = function () {\n    if (!this.b) {\n      var a = this.i;\n      a && a.log(Oh, "Attempting to get all response headers but no headers have been received for url: " + this.f, void 0);\n      return "";\n    }\n\n    a = [];\n\n    for (var b = this.b.entries(), c = b.next(); !c.done;) {\n      c = c.value, a.push(c[0] + ": " + c[1]), c = b.next();\n    }\n\n    return a.join("\\r\\n");\n  };\n\n  function Zh(a) {\n    a.onreadystatechange && a.onreadystatechange.call(a);\n  }\n\n  Object.defineProperty(Xh.prototype, "withCredentials", {\n    get: function get() {\n      return "include" === this.h;\n    },\n    set: function set(a) {\n      this.h = a ? "include" : "same-origin";\n    }\n  });\n\n  function bi(a) {\n    I.call(this);\n    this.headers = new Id();\n    this.O = a || null;\n    this.c = !1;\n    this.A = this.a = null;\n    this.h = this.P = this.l = "";\n    this.f = this.N = this.i = this.G = !1;\n    this.g = 0;\n    this.o = null;\n    this.m = ci;\n    this.u = this.R = !1;\n  }\n\n  r(bi, I);\n  var ci = "";\n  bi.prototype.b = Uh("goog.net.XhrIo");\n  var di = /^https?$/i,\n      ei = ["POST", "PUT"];\n\n  function fi(a, b, c, d, e) {\n    if (a.a) throw Error("[goog.net.XhrIo] Object is active with another request=" + a.l + "; newUri=" + b);\n    c = c ? c.toUpperCase() : "GET";\n    a.l = b;\n    a.h = "";\n    a.P = c;\n    a.G = !1;\n    a.c = !0;\n    a.a = a.O ? a.O.a() : Dh.a();\n    a.A = a.O ? Ch(a.O) : Ch(Dh);\n    a.a.onreadystatechange = q(a.Ub, a);\n\n    try {\n      Vh(a.b, gi(a, "Opening Xhr")), a.N = !0, a.a.open(c, String(b), !0), a.N = !1;\n    } catch (g) {\n      Vh(a.b, gi(a, "Error opening Xhr: " + g.message));\n      hi(a, g);\n      return;\n    }\n\n    b = d || "";\n    var f = new Id(a.headers);\n    e && Hd(e, function (g, h) {\n      f.set(h, g);\n    });\n    e = Ta(f.Y());\n    d = l.FormData && b instanceof l.FormData;\n    !Va(ei, c) || e || d || f.set("Content-Type", "application/x-www-form-urlencoded;charset=utf-8");\n    f.forEach(function (g, h) {\n      this.a.setRequestHeader(h, g);\n    }, a);\n    a.m && (a.a.responseType = a.m);\n    "withCredentials" in a.a && a.a.withCredentials !== a.R && (a.a.withCredentials = a.R);\n\n    try {\n      ii(a), 0 < a.g && (a.u = ji(a.a), Vh(a.b, gi(a, "Will abort after " + a.g + "ms if incomplete, xhr2 " + a.u)), a.u ? (a.a.timeout = a.g, a.a.ontimeout = q(a.Ma, a)) : a.o = Dd(a.Ma, a.g, a)), Vh(a.b, gi(a, "Sending request")), a.i = !0, a.a.send(b), a.i = !1;\n    } catch (g) {\n      Vh(a.b, gi(a, "Send error: " + g.message)), hi(a, g);\n    }\n  }\n\n  function ji(a) {\n    return Wb && fc(9) && "number" === typeof a.timeout && void 0 !== a.ontimeout;\n  }\n\n  function Ua(a) {\n    return "content-type" == a.toLowerCase();\n  }\n\n  k = bi.prototype;\n\n  k.Ma = function () {\n    "undefined" != typeof ha && this.a && (this.h = "Timed out after " + this.g + "ms, aborting", Vh(this.b, gi(this, this.h)), this.dispatchEvent("timeout"), this.abort(8));\n  };\n\n  function hi(a, b) {\n    a.c = !1;\n    a.a && (a.f = !0, a.a.abort(), a.f = !1);\n    a.h = b;\n    ki(a);\n    li(a);\n  }\n\n  function ki(a) {\n    a.G || (a.G = !0, a.dispatchEvent("complete"), a.dispatchEvent("error"));\n  }\n\n  k.abort = function () {\n    this.a && this.c && (Vh(this.b, gi(this, "Aborting")), this.c = !1, this.f = !0, this.a.abort(), this.f = !1, this.dispatchEvent("complete"), this.dispatchEvent("abort"), li(this));\n  };\n\n  k.Da = function () {\n    this.a && (this.c && (this.c = !1, this.f = !0, this.a.abort(), this.f = !1), li(this, !0));\n    bi.$a.Da.call(this);\n  };\n\n  k.Ub = function () {\n    this.xa || (this.N || this.i || this.f ? mi(this) : this.Ic());\n  };\n\n  k.Ic = function () {\n    mi(this);\n  };\n\n  function mi(a) {\n    if (a.c && "undefined" != typeof ha) if (a.A[1] && 4 == ni(a) && 2 == oi(a)) Vh(a.b, gi(a, "Local request error detected and ignored"));else if (a.i && 4 == ni(a)) Dd(a.Ub, 0, a);else if (a.dispatchEvent("readystatechange"), 4 == ni(a)) {\n      Vh(a.b, gi(a, "Request complete"));\n      a.c = !1;\n\n      try {\n        var b = oi(a);\n\n        a: switch (b) {\n          case 200:\n          case 201:\n          case 202:\n          case 204:\n          case 206:\n          case 304:\n          case 1223:\n            var c = !0;\n            break a;\n\n          default:\n            c = !1;\n        }\n\n        var d;\n\n        if (!(d = c)) {\n          var e;\n\n          if (e = 0 === b) {\n            var f = String(a.l).match(Ld)[1] || null;\n\n            if (!f && l.self && l.self.location) {\n              var g = l.self.location.protocol;\n              f = g.substr(0, g.length - 1);\n            }\n\n            e = !di.test(f ? f.toLowerCase() : "");\n          }\n\n          d = e;\n        }\n\n        if (d) a.dispatchEvent("complete"), a.dispatchEvent("success");else {\n          try {\n            var h = 2 < ni(a) ? a.a.statusText : "";\n          } catch (n) {\n            Vh(a.b, "Can not get status: " + n.message), h = "";\n          }\n\n          a.h = h + " [" + oi(a) + "]";\n          ki(a);\n        }\n      } finally {\n        li(a);\n      }\n    }\n  }\n\n  function li(a, b) {\n    if (a.a) {\n      ii(a);\n      var c = a.a,\n          d = a.A[0] ? la : null;\n      a.a = null;\n      a.A = null;\n      b || a.dispatchEvent("ready");\n\n      try {\n        c.onreadystatechange = d;\n      } catch (e) {\n        (a = a.b) && a.log(Nh, "Problem encountered resetting onreadystatechange: " + e.message, void 0);\n      }\n    }\n  }\n\n  function ii(a) {\n    a.a && a.u && (a.a.ontimeout = null);\n    a.o && (l.clearTimeout(a.o), a.o = null);\n  }\n\n  function ni(a) {\n    return a.a ? a.a.readyState : 0;\n  }\n\n  function oi(a) {\n    try {\n      return 2 < ni(a) ? a.a.status : -1;\n    } catch (b) {\n      return -1;\n    }\n  }\n\n  function pi(a) {\n    try {\n      return a.a ? a.a.responseText : "";\n    } catch (b) {\n      return Vh(a.b, "Can not get responseText: " + b.message), "";\n    }\n  }\n\n  k.getResponse = function () {\n    try {\n      if (!this.a) return null;\n      if ("response" in this.a) return this.a.response;\n\n      switch (this.m) {\n        case ci:\n        case "text":\n          return this.a.responseText;\n\n        case "arraybuffer":\n          if ("mozResponseArrayBuffer" in this.a) return this.a.mozResponseArrayBuffer;\n      }\n\n      var a = this.b;\n      a && a.log(Nh, "Response type " + this.m + " is not supported on this browser", void 0);\n      return null;\n    } catch (b) {\n      return Vh(this.b, "Can not get response: " + b.message), null;\n    }\n  };\n\n  function gi(a, b) {\n    return b + " [" + a.P + " " + a.l + " " + oi(a) + "]";\n  }\n\n  ;\n  /*\n  Portions of this code are from MochiKit, received by\n  The Closure Authors under the MIT license. All other code is Copyright\n  2005-2009 The Closure Authors. All Rights Reserved.\n  */\n\n  function qi(a) {\n    var b = ri;\n    this.g = [];\n    this.u = b;\n    this.o = a || null;\n    this.f = this.a = !1;\n    this.c = void 0;\n    this.m = this.A = this.i = !1;\n    this.h = 0;\n    this.b = null;\n    this.l = 0;\n  }\n\n  qi.prototype.cancel = function (a) {\n    if (this.a) this.c instanceof qi && this.c.cancel();else {\n      if (this.b) {\n        var b = this.b;\n        delete this.b;\n        a ? b.cancel(a) : (b.l--, 0 >= b.l && b.cancel());\n      }\n\n      this.u ? this.u.call(this.o, this) : this.m = !0;\n      this.a || (a = new si(this), ti(this), ui(this, !1, a));\n    }\n  };\n\n  qi.prototype.v = function (a, b) {\n    this.i = !1;\n    ui(this, a, b);\n  };\n\n  function ui(a, b, c) {\n    a.a = !0;\n    a.c = c;\n    a.f = !b;\n    vi(a);\n  }\n\n  function ti(a) {\n    if (a.a) {\n      if (!a.m) throw new wi(a);\n      a.m = !1;\n    }\n  }\n\n  function xi(a, b) {\n    yi(a, null, b, void 0);\n  }\n\n  function yi(a, b, c, d) {\n    a.g.push([b, c, d]);\n    a.a && vi(a);\n  }\n\n  qi.prototype.then = function (a, b, c) {\n    var d,\n        e,\n        f = new D(function (g, h) {\n      d = g;\n      e = h;\n    });\n    yi(this, d, function (g) {\n      g instanceof si ? f.cancel() : e(g);\n    });\n    return f.then(a, b, c);\n  };\n\n  qi.prototype.$goog_Thenable = !0;\n\n  function zi(a) {\n    return Sa(a.g, function (b) {\n      return oa(b[1]);\n    });\n  }\n\n  function vi(a) {\n    if (a.h && a.a && zi(a)) {\n      var b = a.h,\n          c = Ai[b];\n      c && (l.clearTimeout(c.a), delete Ai[b]);\n      a.h = 0;\n    }\n\n    a.b && (a.b.l--, delete a.b);\n    b = a.c;\n\n    for (var d = c = !1; a.g.length && !a.i;) {\n      var e = a.g.shift(),\n          f = e[0],\n          g = e[1];\n      e = e[2];\n      if (f = a.f ? g : f) try {\n        var h = f.call(e || a.o, b);\n        void 0 !== h && (a.f = a.f && (h == b || h instanceof Error), a.c = b = h);\n        if (Ea(b) || "function" === typeof l.Promise && b instanceof l.Promise) d = !0, a.i = !0;\n      } catch (n) {\n        b = n, a.f = !0, zi(a) || (c = !0);\n      }\n    }\n\n    a.c = b;\n    d && (h = q(a.v, a, !0), d = q(a.v, a, !1), b instanceof qi ? (yi(b, h, d), b.A = !0) : b.then(h, d));\n    c && (b = new Bi(b), Ai[b.a] = b, a.h = b.a);\n  }\n\n  function wi() {\n    u.call(this);\n  }\n\n  r(wi, u);\n  wi.prototype.message = "Deferred has already fired";\n  wi.prototype.name = "AlreadyCalledError";\n\n  function si() {\n    u.call(this);\n  }\n\n  r(si, u);\n  si.prototype.message = "Deferred was canceled";\n  si.prototype.name = "CanceledError";\n\n  function Bi(a) {\n    this.a = l.setTimeout(q(this.c, this), 0);\n    this.b = a;\n  }\n\n  Bi.prototype.c = function () {\n    delete Ai[this.a];\n    throw this.b;\n  };\n\n  var Ai = {};\n\n  function Ci(a) {\n    var b = {},\n        c = b.document || document,\n        d = yb(a).toString(),\n        e = oc(document, "SCRIPT"),\n        f = {\n      Vb: e,\n      Ma: void 0\n    },\n        g = new qi(f),\n        h = null,\n        n = null != b.timeout ? b.timeout : 5E3;\n    0 < n && (h = window.setTimeout(function () {\n      Di(e, !0);\n      var p = new Ei(Fi, "Timeout reached for loading script " + d);\n      ti(g);\n      ui(g, !1, p);\n    }, n), f.Ma = h);\n\n    e.onload = e.onreadystatechange = function () {\n      e.readyState && "loaded" != e.readyState && "complete" != e.readyState || (Di(e, b.wd || !1, h), ti(g), ui(g, !0, null));\n    };\n\n    e.onerror = function () {\n      Di(e, !0, h);\n      var p = new Ei(Gi, "Error while loading script " + d);\n      ti(g);\n      ui(g, !1, p);\n    };\n\n    f = b.attributes || {};\n    z(f, {\n      type: "text/javascript",\n      charset: "UTF-8"\n    });\n    lc(e, f);\n    Ob(e, a);\n    Hi(c).appendChild(e);\n    return g;\n  }\n\n  function Hi(a) {\n    var b;\n    return (b = (a || document).getElementsByTagName("HEAD")) && 0 != b.length ? b[0] : a.documentElement;\n  }\n\n  function ri() {\n    if (this && this.Vb) {\n      var a = this.Vb;\n      a && "SCRIPT" == a.tagName && Di(a, !0, this.Ma);\n    }\n  }\n\n  function Di(a, b, c) {\n    null != c && l.clearTimeout(c);\n    a.onload = la;\n    a.onerror = la;\n    a.onreadystatechange = la;\n    b && window.setTimeout(function () {\n      a && a.parentNode && a.parentNode.removeChild(a);\n    }, 0);\n  }\n\n  var Gi = 0,\n      Fi = 1;\n\n  function Ei(a, b) {\n    var c = "Jsloader error (code #" + a + ")";\n    b && (c += ": " + b);\n    u.call(this, c);\n    this.code = a;\n  }\n\n  r(Ei, u);\n\n  function Ii(a) {\n    this.f = a;\n  }\n\n  r(Ii, Bh);\n\n  Ii.prototype.a = function () {\n    return new this.f();\n  };\n\n  Ii.prototype.b = function () {\n    return {};\n  };\n\n  function Ji(a, b, c) {\n    this.c = a;\n    a = b || {};\n    this.l = a.secureTokenEndpoint || "https://securetoken.googleapis.com/v1/token";\n    this.v = a.secureTokenTimeout || Ki;\n    this.g = nb(a.secureTokenHeaders || Li);\n    this.h = a.firebaseEndpoint || "https://www.googleapis.com/identitytoolkit/v3/relyingparty/";\n    this.i = a.identityPlatformEndpoint || "https://identitytoolkit.googleapis.com/v2/";\n    this.m = a.firebaseTimeout || Mi;\n    this.a = nb(a.firebaseHeaders || Ni);\n    c && (this.a["X-Client-Version"] = c, this.g["X-Client-Version"] = c);\n    c = "Node" == Ke();\n    c = l.XMLHttpRequest || c && _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].INTERNAL.node && _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].INTERNAL.node.XMLHttpRequest;\n    if (!c && !Je()) throw new t("internal-error", "The XMLHttpRequest compatibility library was not found.");\n    this.f = void 0;\n    Je() ? this.f = new Wh(self) : Le() ? this.f = new Ii(c) : this.f = new Gh();\n    this.b = null;\n  }\n\n  var Oi,\n      Eg = "idToken",\n      Ki = new Ze(3E4, 6E4),\n      Li = {\n    "Content-Type": "application/x-www-form-urlencoded"\n  },\n      Mi = new Ze(3E4, 6E4),\n      Ni = {\n    "Content-Type": "application/json"\n  };\n\n  function Pi(a, b) {\n    b ? a.a["X-Firebase-Locale"] = b : delete a.a["X-Firebase-Locale"];\n  }\n\n  function Qi(a, b) {\n    b && (a.l = Ri("https://securetoken.googleapis.com/v1/token", b), a.h = Ri("https://www.googleapis.com/identitytoolkit/v3/relyingparty/", b), a.i = Ri("https://identitytoolkit.googleapis.com/v2/", b));\n  }\n\n  function Ri(a, b) {\n    a = be(a);\n    b = be(b.url);\n    a.c = a.a + a.c;\n    Od(a, b.f);\n    a.a = b.a;\n    Pd(a, b.g);\n    return a.toString();\n  }\n\n  function Si(a, b) {\n    b ? (a.a["X-Client-Version"] = b, a.g["X-Client-Version"] = b) : (delete a.a["X-Client-Version"], delete a.g["X-Client-Version"]);\n  }\n\n  Ji.prototype.S = function () {\n    return this.b;\n  };\n\n  function Ti(a, b, c, d, e, f, g) {\n    ue() || Je() ? a = q(a.u, a) : (Oi || (Oi = new D(function (h, n) {\n      Ui(h, n);\n    })), a = q(a.o, a));\n    a(b, c, d, e, f, g);\n  }\n\n  Ji.prototype.u = function (a, b, c, d, e, f) {\n    if (Je() && ("undefined" === typeof l.fetch || "undefined" === typeof l.Headers || "undefined" === typeof l.Request)) throw new t("operation-not-supported-in-this-environment", "fetch, Headers and Request native APIs or equivalent Polyfills must be available to support HTTP requests from a Worker environment.");\n    var g = new bi(this.f);\n\n    if (f) {\n      g.g = Math.max(0, f);\n      var h = setTimeout(function () {\n        g.dispatchEvent("timeout");\n      }, f);\n    }\n\n    qd(g, "complete", function () {\n      h && clearTimeout(h);\n      var n = null;\n\n      try {\n        n = JSON.parse(pi(this)) || null;\n      } catch (p) {\n        n = null;\n      }\n\n      b && b(n);\n    });\n    wd(g, "ready", function () {\n      h && clearTimeout(h);\n      Xc(this);\n    });\n    wd(g, "timeout", function () {\n      h && clearTimeout(h);\n      Xc(this);\n      b && b(null);\n    });\n    fi(g, a, c, d, e);\n  };\n\n  var Vi = new qb(rb, "https://apis.google.com/js/client.js?onload=%{onload}"),\n      Wi = "__fcb" + Math.floor(1E6 * Math.random()).toString();\n\n  function Ui(a, b) {\n    if (((window.gapi || {}).client || {}).request) a();else {\n      l[Wi] = function () {\n        ((window.gapi || {}).client || {}).request ? a() : b(Error("CORS_UNSUPPORTED"));\n      };\n\n      var c = zb(Vi, {\n        onload: Wi\n      });\n      xi(Ci(c), function () {\n        b(Error("CORS_UNSUPPORTED"));\n      });\n    }\n  }\n\n  Ji.prototype.o = function (a, b, c, d, e) {\n    var f = this;\n    Oi.then(function () {\n      window.gapi.client.setApiKey(f.c);\n      var g = window.gapi.auth.getToken();\n      window.gapi.auth.setToken(null);\n      window.gapi.client.request({\n        path: a,\n        method: c,\n        body: d,\n        headers: e,\n        authType: "none",\n        callback: function callback(h) {\n          window.gapi.auth.setToken(g);\n          b && b(h);\n        }\n      });\n    }).s(function (g) {\n      b && b({\n        error: {\n          message: g && g.message || "CORS_UNSUPPORTED"\n        }\n      });\n    });\n  };\n\n  function Xi(a, b) {\n    return new D(function (c, d) {\n      "refresh_token" == b.grant_type && b.refresh_token || "authorization_code" == b.grant_type && b.code ? Ti(a, a.l + "?key=" + encodeURIComponent(a.c), function (e) {\n        e ? e.error ? d(Yi(e)) : e.access_token && e.refresh_token ? c(e) : d(new t("internal-error")) : d(new t("network-request-failed"));\n      }, "POST", fe(b).toString(), a.g, a.v.get()) : d(new t("internal-error"));\n    });\n  }\n\n  function Zi(a, b, c, d, e, f, g) {\n    var h = be(b + c);\n    J(h, "key", a.c);\n    g && J(h, "cb", va().toString());\n    var n = "GET" == d;\n    if (n) for (var p in e) {\n      e.hasOwnProperty(p) && J(h, p, e[p]);\n    }\n    return new D(function (v, B) {\n      Ti(a, h.toString(), function (A) {\n        A ? A.error ? B(Yi(A, f || {})) : v(A) : B(new t("network-request-failed"));\n      }, d, n ? void 0 : ke(Ve(e)), a.a, a.m.get());\n    });\n  }\n\n  function $i(a) {\n    a = a.email;\n    if ("string" !== typeof a || !De.test(a)) throw new t("invalid-email");\n  }\n\n  function aj(a) {\n    "email" in a && $i(a);\n  }\n\n  function bj(a, b) {\n    return O(a, cj, {\n      identifier: b,\n      continueUri: Se() ? re() : "http://localhost"\n    }).then(function (c) {\n      return c.signinMethods || [];\n    });\n  }\n\n  function dj(a) {\n    return O(a, ej, {}).then(function (b) {\n      return b.authorizedDomains || [];\n    });\n  }\n\n  function P(a) {\n    if (!a[Eg]) {\n      if (a.mfaPendingCredential) throw new t("multi-factor-auth-required", null, nb(a));\n      throw new t("internal-error");\n    }\n  }\n\n  function fj(a) {\n    if (a.phoneNumber || a.temporaryProof) {\n      if (!a.phoneNumber || !a.temporaryProof) throw new t("internal-error");\n    } else {\n      if (!a.sessionInfo) throw new t("missing-verification-id");\n      if (!a.code) throw new t("missing-verification-code");\n    }\n  }\n\n  Ji.prototype.yb = function () {\n    return O(this, gj, {});\n  };\n\n  Ji.prototype.Ab = function (a, b) {\n    return O(this, hj, {\n      idToken: a,\n      email: b\n    });\n  };\n\n  Ji.prototype.Bb = function (a, b) {\n    return O(this, dh, {\n      idToken: a,\n      password: b\n    });\n  };\n\n  var ij = {\n    displayName: "DISPLAY_NAME",\n    photoUrl: "PHOTO_URL"\n  };\n  k = Ji.prototype;\n\n  k.Cb = function (a, b) {\n    var c = {\n      idToken: a\n    },\n        d = [];\n    lb(ij, function (e, f) {\n      var g = b[f];\n      null === g ? d.push(e) : f in b && (c[f] = g);\n    });\n    d.length && (c.deleteAttribute = d);\n    return O(this, hj, c);\n  };\n\n  k.ub = function (a, b) {\n    a = {\n      requestType: "PASSWORD_RESET",\n      email: a\n    };\n    z(a, b);\n    return O(this, jj, a);\n  };\n\n  k.vb = function (a, b) {\n    a = {\n      requestType: "EMAIL_SIGNIN",\n      email: a\n    };\n    z(a, b);\n    return O(this, kj, a);\n  };\n\n  k.tb = function (a, b) {\n    a = {\n      requestType: "VERIFY_EMAIL",\n      idToken: a\n    };\n    z(a, b);\n    return O(this, lj, a);\n  };\n\n  k.Db = function (a, b, c) {\n    a = {\n      requestType: "VERIFY_AND_CHANGE_EMAIL",\n      idToken: a,\n      newEmail: b\n    };\n    z(a, c);\n    return O(this, mj, a);\n  };\n\n  function ph(a, b) {\n    return O(a, nj, b);\n  }\n\n  k.eb = function (a) {\n    return O(this, oj, a);\n  };\n\n  function nh(a, b) {\n    return O(a, pj, b).then(function (c) {\n      return c.phoneSessionInfo.sessionInfo;\n    });\n  }\n\n  function qj(a) {\n    if (!a.phoneVerificationInfo) throw new t("internal-error");\n    if (!a.phoneVerificationInfo.sessionInfo) throw new t("missing-verification-id");\n    if (!a.phoneVerificationInfo.code) throw new t("missing-verification-code");\n  }\n\n  function oh(a, b) {\n    return O(a, rj, b).then(function (c) {\n      return c.phoneResponseInfo.sessionInfo;\n    });\n  }\n\n  function sj(a, b, c) {\n    return O(a, tj, {\n      idToken: b,\n      deleteProvider: c\n    });\n  }\n\n  function uj(a) {\n    if (!a.requestUri || !a.sessionId && !a.postBody && !a.pendingToken) throw new t("internal-error");\n  }\n\n  function vj(a, b) {\n    b.oauthIdToken && b.providerId && 0 == b.providerId.indexOf("oidc.") && !b.pendingToken && (a.sessionId ? b.nonce = a.sessionId : a.postBody && (a = new Td(a.postBody), je(a, "nonce") && (b.nonce = a.get("nonce"))));\n    return b;\n  }\n\n  function wj(a) {\n    var b = null;\n    a.needConfirmation ? (a.code = "account-exists-with-different-credential", b = Ah(a)) : "FEDERATED_USER_ID_ALREADY_LINKED" == a.errorMessage ? (a.code = "credential-already-in-use", b = Ah(a)) : "EMAIL_EXISTS" == a.errorMessage ? (a.code = "email-already-in-use", b = Ah(a)) : a.errorMessage && (b = xj(a.errorMessage));\n    if (b) throw b;\n    P(a);\n  }\n\n  function Gg(a, b) {\n    b.returnIdpCredential = !0;\n    return O(a, yj, b);\n  }\n\n  function Ig(a, b) {\n    b.returnIdpCredential = !0;\n    return O(a, zj, b);\n  }\n\n  function Jg(a, b) {\n    b.returnIdpCredential = !0;\n    b.autoCreate = !1;\n    return O(a, Aj, b);\n  }\n\n  function Bj(a) {\n    if (!a.oobCode) throw new t("invalid-action-code");\n  }\n\n  k.mb = function (a, b) {\n    return O(this, Cj, {\n      oobCode: a,\n      newPassword: b\n    });\n  };\n\n  k.Qa = function (a) {\n    return O(this, Dj, {\n      oobCode: a\n    });\n  };\n\n  k.ib = function (a) {\n    return O(this, Ej, {\n      oobCode: a\n    });\n  };\n\n  var Ej = {\n    endpoint: "setAccountInfo",\n    B: Bj,\n    Z: "email",\n    C: !0\n  },\n      Dj = {\n    endpoint: "resetPassword",\n    B: Bj,\n    F: function F(a) {\n      var b = a.requestType;\n      if (!b || !a.email && "EMAIL_SIGNIN" != b && "VERIFY_AND_CHANGE_EMAIL" != b) throw new t("internal-error");\n    },\n    C: !0\n  },\n      Fj = {\n    endpoint: "signupNewUser",\n    B: function B(a) {\n      $i(a);\n      if (!a.password) throw new t("weak-password");\n    },\n    F: P,\n    U: !0,\n    C: !0\n  },\n      cj = {\n    endpoint: "createAuthUri",\n    C: !0\n  },\n      Gj = {\n    endpoint: "deleteAccount",\n    M: ["idToken"]\n  },\n      tj = {\n    endpoint: "setAccountInfo",\n    M: ["idToken", "deleteProvider"],\n    B: function B(a) {\n      if (!Array.isArray(a.deleteProvider)) throw new t("internal-error");\n    }\n  },\n      ah = {\n    endpoint: "emailLinkSignin",\n    M: ["email", "oobCode"],\n    B: $i,\n    F: P,\n    U: !0,\n    C: !0\n  },\n      ch = {\n    endpoint: "emailLinkSignin",\n    M: ["idToken", "email", "oobCode"],\n    B: $i,\n    F: P,\n    U: !0\n  },\n      Hj = {\n    endpoint: "accounts/mfaEnrollment:finalize",\n    M: ["idToken", "phoneVerificationInfo"],\n    B: qj,\n    F: P,\n    C: !0,\n    Na: !0\n  },\n      Ij = {\n    endpoint: "accounts/mfaSignIn:finalize",\n    M: ["mfaPendingCredential", "phoneVerificationInfo"],\n    B: qj,\n    F: P,\n    C: !0,\n    Na: !0\n  },\n      Jj = {\n    endpoint: "getAccountInfo"\n  },\n      kj = {\n    endpoint: "getOobConfirmationCode",\n    M: ["requestType"],\n    B: function B(a) {\n      if ("EMAIL_SIGNIN" != a.requestType) throw new t("internal-error");\n      $i(a);\n    },\n    Z: "email",\n    C: !0\n  },\n      lj = {\n    endpoint: "getOobConfirmationCode",\n    M: ["idToken", "requestType"],\n    B: function B(a) {\n      if ("VERIFY_EMAIL" != a.requestType) throw new t("internal-error");\n    },\n    Z: "email",\n    C: !0\n  },\n      mj = {\n    endpoint: "getOobConfirmationCode",\n    M: ["idToken", "newEmail", "requestType"],\n    B: function B(a) {\n      if ("VERIFY_AND_CHANGE_EMAIL" != a.requestType) throw new t("internal-error");\n    },\n    Z: "email",\n    C: !0\n  },\n      jj = {\n    endpoint: "getOobConfirmationCode",\n    M: ["requestType"],\n    B: function B(a) {\n      if ("PASSWORD_RESET" != a.requestType) throw new t("internal-error");\n      $i(a);\n    },\n    Z: "email",\n    C: !0\n  },\n      ej = {\n    kb: !0,\n    endpoint: "getProjectConfig",\n    Tb: "GET"\n  },\n      Kj = {\n    kb: !0,\n    endpoint: "getRecaptchaParam",\n    Tb: "GET",\n    F: function F(a) {\n      if (!a.recaptchaSiteKey) throw new t("internal-error");\n    }\n  },\n      Cj = {\n    endpoint: "resetPassword",\n    B: Bj,\n    Z: "email",\n    C: !0\n  },\n      nj = {\n    endpoint: "sendVerificationCode",\n    M: ["phoneNumber", "recaptchaToken"],\n    Z: "sessionInfo",\n    C: !0\n  },\n      hj = {\n    endpoint: "setAccountInfo",\n    M: ["idToken"],\n    B: aj,\n    U: !0\n  },\n      dh = {\n    endpoint: "setAccountInfo",\n    M: ["idToken"],\n    B: function B(a) {\n      aj(a);\n      if (!a.password) throw new t("weak-password");\n    },\n    F: P,\n    U: !0\n  },\n      gj = {\n    endpoint: "signupNewUser",\n    F: P,\n    U: !0,\n    C: !0\n  },\n      pj = {\n    endpoint: "accounts/mfaEnrollment:start",\n    M: ["idToken", "phoneEnrollmentInfo"],\n    B: function B(a) {\n      if (!a.phoneEnrollmentInfo) throw new t("internal-error");\n      if (!a.phoneEnrollmentInfo.phoneNumber) throw new t("missing-phone-number");\n      if (!a.phoneEnrollmentInfo.recaptchaToken) throw new t("missing-app-credential");\n    },\n    F: function F(a) {\n      if (!a.phoneSessionInfo || !a.phoneSessionInfo.sessionInfo) throw new t("internal-error");\n    },\n    C: !0,\n    Na: !0\n  },\n      rj = {\n    endpoint: "accounts/mfaSignIn:start",\n    M: ["mfaPendingCredential", "mfaEnrollmentId", "phoneSignInInfo"],\n    B: function B(a) {\n      if (!a.phoneSignInInfo || !a.phoneSignInInfo.recaptchaToken) throw new t("missing-app-credential");\n    },\n    F: function F(a) {\n      if (!a.phoneResponseInfo || !a.phoneResponseInfo.sessionInfo) throw new t("internal-error");\n    },\n    C: !0,\n    Na: !0\n  },\n      yj = {\n    endpoint: "verifyAssertion",\n    B: uj,\n    Xa: vj,\n    F: wj,\n    U: !0,\n    C: !0\n  },\n      Aj = {\n    endpoint: "verifyAssertion",\n    B: uj,\n    Xa: vj,\n    F: function F(a) {\n      if (a.errorMessage && "USER_NOT_FOUND" == a.errorMessage) throw new t("user-not-found");\n      if (a.errorMessage) throw xj(a.errorMessage);\n      P(a);\n    },\n    U: !0,\n    C: !0\n  },\n      zj = {\n    endpoint: "verifyAssertion",\n    B: function B(a) {\n      uj(a);\n      if (!a.idToken) throw new t("internal-error");\n    },\n    Xa: vj,\n    F: wj,\n    U: !0\n  },\n      Lj = {\n    endpoint: "verifyCustomToken",\n    B: function B(a) {\n      if (!a.token) throw new t("invalid-custom-token");\n    },\n    F: P,\n    U: !0,\n    C: !0\n  },\n      bh = {\n    endpoint: "verifyPassword",\n    B: function B(a) {\n      $i(a);\n      if (!a.password) throw new t("wrong-password");\n    },\n    F: P,\n    U: !0,\n    C: !0\n  },\n      oj = {\n    endpoint: "verifyPhoneNumber",\n    B: fj,\n    F: P,\n    C: !0\n  },\n      jh = {\n    endpoint: "verifyPhoneNumber",\n    B: function B(a) {\n      if (!a.idToken) throw new t("internal-error");\n      fj(a);\n    },\n    F: function F(a) {\n      if (a.temporaryProof) throw a.code = "credential-already-in-use", Ah(a);\n      P(a);\n    }\n  },\n      kh = {\n    Gb: {\n      USER_NOT_FOUND: "user-not-found"\n    },\n    endpoint: "verifyPhoneNumber",\n    B: fj,\n    F: P,\n    C: !0\n  },\n      Mj = {\n    endpoint: "accounts/mfaEnrollment:withdraw",\n    M: ["idToken", "mfaEnrollmentId"],\n    F: function F(a) {\n      if (!!a[Eg] ^ !!a.refreshToken) throw new t("internal-error");\n    },\n    C: !0,\n    Na: !0\n  };\n\n  function O(a, b, c) {\n    if (!nf(c, b.M)) return F(new t("internal-error"));\n    var d = !!b.Na,\n        e = b.Tb || "POST",\n        f;\n    return E(c).then(b.B).then(function () {\n      b.U && (c.returnSecureToken = !0);\n      b.C && a.b && "undefined" === typeof c.tenantId && (c.tenantId = a.b);\n      return d ? Zi(a, a.i, b.endpoint, e, c, b.Gb, b.kb || !1) : Zi(a, a.h, b.endpoint, e, c, b.Gb, b.kb || !1);\n    }).then(function (g) {\n      f = g;\n      return b.Xa ? b.Xa(c, f) : f;\n    }).then(b.F).then(function () {\n      if (!b.Z) return f;\n      if (!(b.Z in f)) throw new t("internal-error");\n      return f[b.Z];\n    });\n  }\n\n  function xj(a) {\n    return Yi({\n      error: {\n        errors: [{\n          message: a\n        }],\n        code: 400,\n        message: a\n      }\n    });\n  }\n\n  function Yi(a, b) {\n    var c = (a.error && a.error.errors && a.error.errors[0] || {}).reason || "";\n    var d = {\n      keyInvalid: "invalid-api-key",\n      ipRefererBlocked: "app-not-authorized"\n    };\n    if (c = d[c] ? new t(d[c]) : null) return c;\n    c = a.error && a.error.message || "";\n    d = {\n      INVALID_CUSTOM_TOKEN: "invalid-custom-token",\n      CREDENTIAL_MISMATCH: "custom-token-mismatch",\n      MISSING_CUSTOM_TOKEN: "internal-error",\n      INVALID_IDENTIFIER: "invalid-email",\n      MISSING_CONTINUE_URI: "internal-error",\n      INVALID_EMAIL: "invalid-email",\n      INVALID_PASSWORD: "wrong-password",\n      USER_DISABLED: "user-disabled",\n      MISSING_PASSWORD: "internal-error",\n      EMAIL_EXISTS: "email-already-in-use",\n      PASSWORD_LOGIN_DISABLED: "operation-not-allowed",\n      INVALID_IDP_RESPONSE: "invalid-credential",\n      INVALID_PENDING_TOKEN: "invalid-credential",\n      FEDERATED_USER_ID_ALREADY_LINKED: "credential-already-in-use",\n      MISSING_OR_INVALID_NONCE: "missing-or-invalid-nonce",\n      INVALID_MESSAGE_PAYLOAD: "invalid-message-payload",\n      INVALID_RECIPIENT_EMAIL: "invalid-recipient-email",\n      INVALID_SENDER: "invalid-sender",\n      EMAIL_NOT_FOUND: "user-not-found",\n      RESET_PASSWORD_EXCEED_LIMIT: "too-many-requests",\n      EXPIRED_OOB_CODE: "expired-action-code",\n      INVALID_OOB_CODE: "invalid-action-code",\n      MISSING_OOB_CODE: "internal-error",\n      INVALID_PROVIDER_ID: "invalid-provider-id",\n      CREDENTIAL_TOO_OLD_LOGIN_AGAIN: "requires-recent-login",\n      INVALID_ID_TOKEN: "invalid-user-token",\n      TOKEN_EXPIRED: "user-token-expired",\n      USER_NOT_FOUND: "user-token-expired",\n      CORS_UNSUPPORTED: "cors-unsupported",\n      DYNAMIC_LINK_NOT_ACTIVATED: "dynamic-link-not-activated",\n      INVALID_APP_ID: "invalid-app-id",\n      TOO_MANY_ATTEMPTS_TRY_LATER: "too-many-requests",\n      WEAK_PASSWORD: "weak-password",\n      OPERATION_NOT_ALLOWED: "operation-not-allowed",\n      USER_CANCELLED: "user-cancelled",\n      CAPTCHA_CHECK_FAILED: "captcha-check-failed",\n      INVALID_APP_CREDENTIAL: "invalid-app-credential",\n      INVALID_CODE: "invalid-verification-code",\n      INVALID_PHONE_NUMBER: "invalid-phone-number",\n      INVALID_SESSION_INFO: "invalid-verification-id",\n      INVALID_TEMPORARY_PROOF: "invalid-credential",\n      MISSING_APP_CREDENTIAL: "missing-app-credential",\n      MISSING_CODE: "missing-verification-code",\n      MISSING_PHONE_NUMBER: "missing-phone-number",\n      MISSING_SESSION_INFO: "missing-verification-id",\n      QUOTA_EXCEEDED: "quota-exceeded",\n      SESSION_EXPIRED: "code-expired",\n      REJECTED_CREDENTIAL: "rejected-credential",\n      INVALID_CONTINUE_URI: "invalid-continue-uri",\n      MISSING_ANDROID_PACKAGE_NAME: "missing-android-pkg-name",\n      MISSING_IOS_BUNDLE_ID: "missing-ios-bundle-id",\n      UNAUTHORIZED_DOMAIN: "unauthorized-continue-uri",\n      INVALID_DYNAMIC_LINK_DOMAIN: "invalid-dynamic-link-domain",\n      INVALID_OAUTH_CLIENT_ID: "invalid-oauth-client-id",\n      INVALID_CERT_HASH: "invalid-cert-hash",\n      UNSUPPORTED_TENANT_OPERATION: "unsupported-tenant-operation",\n      INVALID_TENANT_ID: "invalid-tenant-id",\n      TENANT_ID_MISMATCH: "tenant-id-mismatch",\n      ADMIN_ONLY_OPERATION: "admin-restricted-operation",\n      INVALID_MFA_PENDING_CREDENTIAL: "invalid-multi-factor-session",\n      MFA_ENROLLMENT_NOT_FOUND: "multi-factor-info-not-found",\n      MISSING_MFA_PENDING_CREDENTIAL: "missing-multi-factor-session",\n      MISSING_MFA_ENROLLMENT_ID: "missing-multi-factor-info",\n      EMAIL_CHANGE_NEEDS_VERIFICATION: "email-change-needs-verification",\n      SECOND_FACTOR_EXISTS: "second-factor-already-in-use",\n      SECOND_FACTOR_LIMIT_EXCEEDED: "maximum-second-factor-count-exceeded",\n      UNSUPPORTED_FIRST_FACTOR: "unsupported-first-factor",\n      UNVERIFIED_EMAIL: "unverified-email"\n    };\n    z(d, b || {});\n    b = (b = c.match(/^[^\\s]+\\s*:\\s*([\\s\\S]*)$/)) && 1 < b.length ? b[1] : void 0;\n\n    for (var e in d) {\n      if (0 === c.indexOf(e)) return new t(d[e], b);\n    }\n\n    !b && a && (b = Ue(a));\n    return new t("internal-error", b);\n  }\n\n  ;\n\n  function Nj(a) {\n    this.b = a;\n    this.a = null;\n    this.qb = Oj(this);\n  }\n\n  function Oj(a) {\n    return Pj().then(function () {\n      return new D(function (b, c) {\n        L("gapi.iframes.getContext")().open({\n          where: document.body,\n          url: a.b,\n          messageHandlersFilter: L("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"),\n          attributes: {\n            style: {\n              position: "absolute",\n              top: "-100px",\n              width: "1px",\n              height: "1px"\n            }\n          },\n          dontclear: !0\n        }, function (d) {\n          function e() {\n            clearTimeout(f);\n            b();\n          }\n\n          a.a = d;\n          a.a.restyle({\n            setHideOnLeave: !1\n          });\n          var f = setTimeout(function () {\n            c(Error("Network Error"));\n          }, Qj.get());\n          d.ping(e).then(e, function () {\n            c(Error("Network Error"));\n          });\n        });\n      });\n    });\n  }\n\n  function Rj(a, b) {\n    return a.qb.then(function () {\n      return new D(function (c) {\n        a.a.send(b.type, b, c, L("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"));\n      });\n    });\n  }\n\n  function Sj(a, b) {\n    a.qb.then(function () {\n      a.a.register("authEvent", b, L("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"));\n    });\n  }\n\n  var Tj = new qb(rb, "https://apis.google.com/js/api.js?onload=%{onload}"),\n      Uj = new Ze(3E4, 6E4),\n      Qj = new Ze(5E3, 15E3),\n      Vj = null;\n\n  function Pj() {\n    return Vj ? Vj : Vj = new D(function (a, b) {\n      function c() {\n        Ye();\n        L("gapi.load")("gapi.iframes", {\n          callback: a,\n          ontimeout: function ontimeout() {\n            Ye();\n            b(Error("Network Error"));\n          },\n          timeout: Uj.get()\n        });\n      }\n\n      if (L("gapi.iframes.Iframe")) a();else if (L("gapi.load")) c();else {\n        var d = "__iframefcb" + Math.floor(1E6 * Math.random()).toString();\n\n        l[d] = function () {\n          L("gapi.load") ? c() : b(Error("Network Error"));\n        };\n\n        d = zb(Tj, {\n          onload: d\n        });\n        E(Ci(d)).s(function () {\n          b(Error("Network Error"));\n        });\n      }\n    }).s(function (a) {\n      Vj = null;\n      throw a;\n    });\n  }\n\n  ;\n\n  function Wj(a, b, c, d) {\n    this.l = a;\n    this.h = b;\n    this.i = c;\n    this.g = d;\n    this.f = null;\n    this.g ? (a = be(this.g.url), a = ce(a.f, a.a, a.g, "/emulator/auth/iframe")) : a = ce("https", this.l, null, "/__/auth/iframe");\n    this.a = a;\n    J(this.a, "apiKey", this.h);\n    J(this.a, "appName", this.i);\n    this.b = null;\n    this.c = [];\n  }\n\n  Wj.prototype.toString = function () {\n    this.f ? J(this.a, "v", this.f) : ie(this.a.b, "v");\n    this.b ? J(this.a, "eid", this.b) : ie(this.a.b, "eid");\n    this.c.length ? J(this.a, "fw", this.c.join(",")) : ie(this.a.b, "fw");\n    return this.a.toString();\n  };\n\n  function Xj(a, b, c, d, e, f) {\n    this.u = a;\n    this.o = b;\n    this.c = c;\n    this.v = d;\n    this.m = f;\n    this.i = this.g = this.l = null;\n    this.a = e;\n    this.h = this.f = null;\n  }\n\n  Xj.prototype.xb = function (a) {\n    this.h = a;\n    return this;\n  };\n\n  Xj.prototype.toString = function () {\n    if (this.m) {\n      var a = be(this.m.url);\n      a = ce(a.f, a.a, a.g, "/emulator/auth/handler");\n    } else a = ce("https", this.u, null, "/__/auth/handler");\n\n    J(a, "apiKey", this.o);\n    J(a, "appName", this.c);\n    J(a, "authType", this.v);\n\n    if (this.a.isOAuthProvider) {\n      var b = this.a;\n\n      try {\n        var c = _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].app(this.c).auth().ka();\n      } catch (h) {\n        c = null;\n      }\n\n      b.nb = c;\n      J(a, "providerId", this.a.providerId);\n      c = this.a;\n      b = Ve(c.Hb);\n\n      for (var d in b) {\n        b[d] = b[d].toString();\n      }\n\n      d = c.Pc;\n      b = nb(b);\n\n      for (var e = 0; e < d.length; e++) {\n        var f = d[e];\n        f in b && delete b[f];\n      }\n\n      c.ob && c.nb && !b[c.ob] && (b[c.ob] = c.nb);\n      mb(b) || J(a, "customParameters", Ue(b));\n    }\n\n    "function" === typeof this.a.Pb && (c = this.a.Pb(), c.length && J(a, "scopes", c.join(",")));\n    this.l ? J(a, "redirectUrl", this.l) : ie(a.b, "redirectUrl");\n    this.g ? J(a, "eventId", this.g) : ie(a.b, "eventId");\n    this.i ? J(a, "v", this.i) : ie(a.b, "v");\n    if (this.b) for (var g in this.b) {\n      this.b.hasOwnProperty(g) && !ae(a, g) && J(a, g, this.b[g]);\n    }\n    this.h ? J(a, "tid", this.h) : ie(a.b, "tid");\n    this.f ? J(a, "eid", this.f) : ie(a.b, "eid");\n    g = Yj(this.c);\n    g.length && J(a, "fw", g.join(","));\n    return a.toString();\n  };\n\n  function Yj(a) {\n    try {\n      return _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].app(a).auth().Ga();\n    } catch (b) {\n      return [];\n    }\n  }\n\n  function Zj(a, b, c, d, e, f) {\n    this.o = a;\n    this.g = b;\n    this.b = c;\n    this.f = f;\n    this.c = d || null;\n    this.i = e || null;\n    this.l = this.u = this.A = null;\n    this.h = [];\n    this.v = this.a = null;\n  }\n\n  function ak(a) {\n    var b = re();\n    return dj(a).then(function (c) {\n      a: {\n        var d = be(b),\n            e = d.f;\n        d = d.a;\n\n        for (var f = 0; f < c.length; f++) {\n          var g = c[f];\n          var h = d;\n          var n = e;\n          0 == g.indexOf("chrome-extension://") ? h = be(g).a == h && "chrome-extension" == n : "http" != n && "https" != n ? h = !1 : Ce.test(g) ? h = h == g : (g = g.split(".").join("\\\\."), h = new RegExp("^(.+\\\\." + g + "|" + g + ")$", "i").test(h));\n\n          if (h) {\n            c = !0;\n            break a;\n          }\n        }\n\n        c = !1;\n      }\n\n      if (!c) throw new yh(re());\n    });\n  }\n\n  function bk(a) {\n    if (a.v) return a.v;\n    a.v = Ee().then(function () {\n      if (!a.u) {\n        var b = a.c,\n            c = a.i,\n            d = Yj(a.b),\n            e = new Wj(a.o, a.g, a.b, a.f);\n        e.f = b;\n        e.b = c;\n        e.c = Za(d || []);\n        a.u = e.toString();\n      }\n\n      a.m = new Nj(a.u);\n      ck(a);\n    });\n    return a.v;\n  }\n\n  k = Zj.prototype;\n\n  k.Nb = function (a, b, c) {\n    var d = new t("popup-closed-by-user"),\n        e = new t("web-storage-unsupported"),\n        f = this,\n        g = !1;\n    return this.la().then(function () {\n      dk(f).then(function (h) {\n        h || (a && ye(a), b(e), g = !0);\n      });\n    }).s(function () {}).then(function () {\n      if (!g) return Be(a);\n    }).then(function () {\n      if (!g) return Ed(c).then(function () {\n        b(d);\n      });\n    });\n  };\n\n  k.Wb = function () {\n    var a = K();\n    return !Te(a) && !Xe(a);\n  };\n\n  k.Sb = function () {\n    return !1;\n  };\n\n  k.Lb = function (a, b, c, d, e, f, g, h) {\n    if (!a) return F(new t("popup-blocked"));\n    if (g && !Te()) return this.la().s(function (p) {\n      ye(a);\n      e(p);\n    }), d(), E();\n    this.a || (this.a = ak(ek(this)));\n    var n = this;\n    return this.a.then(function () {\n      var p = n.la().s(function (v) {\n        ye(a);\n        e(v);\n        throw v;\n      });\n      d();\n      return p;\n    }).then(function () {\n      sh(c);\n\n      if (!g) {\n        var p = fk(n.o, n.g, n.b, b, c, null, f, n.c, void 0, n.i, h, n.f);\n        se(p, a);\n      }\n    }).s(function (p) {\n      "auth/network-request-failed" == p.code && (n.a = null);\n      throw p;\n    });\n  };\n\n  function ek(a) {\n    a.l || (a.A = a.c ? Oe(a.c, Yj(a.b)) : null, a.l = new Ji(a.g, Ca(a.i), a.A), a.f && Qi(a.l, a.f));\n    return a.l;\n  }\n\n  k.Mb = function (a, b, c, d) {\n    this.a || (this.a = ak(ek(this)));\n    var e = this;\n    return this.a.then(function () {\n      sh(b);\n      var f = fk(e.o, e.g, e.b, a, b, re(), c, e.c, void 0, e.i, d, e.f);\n      se(f);\n    }).s(function (f) {\n      "auth/network-request-failed" == f.code && (e.a = null);\n      throw f;\n    });\n  };\n\n  k.la = function () {\n    var a = this;\n    return bk(this).then(function () {\n      return a.m.qb;\n    }).s(function () {\n      a.a = null;\n      throw new t("network-request-failed");\n    });\n  };\n\n  k.Zb = function () {\n    return !0;\n  };\n\n  function fk(a, b, c, d, e, f, g, h, n, p, v, B) {\n    a = new Xj(a, b, c, d, e, B);\n    a.l = f;\n    a.g = g;\n    a.i = h;\n    a.b = nb(n || null);\n    a.f = p;\n    return a.xb(v).toString();\n  }\n\n  function ck(a) {\n    if (!a.m) throw Error("IfcHandler must be initialized!");\n    Sj(a.m, function (b) {\n      var c = {};\n\n      if (b && b.authEvent) {\n        var d = !1;\n        b = uh(b.authEvent);\n\n        for (c = 0; c < a.h.length; c++) {\n          d = a.h[c](b) || d;\n        }\n\n        c = {};\n        c.status = d ? "ACK" : "ERROR";\n        return E(c);\n      }\n\n      c.status = "ERROR";\n      return E(c);\n    });\n  }\n\n  function dk(a) {\n    var b = {\n      type: "webStorageSupport"\n    };\n    return bk(a).then(function () {\n      return Rj(a.m, b);\n    }).then(function (c) {\n      if (c && c.length && "undefined" !== typeof c[0].webStorageSupport) return c[0].webStorageSupport;\n      throw Error();\n    });\n  }\n\n  k.Ea = function (a) {\n    this.h.push(a);\n  };\n\n  k.Ra = function (a) {\n    Xa(this.h, function (b) {\n      return b == a;\n    });\n  };\n\n  function gk(a) {\n    this.a = a || _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].INTERNAL.reactNative && _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].INTERNAL.reactNative.AsyncStorage;\n    if (!this.a) throw new t("internal-error", "The React Native compatibility library was not found.");\n    this.type = "asyncStorage";\n  }\n\n  k = gk.prototype;\n\n  k.get = function (a) {\n    return E(this.a.getItem(a)).then(function (b) {\n      return b && We(b);\n    });\n  };\n\n  k.set = function (a, b) {\n    return E(this.a.setItem(a, Ue(b)));\n  };\n\n  k.T = function (a) {\n    return E(this.a.removeItem(a));\n  };\n\n  k.ca = function () {};\n\n  k.ia = function () {};\n\n  function hk(a) {\n    this.b = a;\n    this.a = {};\n    this.f = q(this.c, this);\n  }\n\n  var ik = [];\n\n  function jk() {\n    var a = Je() ? self : null;\n    w(ik, function (c) {\n      c.b == a && (b = c);\n    });\n\n    if (!b) {\n      var b = new hk(a);\n      ik.push(b);\n    }\n\n    return b;\n  }\n\n  hk.prototype.c = function (a) {\n    var b = a.data.eventType,\n        c = a.data.eventId,\n        d = this.a[b];\n\n    if (d && 0 < d.length) {\n      a.ports[0].postMessage({\n        status: "ack",\n        eventId: c,\n        eventType: b,\n        response: null\n      });\n      var e = [];\n      w(d, function (f) {\n        e.push(E().then(function () {\n          return f(a.origin, a.data.data);\n        }));\n      });\n      Jc(e).then(function (f) {\n        var g = [];\n        w(f, function (h) {\n          g.push({\n            fulfilled: h.Ob,\n            value: h.value,\n            reason: h.reason ? h.reason.message : void 0\n          });\n        });\n        w(g, function (h) {\n          for (var n in h) {\n            "undefined" === typeof h[n] && delete h[n];\n          }\n        });\n        a.ports[0].postMessage({\n          status: "done",\n          eventId: c,\n          eventType: b,\n          response: g\n        });\n      });\n    }\n  };\n\n  function kk(a, b, c) {\n    mb(a.a) && a.b.addEventListener("message", a.f);\n    "undefined" === typeof a.a[b] && (a.a[b] = []);\n    a.a[b].push(c);\n  }\n\n  ;\n\n  function lk(a) {\n    this.a = a;\n  }\n\n  lk.prototype.postMessage = function (a, b) {\n    this.a.postMessage(a, b);\n  };\n\n  function mk(a) {\n    this.c = a;\n    this.b = !1;\n    this.a = [];\n  }\n\n  function nk(a, b, c, d) {\n    var e,\n        f = c || {},\n        g,\n        h,\n        n,\n        p = null;\n    if (a.b) return F(Error("connection_unavailable"));\n    var v = d ? 800 : 50,\n        B = "undefined" !== typeof MessageChannel ? new MessageChannel() : null;\n    return new D(function (A, Q) {\n      B ? (e = Math.floor(Math.random() * Math.pow(10, 20)).toString(), B.port1.start(), h = setTimeout(function () {\n        Q(Error("unsupported_event"));\n      }, v), g = function g(xa) {\n        xa.data.eventId === e && ("ack" === xa.data.status ? (clearTimeout(h), n = setTimeout(function () {\n          Q(Error("timeout"));\n        }, 3E3)) : "done" === xa.data.status ? (clearTimeout(n), "undefined" !== typeof xa.data.response ? A(xa.data.response) : Q(Error("unknown_error"))) : (clearTimeout(h), clearTimeout(n), Q(Error("invalid_response"))));\n      }, p = {\n        messageChannel: B,\n        onMessage: g\n      }, a.a.push(p), B.port1.addEventListener("message", g), a.c.postMessage({\n        eventType: b,\n        eventId: e,\n        data: f\n      }, [B.port2])) : Q(Error("connection_unavailable"));\n    }).then(function (A) {\n      ok(a, p);\n      return A;\n    }).s(function (A) {\n      ok(a, p);\n      throw A;\n    });\n  }\n\n  function ok(a, b) {\n    if (b) {\n      var c = b.messageChannel,\n          d = b.onMessage;\n      c && (c.port1.removeEventListener("message", d), c.port1.close());\n      Xa(a.a, function (e) {\n        return e == b;\n      });\n    }\n  }\n\n  mk.prototype.close = function () {\n    for (; 0 < this.a.length;) {\n      ok(this, this.a[0]);\n    }\n\n    this.b = !0;\n  };\n\n  function pk() {\n    if (!qk()) throw new t("web-storage-unsupported");\n    this.c = {};\n    this.a = [];\n    this.b = 0;\n    this.v = l.indexedDB;\n    this.type = "indexedDB";\n    this.g = this.m = this.f = this.l = null;\n    this.o = !1;\n    this.h = null;\n    var a = this;\n    Je() && self ? (this.m = jk(), kk(this.m, "keyChanged", function (b, c) {\n      return rk(a).then(function (d) {\n        0 < d.length && w(a.a, function (e) {\n          e(d);\n        });\n        return {\n          keyProcessed: Va(d, c.key)\n        };\n      });\n    }), kk(this.m, "ping", function () {\n      return E(["keyChanged"]);\n    })) : ff().then(function (b) {\n      if (a.h = b) a.g = new mk(new lk(b)), nk(a.g, "ping", null, !0).then(function (c) {\n        c[0].fulfilled && Va(c[0].value, "keyChanged") && (a.o = !0);\n      }).s(function () {});\n    });\n  }\n\n  var sk;\n\n  function tk(a) {\n    return new D(function (b, c) {\n      var d = a.v.deleteDatabase("firebaseLocalStorageDb");\n\n      d.onsuccess = function () {\n        b();\n      };\n\n      d.onerror = function (e) {\n        c(Error(e.target.error));\n      };\n    });\n  }\n\n  function uk(a) {\n    return new D(function (b, c) {\n      var d = a.v.open("firebaseLocalStorageDb", 1);\n\n      d.onerror = function (e) {\n        try {\n          e.preventDefault();\n        } catch (f) {}\n\n        c(Error(e.target.error));\n      };\n\n      d.onupgradeneeded = function (e) {\n        e = e.target.result;\n\n        try {\n          e.createObjectStore("firebaseLocalStorage", {\n            keyPath: "fbase_key"\n          });\n        } catch (f) {\n          c(f);\n        }\n      };\n\n      d.onsuccess = function (e) {\n        e = e.target.result;\n        e.objectStoreNames.contains("firebaseLocalStorage") ? b(e) : tk(a).then(function () {\n          return uk(a);\n        }).then(function (f) {\n          b(f);\n        }).s(function (f) {\n          c(f);\n        });\n      };\n    });\n  }\n\n  function vk(a) {\n    a.i || (a.i = uk(a));\n    return a.i;\n  }\n\n  function wk(a, b) {\n    function c(e, f) {\n      vk(a).then(b).then(e).s(function (g) {\n        if (3 < ++d) f(g);else return vk(a).then(function (h) {\n          h.close();\n          a.i = void 0;\n          return c(e, f);\n        });\n      });\n    }\n\n    var d = 0;\n    return new D(c);\n  }\n\n  function qk() {\n    try {\n      return !!l.indexedDB;\n    } catch (a) {\n      return !1;\n    }\n  }\n\n  function xk(a) {\n    return a.objectStore("firebaseLocalStorage");\n  }\n\n  function yk(a, b) {\n    return a.transaction(["firebaseLocalStorage"], b ? "readwrite" : "readonly");\n  }\n\n  function zk(a) {\n    return new D(function (b, c) {\n      a.onsuccess = function (d) {\n        d && d.target ? b(d.target.result) : b();\n      };\n\n      a.onerror = function (d) {\n        c(d.target.error);\n      };\n    });\n  }\n\n  k = pk.prototype;\n\n  k.set = function (a, b) {\n    var c = this,\n        d = !1;\n    return wk(this, function (e) {\n      e = xk(yk(e, !0));\n      return zk(e.get(a));\n    }).then(function (e) {\n      return wk(c, function (f) {\n        f = xk(yk(f, !0));\n        if (e) return e.value = b, zk(f.put(e));\n        c.b++;\n        d = !0;\n        var g = {};\n        g.fbase_key = a;\n        g.value = b;\n        return zk(f.add(g));\n      });\n    }).then(function () {\n      c.c[a] = b;\n      return Ak(c, a);\n    }).na(function () {\n      d && c.b--;\n    });\n  };\n\n  function Ak(a, b) {\n    return a.g && a.h && ef() === a.h ? nk(a.g, "keyChanged", {\n      key: b\n    }, a.o).then(function () {}).s(function () {}) : E();\n  }\n\n  k.get = function (a) {\n    return wk(this, function (b) {\n      return zk(xk(yk(b, !1)).get(a));\n    }).then(function (b) {\n      return b && b.value;\n    });\n  };\n\n  k.T = function (a) {\n    var b = this,\n        c = !1;\n    return wk(this, function (d) {\n      c = !0;\n      b.b++;\n      return zk(xk(yk(d, !0))["delete"](a));\n    }).then(function () {\n      delete b.c[a];\n      return Ak(b, a);\n    }).na(function () {\n      c && b.b--;\n    });\n  };\n\n  function rk(a) {\n    return vk(a).then(function (b) {\n      var c = xk(yk(b, !1));\n      return c.getAll ? zk(c.getAll()) : new D(function (d, e) {\n        var f = [],\n            g = c.openCursor();\n\n        g.onsuccess = function (h) {\n          (h = h.target.result) ? (f.push(h.value), h["continue"]()) : d(f);\n        };\n\n        g.onerror = function (h) {\n          e(h.target.error);\n        };\n      });\n    }).then(function (b) {\n      var c = {},\n          d = [];\n\n      if (0 == a.b) {\n        for (d = 0; d < b.length; d++) {\n          c[b[d].fbase_key] = b[d].value;\n        }\n\n        d = te(a.c, c);\n        a.c = c;\n      }\n\n      return d;\n    });\n  }\n\n  k.ca = function (a) {\n    0 == this.a.length && Bk(this);\n    this.a.push(a);\n  };\n\n  k.ia = function (a) {\n    Xa(this.a, function (b) {\n      return b == a;\n    });\n    0 == this.a.length && Ck(this);\n  };\n\n  function Bk(a) {\n    function b() {\n      a.f = setTimeout(function () {\n        a.l = rk(a).then(function (c) {\n          0 < c.length && w(a.a, function (d) {\n            d(c);\n          });\n        }).then(function () {\n          b();\n        }).s(function (c) {\n          "STOP_EVENT" != c.message && b();\n        });\n      }, 800);\n    }\n\n    Ck(a);\n    b();\n  }\n\n  function Ck(a) {\n    a.l && a.l.cancel("STOP_EVENT");\n    a.f && (clearTimeout(a.f), a.f = null);\n  }\n\n  ;\n\n  function Dk(a) {\n    var b = this,\n        c = null;\n    this.a = [];\n    this.type = "indexedDB";\n    this.c = a;\n    this.b = E().then(function () {\n      if (qk()) {\n        var d = Qe(),\n            e = "__sak" + d;\n        sk || (sk = new pk());\n        c = sk;\n        return c.set(e, d).then(function () {\n          return c.get(e);\n        }).then(function (f) {\n          if (f !== d) throw Error("indexedDB not supported!");\n          return c.T(e);\n        }).then(function () {\n          return c;\n        }).s(function () {\n          return b.c;\n        });\n      }\n\n      return b.c;\n    }).then(function (d) {\n      b.type = d.type;\n      d.ca(function (e) {\n        w(b.a, function (f) {\n          f(e);\n        });\n      });\n      return d;\n    });\n  }\n\n  k = Dk.prototype;\n\n  k.get = function (a) {\n    return this.b.then(function (b) {\n      return b.get(a);\n    });\n  };\n\n  k.set = function (a, b) {\n    return this.b.then(function (c) {\n      return c.set(a, b);\n    });\n  };\n\n  k.T = function (a) {\n    return this.b.then(function (b) {\n      return b.T(a);\n    });\n  };\n\n  k.ca = function (a) {\n    this.a.push(a);\n  };\n\n  k.ia = function (a) {\n    Xa(this.a, function (b) {\n      return b == a;\n    });\n  };\n\n  function Ek() {\n    this.a = {};\n    this.type = "inMemory";\n  }\n\n  k = Ek.prototype;\n\n  k.get = function (a) {\n    return E(this.a[a]);\n  };\n\n  k.set = function (a, b) {\n    this.a[a] = b;\n    return E();\n  };\n\n  k.T = function (a) {\n    delete this.a[a];\n    return E();\n  };\n\n  k.ca = function () {};\n\n  k.ia = function () {};\n\n  function Fk() {\n    if (!Gk()) {\n      if ("Node" == Ke()) throw new t("internal-error", "The LocalStorage compatibility library was not found.");\n      throw new t("web-storage-unsupported");\n    }\n\n    this.a = Hk() || _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].INTERNAL.node.localStorage;\n    this.type = "localStorage";\n  }\n\n  function Hk() {\n    try {\n      var a = l.localStorage,\n          b = Qe();\n      a && (a.setItem(b, "1"), a.removeItem(b));\n      return a;\n    } catch (c) {\n      return null;\n    }\n  }\n\n  function Gk() {\n    var a = "Node" == Ke();\n    a = Hk() || a && _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].INTERNAL.node && _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].INTERNAL.node.localStorage;\n    if (!a) return !1;\n\n    try {\n      return a.setItem("__sak", "1"), a.removeItem("__sak"), !0;\n    } catch (b) {\n      return !1;\n    }\n  }\n\n  k = Fk.prototype;\n\n  k.get = function (a) {\n    var b = this;\n    return E().then(function () {\n      var c = b.a.getItem(a);\n      return We(c);\n    });\n  };\n\n  k.set = function (a, b) {\n    var c = this;\n    return E().then(function () {\n      var d = Ue(b);\n      null === d ? c.T(a) : c.a.setItem(a, d);\n    });\n  };\n\n  k.T = function (a) {\n    var b = this;\n    return E().then(function () {\n      b.a.removeItem(a);\n    });\n  };\n\n  k.ca = function (a) {\n    l.window && nd(l.window, "storage", a);\n  };\n\n  k.ia = function (a) {\n    l.window && H(l.window, "storage", a);\n  };\n\n  function Ik() {\n    this.type = "nullStorage";\n  }\n\n  k = Ik.prototype;\n\n  k.get = function () {\n    return E(null);\n  };\n\n  k.set = function () {\n    return E();\n  };\n\n  k.T = function () {\n    return E();\n  };\n\n  k.ca = function () {};\n\n  k.ia = function () {};\n\n  function Jk() {\n    if (!Kk()) {\n      if ("Node" == Ke()) throw new t("internal-error", "The SessionStorage compatibility library was not found.");\n      throw new t("web-storage-unsupported");\n    }\n\n    this.a = Lk() || _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].INTERNAL.node.sessionStorage;\n    this.type = "sessionStorage";\n  }\n\n  function Lk() {\n    try {\n      var a = l.sessionStorage,\n          b = Qe();\n      a && (a.setItem(b, "1"), a.removeItem(b));\n      return a;\n    } catch (c) {\n      return null;\n    }\n  }\n\n  function Kk() {\n    var a = "Node" == Ke();\n    a = Lk() || a && _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].INTERNAL.node && _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].INTERNAL.node.sessionStorage;\n    if (!a) return !1;\n\n    try {\n      return a.setItem("__sak", "1"), a.removeItem("__sak"), !0;\n    } catch (b) {\n      return !1;\n    }\n  }\n\n  k = Jk.prototype;\n\n  k.get = function (a) {\n    var b = this;\n    return E().then(function () {\n      var c = b.a.getItem(a);\n      return We(c);\n    });\n  };\n\n  k.set = function (a, b) {\n    var c = this;\n    return E().then(function () {\n      var d = Ue(b);\n      null === d ? c.T(a) : c.a.setItem(a, d);\n    });\n  };\n\n  k.T = function (a) {\n    var b = this;\n    return E().then(function () {\n      b.a.removeItem(a);\n    });\n  };\n\n  k.ca = function () {};\n\n  k.ia = function () {};\n\n  function Mk() {\n    var a = {};\n    a.Browser = Nk;\n    a.Node = Ok;\n    a.ReactNative = Pk;\n    a.Worker = Qk;\n    this.a = a[Ke()];\n  }\n\n  var Rk,\n      Nk = {\n    D: Fk,\n    ab: Jk\n  },\n      Ok = {\n    D: Fk,\n    ab: Jk\n  },\n      Pk = {\n    D: gk,\n    ab: Ik\n  },\n      Qk = {\n    D: Fk,\n    ab: Ik\n  };\n  var Sk = {\n    qd: "local",\n    NONE: "none",\n    sd: "session"\n  };\n\n  function Tk(a) {\n    var b = new t("invalid-persistence-type"),\n        c = new t("unsupported-persistence-type");\n\n    a: {\n      for (d in Sk) {\n        if (Sk[d] == a) {\n          var d = !0;\n          break a;\n        }\n      }\n\n      d = !1;\n    }\n\n    if (!d || "string" !== typeof a) throw b;\n\n    switch (Ke()) {\n      case "ReactNative":\n        if ("session" === a) throw c;\n        break;\n\n      case "Node":\n        if ("none" !== a) throw c;\n        break;\n\n      case "Worker":\n        if ("session" === a || !qk() && "none" !== a) throw c;\n        break;\n\n      default:\n        if (!Pe() && "none" !== a) throw c;\n    }\n  }\n\n  function Uk() {\n    var a = !Xe(K()) && Ie() ? !0 : !1,\n        b = Te(),\n        c = Pe();\n    this.v = a;\n    this.h = b;\n    this.l = c;\n    this.a = {};\n    Rk || (Rk = new Mk());\n    a = Rk;\n\n    try {\n      this.g = !qe() && df() || !l.indexedDB ? new a.a.D() : new Dk(Je() ? new Ek() : new a.a.D());\n    } catch (d) {\n      this.g = new Ek(), this.h = !0;\n    }\n\n    try {\n      this.i = new a.a.ab();\n    } catch (d) {\n      this.i = new Ek();\n    }\n\n    this.m = new Ek();\n    this.f = q(this.Xb, this);\n    this.b = {};\n  }\n\n  var Vk;\n\n  function Wk() {\n    Vk || (Vk = new Uk());\n    return Vk;\n  }\n\n  function Xk(a, b) {\n    switch (b) {\n      case "session":\n        return a.i;\n\n      case "none":\n        return a.m;\n\n      default:\n        return a.g;\n    }\n  }\n\n  function Yk(a, b) {\n    return "firebase:" + a.name + (b ? ":" + b : "");\n  }\n\n  function Zk(a, b, c) {\n    var d = Yk(b, c),\n        e = Xk(a, b.D);\n    return a.get(b, c).then(function (f) {\n      var g = null;\n\n      try {\n        g = We(l.localStorage.getItem(d));\n      } catch (h) {}\n\n      if (g && !f) return l.localStorage.removeItem(d), a.set(b, g, c);\n      g && f && "localStorage" != e.type && l.localStorage.removeItem(d);\n    });\n  }\n\n  k = Uk.prototype;\n\n  k.get = function (a, b) {\n    return Xk(this, a.D).get(Yk(a, b));\n  };\n\n  function $k(a, b, c) {\n    c = Yk(b, c);\n    "local" == b.D && (a.b[c] = null);\n    return Xk(a, b.D).T(c);\n  }\n\n  k.set = function (a, b, c) {\n    var d = Yk(a, c),\n        e = this,\n        f = Xk(this, a.D);\n    return f.set(d, b).then(function () {\n      return f.get(d);\n    }).then(function (g) {\n      "local" == a.D && (e.b[d] = g);\n    });\n  };\n\n  k.addListener = function (a, b, c) {\n    a = Yk(a, b);\n    this.l && (this.b[a] = l.localStorage.getItem(a));\n    mb(this.a) && (Xk(this, "local").ca(this.f), this.h || (qe() || !df()) && l.indexedDB || !this.l || al(this));\n    this.a[a] || (this.a[a] = []);\n    this.a[a].push(c);\n  };\n\n  k.removeListener = function (a, b, c) {\n    a = Yk(a, b);\n    this.a[a] && (Xa(this.a[a], function (d) {\n      return d == c;\n    }), 0 == this.a[a].length && delete this.a[a]);\n    mb(this.a) && (Xk(this, "local").ia(this.f), bl(this));\n  };\n\n  function al(a) {\n    bl(a);\n    a.c = setInterval(function () {\n      for (var b in a.a) {\n        var c = l.localStorage.getItem(b),\n            d = a.b[b];\n        c != d && (a.b[b] = c, c = new bd({\n          type: "storage",\n          key: b,\n          target: window,\n          oldValue: d,\n          newValue: c,\n          a: !0\n        }), a.Xb(c));\n      }\n    }, 1E3);\n  }\n\n  function bl(a) {\n    a.c && (clearInterval(a.c), a.c = null);\n  }\n\n  k.Xb = function (a) {\n    if (a && a.g) {\n      var b = a.a.key;\n      if (null == b) for (var c in this.a) {\n        var d = this.b[c];\n        "undefined" === typeof d && (d = null);\n        var e = l.localStorage.getItem(c);\n        e !== d && (this.b[c] = e, this.lb(c));\n      } else if (0 == b.indexOf("firebase:") && this.a[b]) {\n        "undefined" !== typeof a.a.a ? Xk(this, "local").ia(this.f) : bl(this);\n        if (this.v) if (c = l.localStorage.getItem(b), d = a.a.newValue, d !== c) null !== d ? l.localStorage.setItem(b, d) : l.localStorage.removeItem(b);else if (this.b[b] === d && "undefined" === typeof a.a.a) return;\n        var f = this;\n\n        c = function c() {\n          if ("undefined" !== typeof a.a.a || f.b[b] !== l.localStorage.getItem(b)) f.b[b] = l.localStorage.getItem(b), f.lb(b);\n        };\n\n        Wb && ic && 10 == ic && l.localStorage.getItem(b) !== a.a.newValue && a.a.newValue !== a.a.oldValue ? setTimeout(c, 10) : c();\n      }\n    } else w(a, q(this.lb, this));\n  };\n\n  k.lb = function (a) {\n    this.a[a] && w(this.a[a], function (b) {\n      b();\n    });\n  };\n\n  function cl(a) {\n    this.a = a;\n    this.b = Wk();\n  }\n\n  var dl = {\n    name: "authEvent",\n    D: "local"\n  };\n\n  function el(a) {\n    return a.b.get(dl, a.a).then(function (b) {\n      return uh(b);\n    });\n  }\n\n  ;\n\n  function fl() {\n    this.a = Wk();\n  }\n\n  ;\n\n  function gl() {\n    this.b = -1;\n  }\n\n  ;\n\n  function hl(a, b) {\n    this.b = il;\n    this.f = l.Uint8Array ? new Uint8Array(this.b) : Array(this.b);\n    this.g = this.c = 0;\n    this.a = [];\n    this.i = a;\n    this.h = b;\n    this.l = l.Int32Array ? new Int32Array(64) : Array(64);\n    void 0 === jl && (l.Int32Array ? jl = new Int32Array(kl) : jl = kl);\n    this.reset();\n  }\n\n  var jl;\n  r(hl, gl);\n\n  for (var il = 64, ll = il - 1, ml = [], nl = 0; nl < ll; nl++) {\n    ml[nl] = 0;\n  }\n\n  var ol = Ya(128, ml);\n\n  hl.prototype.reset = function () {\n    this.g = this.c = 0;\n    this.a = l.Int32Array ? new Int32Array(this.h) : Za(this.h);\n  };\n\n  function pl(a) {\n    for (var b = a.f, c = a.l, d = 0, e = 0; e < b.length;) {\n      c[d++] = b[e] << 24 | b[e + 1] << 16 | b[e + 2] << 8 | b[e + 3], e = 4 * d;\n    }\n\n    for (b = 16; 64 > b; b++) {\n      e = c[b - 15] | 0;\n      d = c[b - 2] | 0;\n      var f = (c[b - 16] | 0) + ((e >>> 7 | e << 25) ^ (e >>> 18 | e << 14) ^ e >>> 3) | 0,\n          g = (c[b - 7] | 0) + ((d >>> 17 | d << 15) ^ (d >>> 19 | d << 13) ^ d >>> 10) | 0;\n      c[b] = f + g | 0;\n    }\n\n    d = a.a[0] | 0;\n    e = a.a[1] | 0;\n    var h = a.a[2] | 0,\n        n = a.a[3] | 0,\n        p = a.a[4] | 0,\n        v = a.a[5] | 0,\n        B = a.a[6] | 0;\n    f = a.a[7] | 0;\n\n    for (b = 0; 64 > b; b++) {\n      var A = ((d >>> 2 | d << 30) ^ (d >>> 13 | d << 19) ^ (d >>> 22 | d << 10)) + (d & e ^ d & h ^ e & h) | 0;\n      g = p & v ^ ~p & B;\n      f = f + ((p >>> 6 | p << 26) ^ (p >>> 11 | p << 21) ^ (p >>> 25 | p << 7)) | 0;\n      g = g + (jl[b] | 0) | 0;\n      g = f + (g + (c[b] | 0) | 0) | 0;\n      f = B;\n      B = v;\n      v = p;\n      p = n + g | 0;\n      n = h;\n      h = e;\n      e = d;\n      d = g + A | 0;\n    }\n\n    a.a[0] = a.a[0] + d | 0;\n    a.a[1] = a.a[1] + e | 0;\n    a.a[2] = a.a[2] + h | 0;\n    a.a[3] = a.a[3] + n | 0;\n    a.a[4] = a.a[4] + p | 0;\n    a.a[5] = a.a[5] + v | 0;\n    a.a[6] = a.a[6] + B | 0;\n    a.a[7] = a.a[7] + f | 0;\n  }\n\n  function ql(a, b, c) {\n    void 0 === c && (c = b.length);\n    var d = 0,\n        e = a.c;\n    if ("string" === typeof b) for (; d < c;) {\n      a.f[e++] = b.charCodeAt(d++), e == a.b && (pl(a), e = 0);\n    } else if (na(b)) for (; d < c;) {\n      var f = b[d++];\n      if (!("number" == typeof f && 0 <= f && 255 >= f && f == (f | 0))) throw Error("message must be a byte array");\n      a.f[e++] = f;\n      e == a.b && (pl(a), e = 0);\n    } else throw Error("message must be string or array");\n    a.c = e;\n    a.g += c;\n  }\n\n  var kl = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];\n\n  function rl() {\n    hl.call(this, 8, sl);\n  }\n\n  r(rl, hl);\n  var sl = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225];\n\n  function tl(a, b, c, d, e, f) {\n    this.m = a;\n    this.i = b;\n    this.l = c;\n    this.v = d || null;\n    this.u = e || null;\n    this.o = f;\n    this.h = b + ":" + c;\n    this.A = new fl();\n    this.g = new cl(this.h);\n    this.f = null;\n    this.b = [];\n    this.a = this.c = null;\n  }\n\n  function ul(a) {\n    return new t("invalid-cordova-configuration", a);\n  }\n\n  k = tl.prototype;\n\n  k.la = function () {\n    return this.Ia ? this.Ia : this.Ia = Fe().then(function () {\n      if ("function" !== typeof L("universalLinks.subscribe", l)) throw ul("cordova-universal-links-plugin-fix is not installed");\n      if ("undefined" === typeof L("BuildInfo.packageName", l)) throw ul("cordova-plugin-buildinfo is not installed");\n      if ("function" !== typeof L("cordova.plugins.browsertab.openUrl", l)) throw ul("cordova-plugin-browsertab is not installed");\n      if ("function" !== typeof L("cordova.InAppBrowser.open", l)) throw ul("cordova-plugin-inappbrowser is not installed");\n    }, function () {\n      throw new t("cordova-not-ready");\n    });\n  };\n\n  function vl() {\n    for (var a = 20, b = []; 0 < a;) {\n      b.push("1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(Math.floor(62 * Math.random()))), a--;\n    }\n\n    return b.join("");\n  }\n\n  function wl(a) {\n    var b = new rl();\n    ql(b, a);\n    a = [];\n    var c = 8 * b.g;\n    56 > b.c ? ql(b, ol, 56 - b.c) : ql(b, ol, b.b - (b.c - 56));\n\n    for (var d = 63; 56 <= d; d--) {\n      b.f[d] = c & 255, c /= 256;\n    }\n\n    pl(b);\n\n    for (d = c = 0; d < b.i; d++) {\n      for (var e = 24; 0 <= e; e -= 8) {\n        a[c++] = b.a[d] >> e & 255;\n      }\n    }\n\n    return dg(a);\n  }\n\n  k.Nb = function (a, b) {\n    b(new t("operation-not-supported-in-this-environment"));\n    return E();\n  };\n\n  k.Lb = function () {\n    return F(new t("operation-not-supported-in-this-environment"));\n  };\n\n  k.Zb = function () {\n    return !1;\n  };\n\n  k.Wb = function () {\n    return !0;\n  };\n\n  k.Sb = function () {\n    return !0;\n  };\n\n  k.Mb = function (a, b, c, d) {\n    if (this.c) return F(new t("redirect-operation-pending"));\n    var e = this,\n        f = l.document,\n        g = null,\n        h = null,\n        n = null,\n        p = null;\n    return this.c = E().then(function () {\n      sh(b);\n      return xl(e);\n    }).then(function () {\n      return yl(e, a, b, c, d);\n    }).then(function () {\n      return new D(function (v, B) {\n        h = function h() {\n          var A = L("cordova.plugins.browsertab.close", l);\n          v();\n          "function" === typeof A && A();\n          e.a && "function" === typeof e.a.close && (e.a.close(), e.a = null);\n          return !1;\n        };\n\n        e.Ea(h);\n\n        n = function n() {\n          g || (g = Ed(2E3).then(function () {\n            B(new t("redirect-cancelled-by-user"));\n          }));\n        };\n\n        p = function p() {\n          $e() && n();\n        };\n\n        f.addEventListener("resume", n, !1);\n        K().toLowerCase().match(/android/) || f.addEventListener("visibilitychange", p, !1);\n      }).s(function (v) {\n        return zl(e).then(function () {\n          throw v;\n        });\n      });\n    }).na(function () {\n      n && f.removeEventListener("resume", n, !1);\n      p && f.removeEventListener("visibilitychange", p, !1);\n      g && g.cancel();\n      h && e.Ra(h);\n      e.c = null;\n    });\n  };\n\n  function yl(a, b, c, d, e) {\n    var f = vl(),\n        g = new th(b, d, null, f, new t("no-auth-event"), null, e),\n        h = L("BuildInfo.packageName", l);\n    if ("string" !== typeof h) throw new t("invalid-cordova-configuration");\n    var n = L("BuildInfo.displayName", l),\n        p = {};\n    if (K().toLowerCase().match(/iphone|ipad|ipod/)) p.ibi = h;else if (K().toLowerCase().match(/android/)) p.apn = h;else return F(new t("operation-not-supported-in-this-environment"));\n    n && (p.appDisplayName = n);\n    f = wl(f);\n    p.sessionId = f;\n    var v = fk(a.m, a.i, a.l, b, c, null, d, a.v, p, a.u, e, a.o);\n    return a.la().then(function () {\n      var B = a.h;\n      return a.A.a.set(dl, g.w(), B);\n    }).then(function () {\n      var B = L("cordova.plugins.browsertab.isAvailable", l);\n      if ("function" !== typeof B) throw new t("invalid-cordova-configuration");\n      var A = null;\n      B(function (Q) {\n        if (Q) {\n          A = L("cordova.plugins.browsertab.openUrl", l);\n          if ("function" !== typeof A) throw new t("invalid-cordova-configuration");\n          A(v);\n        } else {\n          A = L("cordova.InAppBrowser.open", l);\n          if ("function" !== typeof A) throw new t("invalid-cordova-configuration");\n          Q = K();\n          a.a = A(v, Q.match(/(iPad|iPhone|iPod).*OS 7_\\d/i) || Q.match(/(iPad|iPhone|iPod).*OS 8_\\d/i) ? "_blank" : "_system", "location=yes");\n        }\n      });\n    });\n  }\n\n  function Al(a, b) {\n    for (var c = 0; c < a.b.length; c++) {\n      try {\n        a.b[c](b);\n      } catch (d) {}\n    }\n  }\n\n  function xl(a) {\n    a.f || (a.f = a.la().then(function () {\n      return new D(function (b) {\n        function c(d) {\n          b(d);\n          a.Ra(c);\n          return !1;\n        }\n\n        a.Ea(c);\n        Bl(a);\n      });\n    }));\n    return a.f;\n  }\n\n  function zl(a) {\n    var b = null;\n    return el(a.g).then(function (c) {\n      b = c;\n      c = a.g;\n      return $k(c.b, dl, c.a);\n    }).then(function () {\n      return b;\n    });\n  }\n\n  function Bl(a) {\n    function b(g) {\n      d = !0;\n      e && e.cancel();\n      zl(a).then(function (h) {\n        var n = c;\n\n        if (h && g && g.url) {\n          var p = null;\n          n = yg(g.url);\n          -1 != n.indexOf("/__/auth/callback") && (p = be(n), p = We(ae(p, "firebaseError") || null), p = (p = "object" === typeof p ? Aa(p) : null) ? new th(h.c, h.b, null, null, p, null, h.S()) : new th(h.c, h.b, n, h.f, null, null, h.S()));\n          n = p || c;\n        }\n\n        Al(a, n);\n      });\n    }\n\n    var c = new th("unknown", null, null, null, new t("no-auth-event")),\n        d = !1,\n        e = Ed(500).then(function () {\n      return zl(a).then(function () {\n        d || Al(a, c);\n      });\n    }),\n        f = l.handleOpenURL;\n\n    l.handleOpenURL = function (g) {\n      0 == g.toLowerCase().indexOf(L("BuildInfo.packageName", l).toLowerCase() + "://") && b({\n        url: g\n      });\n      if ("function" === typeof f) try {\n        f(g);\n      } catch (h) {\n        console.error(h);\n      }\n    };\n\n    wh || (wh = new vh());\n    xh(b);\n  }\n\n  k.Ea = function (a) {\n    this.b.push(a);\n    xl(this).s(function (b) {\n      "auth/invalid-cordova-configuration" === b.code && (b = new th("unknown", null, null, null, new t("no-auth-event")), a(b));\n    });\n  };\n\n  k.Ra = function (a) {\n    Xa(this.b, function (b) {\n      return b == a;\n    });\n  };\n\n  function Cl(a) {\n    this.a = a;\n    this.b = Wk();\n  }\n\n  var Dl = {\n    name: "pendingRedirect",\n    D: "session"\n  };\n\n  function El(a) {\n    return a.b.set(Dl, "pending", a.a);\n  }\n\n  function Fl(a) {\n    return $k(a.b, Dl, a.a);\n  }\n\n  function Gl(a) {\n    return a.b.get(Dl, a.a).then(function (b) {\n      return "pending" == b;\n    });\n  }\n\n  ;\n\n  function Hl(a, b, c, d) {\n    this.i = {};\n    this.u = 0;\n    this.O = a;\n    this.m = b;\n    this.v = c;\n    this.G = d;\n    this.h = [];\n    this.f = !1;\n    this.l = q(this.o, this);\n    this.b = new Il();\n    this.A = new Jl();\n    this.g = new Cl(Kl(this.m, this.v));\n    this.c = {};\n    this.c.unknown = this.b;\n    this.c.signInViaRedirect = this.b;\n    this.c.linkViaRedirect = this.b;\n    this.c.reauthViaRedirect = this.b;\n    this.c.signInViaPopup = this.A;\n    this.c.linkViaPopup = this.A;\n    this.c.reauthViaPopup = this.A;\n    this.a = Ll(this.O, this.m, this.v, Da, this.G);\n  }\n\n  function Ll(a, b, c, d, e) {\n    var f = _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].SDK_VERSION || null;\n    return Ge() ? new tl(a, b, c, f, d, e) : new Zj(a, b, c, f, d, e);\n  }\n\n  Hl.prototype.reset = function () {\n    this.f = !1;\n    this.a.Ra(this.l);\n    this.a = Ll(this.O, this.m, this.v, null, this.G);\n    this.i = {};\n  };\n\n  function Ml(a) {\n    a.f || (a.f = !0, a.a.Ea(a.l));\n    var b = a.a;\n    return a.a.la().s(function (c) {\n      a.a == b && a.reset();\n      throw c;\n    });\n  }\n\n  function Nl(a) {\n    a.a.Wb() && Ml(a).s(function (b) {\n      var c = new th("unknown", null, null, null, new t("operation-not-supported-in-this-environment"));\n      Ol(b) && a.o(c);\n    });\n    a.a.Sb() || Pl(a.b);\n  }\n\n  function Ql(a, b) {\n    Va(a.h, b) || a.h.push(b);\n    a.f || Gl(a.g).then(function (c) {\n      c ? Fl(a.g).then(function () {\n        Ml(a).s(function (d) {\n          var e = new th("unknown", null, null, null, new t("operation-not-supported-in-this-environment"));\n          Ol(d) && a.o(e);\n        });\n      }) : Nl(a);\n    }).s(function () {\n      Nl(a);\n    });\n  }\n\n  function Rl(a, b) {\n    Xa(a.h, function (c) {\n      return c == b;\n    });\n  }\n\n  Hl.prototype.o = function (a) {\n    if (!a) throw new t("invalid-auth-event");\n    6E5 <= va() - this.u && (this.i = {}, this.u = 0);\n    if (a && a.getUid() && this.i.hasOwnProperty(a.getUid())) return !1;\n\n    for (var b = !1, c = 0; c < this.h.length; c++) {\n      var d = this.h[c];\n\n      if (d.Eb(a.c, a.b)) {\n        if (b = this.c[a.c]) b.h(a, d), a && (a.f || a.b) && (this.i[a.getUid()] = !0, this.u = va());\n        b = !0;\n        break;\n      }\n    }\n\n    Pl(this.b);\n    return b;\n  };\n\n  var Sl = new Ze(2E3, 1E4),\n      Tl = new Ze(3E4, 6E4);\n\n  Hl.prototype.qa = function () {\n    return this.b.qa();\n  };\n\n  function Ul(a, b, c, d, e, f, g) {\n    return a.a.Lb(b, c, d, function () {\n      a.f || (a.f = !0, a.a.Ea(a.l));\n    }, function () {\n      a.reset();\n    }, e, f, g);\n  }\n\n  function Ol(a) {\n    return a && "auth/cordova-not-ready" == a.code ? !0 : !1;\n  }\n\n  function Vl(a, b, c, d, e) {\n    var f;\n    return El(a.g).then(function () {\n      return a.a.Mb(b, c, d, e).s(function (g) {\n        if (Ol(g)) throw new t("operation-not-supported-in-this-environment");\n        f = g;\n        return Fl(a.g).then(function () {\n          throw f;\n        });\n      }).then(function () {\n        return a.a.Zb() ? new D(function () {}) : Fl(a.g).then(function () {\n          return a.qa();\n        }).then(function () {}).s(function () {});\n      });\n    });\n  }\n\n  function Wl(a, b, c, d, e) {\n    return a.a.Nb(d, function (f) {\n      b.ma(c, null, f, e);\n    }, Sl.get());\n  }\n\n  var Xl = {};\n\n  function Kl(a, b, c) {\n    a = a + ":" + b;\n    c && (a = a + ":" + c.url);\n    return a;\n  }\n\n  function Yl(a, b, c, d) {\n    var e = Kl(b, c, d);\n    Xl[e] || (Xl[e] = new Hl(a, b, c, d));\n    return Xl[e];\n  }\n\n  function Il() {\n    this.b = null;\n    this.f = [];\n    this.c = [];\n    this.a = null;\n    this.i = this.g = !1;\n  }\n\n  Il.prototype.reset = function () {\n    this.b = null;\n    this.a && (this.a.cancel(), this.a = null);\n  };\n\n  Il.prototype.h = function (a, b) {\n    if (a) {\n      this.reset();\n      this.g = !0;\n      var c = a.c,\n          d = a.b,\n          e = a.a && "auth/web-storage-unsupported" == a.a.code,\n          f = a.a && "auth/operation-not-supported-in-this-environment" == a.a.code;\n      this.i = !(!e && !f);\n      "unknown" != c || e || f ? a.a ? (Zl(this, !0, null, a.a), E()) : b.Fa(c, d) ? $l(this, a, b) : F(new t("invalid-auth-event")) : (Zl(this, !1, null, null), E());\n    } else F(new t("invalid-auth-event"));\n  };\n\n  function Pl(a) {\n    a.g || (a.g = !0, Zl(a, !1, null, null));\n  }\n\n  function am(a) {\n    a.g && !a.i && Zl(a, !1, null, null);\n  }\n\n  function $l(a, b, c) {\n    c = c.Fa(b.c, b.b);\n    var d = b.g,\n        e = b.f,\n        f = b.i,\n        g = b.S(),\n        h = !!b.c.match(/Redirect$/);\n    c(d, e, g, f).then(function (n) {\n      Zl(a, h, n, null);\n    }).s(function (n) {\n      Zl(a, h, null, n);\n    });\n  }\n\n  function bm(a, b) {\n    a.b = function () {\n      return F(b);\n    };\n\n    if (a.c.length) for (var c = 0; c < a.c.length; c++) {\n      a.c[c](b);\n    }\n  }\n\n  function cm(a, b) {\n    a.b = function () {\n      return E(b);\n    };\n\n    if (a.f.length) for (var c = 0; c < a.f.length; c++) {\n      a.f[c](b);\n    }\n  }\n\n  function Zl(a, b, c, d) {\n    b ? d ? bm(a, d) : cm(a, c) : cm(a, {\n      user: null\n    });\n    a.f = [];\n    a.c = [];\n  }\n\n  Il.prototype.qa = function () {\n    var a = this;\n    return new D(function (b, c) {\n      a.b ? a.b().then(b, c) : (a.f.push(b), a.c.push(c), dm(a));\n    });\n  };\n\n  function dm(a) {\n    var b = new t("timeout");\n    a.a && a.a.cancel();\n    a.a = Ed(Tl.get()).then(function () {\n      a.b || (a.g = !0, Zl(a, !0, null, b));\n    });\n  }\n\n  function Jl() {}\n\n  Jl.prototype.h = function (a, b) {\n    if (a) {\n      var c = a.c,\n          d = a.b;\n      a.a ? (b.ma(a.c, null, a.a, a.b), E()) : b.Fa(c, d) ? em(a, b) : F(new t("invalid-auth-event"));\n    } else F(new t("invalid-auth-event"));\n  };\n\n  function em(a, b) {\n    var c = a.b,\n        d = a.c;\n    b.Fa(d, c)(a.g, a.f, a.S(), a.i).then(function (e) {\n      b.ma(d, e, null, c);\n    }).s(function (e) {\n      b.ma(d, null, e, c);\n    });\n  }\n\n  ;\n\n  function fm() {\n    this.hb = !1;\n    Object.defineProperty(this, "appVerificationDisabled", {\n      get: function get() {\n        return this.hb;\n      },\n      set: function set(a) {\n        this.hb = a;\n      },\n      enumerable: !1\n    });\n  }\n\n  ;\n\n  function gm(a, b) {\n    this.a = b;\n    M(this, "verificationId", a);\n  }\n\n  gm.prototype.confirm = function (a) {\n    a = qh(this.verificationId, a);\n    return this.a(a);\n  };\n\n  function hm(a, b, c, d) {\n    return new mh(a).eb(b, c).then(function (e) {\n      return new gm(e, d);\n    });\n  }\n\n  ;\n\n  function im(a) {\n    var b = jg(a);\n    if (!(b && b.exp && b.auth_time && b.iat)) throw new t("internal-error", "An internal error occurred. The token obtained by Firebase appears to be malformed. Please retry the operation.");\n    N(this, {\n      token: a,\n      expirationTime: cf(1E3 * b.exp),\n      authTime: cf(1E3 * b.auth_time),\n      issuedAtTime: cf(1E3 * b.iat),\n      signInProvider: b.firebase && b.firebase.sign_in_provider ? b.firebase.sign_in_provider : null,\n      signInSecondFactor: b.firebase && b.firebase.sign_in_second_factor ? b.firebase.sign_in_second_factor : null,\n      claims: b\n    });\n  }\n\n  ;\n\n  function jm(a, b, c) {\n    var d = b && b[km];\n    if (!d) throw new t("argument-error", "Internal assert: Invalid MultiFactorResolver");\n    this.a = a;\n    this.f = nb(b);\n    this.g = c;\n    this.c = new zg(null, d);\n    this.b = [];\n    var e = this;\n    w(b[lm] || [], function (f) {\n      (f = uf(f)) && e.b.push(f);\n    });\n    M(this, "auth", this.a);\n    M(this, "session", this.c);\n    M(this, "hints", this.b);\n  }\n\n  var lm = "mfaInfo",\n      km = "mfaPendingCredential";\n\n  jm.prototype.Qc = function (a) {\n    var b = this;\n    return a.rb(this.a.a, this.c).then(function (c) {\n      var d = nb(b.f);\n      delete d[lm];\n      delete d[km];\n      z(d, c);\n      return b.g(d);\n    });\n  };\n\n  function mm(a, b, c, d) {\n    t.call(this, "multi-factor-auth-required", d, b);\n    this.b = new jm(a, b, c);\n    M(this, "resolver", this.b);\n  }\n\n  r(mm, t);\n\n  function nm(a, b, c) {\n    if (a && m(a.serverResponse) && "auth/multi-factor-auth-required" === a.code) try {\n      return new mm(b, a.serverResponse, c, a.message);\n    } catch (d) {}\n    return null;\n  }\n\n  ;\n\n  function om() {}\n\n  om.prototype.rb = function (a, b, c) {\n    return b.type == Ag ? pm(this, a, b, c) : qm(this, a, b);\n  };\n\n  function pm(a, b, c, d) {\n    return c.Ha().then(function (e) {\n      e = {\n        idToken: e\n      };\n      "undefined" !== typeof d && (e.displayName = d);\n      z(e, {\n        phoneVerificationInfo: ih(a.a)\n      });\n      return O(b, Hj, e);\n    });\n  }\n\n  function qm(a, b, c) {\n    return c.Ha().then(function (d) {\n      d = {\n        mfaPendingCredential: d\n      };\n      z(d, {\n        phoneVerificationInfo: ih(a.a)\n      });\n      return O(b, Ij, d);\n    });\n  }\n\n  function rm(a) {\n    M(this, "factorId", a.fa);\n    this.a = a;\n  }\n\n  r(rm, om);\n\n  function sm(a) {\n    rm.call(this, a);\n    if (this.a.fa != mh.PROVIDER_ID) throw new t("argument-error", "firebase.auth.PhoneMultiFactorAssertion requires a valid firebase.auth.PhoneAuthCredential");\n  }\n\n  r(sm, rm);\n\n  function tm(a, b) {\n    G.call(this, a);\n\n    for (var c in b) {\n      this[c] = b[c];\n    }\n  }\n\n  r(tm, G);\n\n  function um(a, b) {\n    this.a = a;\n    this.b = [];\n    this.c = q(this.xc, this);\n    nd(this.a, "userReloaded", this.c);\n    var c = [];\n    b && b.multiFactor && b.multiFactor.enrolledFactors && w(b.multiFactor.enrolledFactors, function (d) {\n      var e = null,\n          f = {};\n\n      if (d) {\n        d.uid && (f[rf] = d.uid);\n        d.displayName && (f[sf] = d.displayName);\n        d.enrollmentTime && (f[tf] = new Date(d.enrollmentTime).toISOString());\n        d.phoneNumber && (f[qf] = d.phoneNumber);\n\n        try {\n          e = new vf(f);\n        } catch (g) {}\n\n        d = e;\n      } else d = null;\n\n      d && c.push(d);\n    });\n    vm(this, c);\n  }\n\n  function wm(a) {\n    var b = [];\n    w(a.mfaInfo || [], function (c) {\n      (c = uf(c)) && b.push(c);\n    });\n    return b;\n  }\n\n  k = um.prototype;\n\n  k.xc = function (a) {\n    vm(this, wm(a.gd));\n  };\n\n  function vm(a, b) {\n    a.b = b;\n    M(a, "enrolledFactors", b);\n  }\n\n  k.Qb = function () {\n    return this.a.I().then(function (a) {\n      return new zg(a, null);\n    });\n  };\n\n  k.ec = function (a, b) {\n    var c = this,\n        d = this.a.a;\n    return this.Qb().then(function (e) {\n      return a.rb(d, e, b);\n    }).then(function (e) {\n      xm(c.a, e);\n      return c.a.reload();\n    });\n  };\n\n  k.ad = function (a) {\n    var b = this,\n        c = "string" === typeof a ? a : a.uid,\n        d = this.a.a;\n    return this.a.I().then(function (e) {\n      return O(d, Mj, {\n        idToken: e,\n        mfaEnrollmentId: c\n      });\n    }).then(function (e) {\n      var f = Qa(b.b, function (g) {\n        return g.uid != c;\n      });\n      vm(b, f);\n      xm(b.a, e);\n      return b.a.reload().s(function (g) {\n        if ("auth/user-token-expired" != g.code) throw g;\n      });\n    });\n  };\n\n  k.w = function () {\n    return {\n      multiFactor: {\n        enrolledFactors: Ra(this.b, function (a) {\n          return a.w();\n        })\n      }\n    };\n  };\n\n  function ym(a, b, c) {\n    this.h = a;\n    this.i = b;\n    this.g = c;\n    this.c = 3E4;\n    this.f = 96E4;\n    this.b = null;\n    this.a = this.c;\n    if (this.f < this.c) throw Error("Proactive refresh lower bound greater than upper bound!");\n  }\n\n  ym.prototype.start = function () {\n    this.a = this.c;\n    zm(this, !0);\n  };\n\n  function Am(a, b) {\n    if (b) return a.a = a.c, a.g();\n    b = a.a;\n    a.a *= 2;\n    a.a > a.f && (a.a = a.f);\n    return b;\n  }\n\n  function zm(a, b) {\n    a.stop();\n    a.b = Ed(Am(a, b)).then(function () {\n      return af();\n    }).then(function () {\n      return a.h();\n    }).then(function () {\n      zm(a, !0);\n    }).s(function (c) {\n      a.i(c) && zm(a, !1);\n    });\n  }\n\n  ym.prototype.stop = function () {\n    this.b && (this.b.cancel(), this.b = null);\n  };\n\n  function Bm(a) {\n    this.c = a;\n    this.b = this.a = null;\n  }\n\n  Bm.prototype.w = function () {\n    return {\n      apiKey: this.c.c,\n      refreshToken: this.a,\n      accessToken: this.b && this.b.toString(),\n      expirationTime: Cm(this)\n    };\n  };\n\n  function Cm(a) {\n    return a.b && 1E3 * a.b.c || 0;\n  }\n\n  function Dm(a, b) {\n    var c = b.refreshToken;\n    a.b = kg(b[Eg] || "");\n    a.a = c;\n  }\n\n  function Em(a, b) {\n    a.b = b.b;\n    a.a = b.a;\n  }\n\n  function Fm(a, b) {\n    return Xi(a.c, b).then(function (c) {\n      a.b = kg(c.access_token);\n      a.a = c.refresh_token;\n      return {\n        accessToken: a.b.toString(),\n        refreshToken: a.a\n      };\n    }).s(function (c) {\n      "auth/user-token-expired" == c.code && (a.a = null);\n      throw c;\n    });\n  }\n\n  Bm.prototype.getToken = function (a) {\n    a = !!a;\n    return this.b && !this.a ? F(new t("user-token-expired")) : a || !this.b || va() > Cm(this) - 3E4 ? this.a ? Fm(this, {\n      grant_type: "refresh_token",\n      refresh_token: this.a\n    }) : E(null) : E({\n      accessToken: this.b.toString(),\n      refreshToken: this.a\n    });\n  };\n\n  function Gm(a, b) {\n    this.a = a || null;\n    this.b = b || null;\n    N(this, {\n      lastSignInTime: cf(b || null),\n      creationTime: cf(a || null)\n    });\n  }\n\n  function Hm(a) {\n    return new Gm(a.a, a.b);\n  }\n\n  Gm.prototype.w = function () {\n    return {\n      lastLoginAt: this.b,\n      createdAt: this.a\n    };\n  };\n\n  function Im(a, b, c, d, e, f) {\n    N(this, {\n      uid: a,\n      displayName: d || null,\n      photoURL: e || null,\n      email: c || null,\n      phoneNumber: f || null,\n      providerId: b\n    });\n  }\n\n  function Jm(a, b, c) {\n    this.G = [];\n    this.l = a.apiKey;\n    this.m = a.appName;\n    this.o = a.authDomain || null;\n    var d = _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].SDK_VERSION ? Oe(_firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].SDK_VERSION) : null;\n    this.a = new Ji(this.l, Ca(Da), d);\n    a.emulatorConfig && Qi(this.a, a.emulatorConfig);\n    this.b = new Bm(this.a);\n    Km(this, b[Eg]);\n    Dm(this.b, b);\n    M(this, "refreshToken", this.b.a);\n    Lm(this, c || {});\n    I.call(this);\n    this.P = !1;\n    this.o && Re() && (this.i = Yl(this.o, this.l, this.m));\n    this.R = [];\n    this.f = null;\n    this.u = Mm(this);\n    this.$ = q(this.gb, this);\n    var e = this;\n    this.pa = null;\n\n    this.Ba = function (f) {\n      e.wa(f.h);\n    };\n\n    this.ba = null;\n\n    this.za = function (f) {\n      Qi(e.a, f.c);\n    };\n\n    this.W = null;\n    this.X = [];\n\n    this.Aa = function (f) {\n      Nm(e, f.f);\n    };\n\n    this.aa = null;\n    this.N = new um(this, c);\n    M(this, "multiFactor", this.N);\n  }\n\n  r(Jm, I);\n\n  Jm.prototype.wa = function (a) {\n    this.pa = a;\n    Pi(this.a, a);\n  };\n\n  Jm.prototype.ka = function () {\n    return this.pa;\n  };\n\n  function Om(a, b) {\n    a.ba && H(a.ba, "languageCodeChanged", a.Ba);\n    (a.ba = b) && nd(b, "languageCodeChanged", a.Ba);\n  }\n\n  function Pm(a, b) {\n    a.W && H(a.W, "emulatorConfigChanged", a.za);\n    (a.W = b) && nd(b, "emulatorConfigChanged", a.za);\n  }\n\n  function Nm(a, b) {\n    a.X = b;\n    Si(a.a, _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].SDK_VERSION ? Oe(_firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].SDK_VERSION, a.X) : null);\n  }\n\n  Jm.prototype.Ga = function () {\n    return Za(this.X);\n  };\n\n  function Qm(a, b) {\n    a.aa && H(a.aa, "frameworkChanged", a.Aa);\n    (a.aa = b) && nd(b, "frameworkChanged", a.Aa);\n  }\n\n  Jm.prototype.gb = function () {\n    this.u.b && (this.u.stop(), this.u.start());\n  };\n\n  function Rm(a) {\n    try {\n      return _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].app(a.m).auth();\n    } catch (b) {\n      throw new t("internal-error", "No firebase.auth.Auth instance is available for the Firebase App \'" + a.m + "\'!");\n    }\n  }\n\n  function Mm(a) {\n    return new ym(function () {\n      return a.I(!0);\n    }, function (b) {\n      return b && "auth/network-request-failed" == b.code ? !0 : !1;\n    }, function () {\n      var b = Cm(a.b) - va() - 3E5;\n      return 0 < b ? b : 0;\n    });\n  }\n\n  function Sm(a) {\n    a.A || a.u.b || (a.u.start(), H(a, "tokenChanged", a.$), nd(a, "tokenChanged", a.$));\n  }\n\n  function Tm(a) {\n    H(a, "tokenChanged", a.$);\n    a.u.stop();\n  }\n\n  function Km(a, b) {\n    a.ya = b;\n    M(a, "_lat", b);\n  }\n\n  function Um(a, b) {\n    Xa(a.R, function (c) {\n      return c == b;\n    });\n  }\n\n  function Vm(a) {\n    for (var b = [], c = 0; c < a.R.length; c++) {\n      b.push(a.R[c](a));\n    }\n\n    return Jc(b).then(function () {\n      return a;\n    });\n  }\n\n  function Wm(a) {\n    a.i && !a.P && (a.P = !0, Ql(a.i, a));\n  }\n\n  function Lm(a, b) {\n    N(a, {\n      uid: b.uid,\n      displayName: b.displayName || null,\n      photoURL: b.photoURL || null,\n      email: b.email || null,\n      emailVerified: b.emailVerified || !1,\n      phoneNumber: b.phoneNumber || null,\n      isAnonymous: b.isAnonymous || !1,\n      tenantId: b.tenantId || null,\n      metadata: new Gm(b.createdAt, b.lastLoginAt),\n      providerData: []\n    });\n    a.a.b = a.tenantId;\n  }\n\n  M(Jm.prototype, "providerId", "firebase");\n\n  function Xm() {}\n\n  function Ym(a) {\n    return E().then(function () {\n      if (a.A) throw new t("app-deleted");\n    });\n  }\n\n  function Zm(a) {\n    return Ra(a.providerData, function (b) {\n      return b.providerId;\n    });\n  }\n\n  function $m(a, b) {\n    b && (an(a, b.providerId), a.providerData.push(b));\n  }\n\n  function an(a, b) {\n    Xa(a.providerData, function (c) {\n      return c.providerId == b;\n    });\n  }\n\n  function bn(a, b, c) {\n    ("uid" != b || c) && a.hasOwnProperty(b) && M(a, b, c);\n  }\n\n  function cn(a, b) {\n    a != b && (N(a, {\n      uid: b.uid,\n      displayName: b.displayName,\n      photoURL: b.photoURL,\n      email: b.email,\n      emailVerified: b.emailVerified,\n      phoneNumber: b.phoneNumber,\n      isAnonymous: b.isAnonymous,\n      tenantId: b.tenantId,\n      providerData: []\n    }), b.metadata ? M(a, "metadata", Hm(b.metadata)) : M(a, "metadata", new Gm()), w(b.providerData, function (c) {\n      $m(a, c);\n    }), Em(a.b, b.b), M(a, "refreshToken", a.b.a), vm(a.N, b.N.b));\n  }\n\n  k = Jm.prototype;\n\n  k.reload = function () {\n    var a = this;\n    return R(this, Ym(this).then(function () {\n      return dn(a).then(function () {\n        return Vm(a);\n      }).then(Xm);\n    }));\n  };\n\n  function dn(a) {\n    return a.I().then(function (b) {\n      var c = a.isAnonymous;\n      return en(a, b).then(function () {\n        c || bn(a, "isAnonymous", !1);\n        return b;\n      });\n    });\n  }\n\n  k.nc = function (a) {\n    return this.I(a).then(function (b) {\n      return new im(b);\n    });\n  };\n\n  k.I = function (a) {\n    var b = this;\n    return R(this, Ym(this).then(function () {\n      return b.b.getToken(a);\n    }).then(function (c) {\n      if (!c) throw new t("internal-error");\n      c.accessToken != b.ya && (Km(b, c.accessToken), b.dispatchEvent(new tm("tokenChanged")));\n      bn(b, "refreshToken", c.refreshToken);\n      return c.accessToken;\n    }));\n  };\n\n  function xm(a, b) {\n    b[Eg] && a.ya != b[Eg] && (Dm(a.b, b), a.dispatchEvent(new tm("tokenChanged")), Km(a, b[Eg]), bn(a, "refreshToken", a.b.a));\n  }\n\n  function en(a, b) {\n    return O(a.a, Jj, {\n      idToken: b\n    }).then(q(a.Jc, a));\n  }\n\n  k.Jc = function (a) {\n    a = a.users;\n    if (!a || !a.length) throw new t("internal-error");\n    a = a[0];\n    Lm(this, {\n      uid: a.localId,\n      displayName: a.displayName,\n      photoURL: a.photoUrl,\n      email: a.email,\n      emailVerified: !!a.emailVerified,\n      phoneNumber: a.phoneNumber,\n      lastLoginAt: a.lastLoginAt,\n      createdAt: a.createdAt,\n      tenantId: a.tenantId\n    });\n\n    for (var b = fn(a), c = 0; c < b.length; c++) {\n      $m(this, b[c]);\n    }\n\n    bn(this, "isAnonymous", !(this.email && a.passwordHash) && !(this.providerData && this.providerData.length));\n    this.dispatchEvent(new tm("userReloaded", {\n      gd: a\n    }));\n  };\n\n  function fn(a) {\n    return (a = a.providerUserInfo) && a.length ? Ra(a, function (b) {\n      return new Im(b.rawId, b.providerId, b.email, b.displayName, b.photoUrl, b.phoneNumber);\n    }) : [];\n  }\n\n  k.Kc = function (a) {\n    hf("firebase.User.prototype.reauthenticateAndRetrieveDataWithCredential is deprecated. Please use firebase.User.prototype.reauthenticateWithCredential instead.");\n    return this.sb(a);\n  };\n\n  k.sb = function (a) {\n    var b = this,\n        c = null;\n    return R(this, a.c(this.a, this.uid).then(function (d) {\n      xm(b, d);\n      c = gn(b, d, "reauthenticate");\n      b.f = null;\n      return b.reload();\n    }).then(function () {\n      return c;\n    }), !0);\n  };\n\n  function hn(a, b) {\n    return dn(a).then(function () {\n      if (Va(Zm(a), b)) return Vm(a).then(function () {\n        throw new t("provider-already-linked");\n      });\n    });\n  }\n\n  k.Bc = function (a) {\n    hf("firebase.User.prototype.linkAndRetrieveDataWithCredential is deprecated. Please use firebase.User.prototype.linkWithCredential instead.");\n    return this.pb(a);\n  };\n\n  k.pb = function (a) {\n    var b = this,\n        c = null;\n    return R(this, hn(this, a.providerId).then(function () {\n      return b.I();\n    }).then(function (d) {\n      return a.b(b.a, d);\n    }).then(function (d) {\n      c = gn(b, d, "link");\n      return jn(b, d);\n    }).then(function () {\n      return c;\n    }));\n  };\n\n  k.Cc = function (a, b) {\n    var c = this;\n    return R(this, hn(this, "phone").then(function () {\n      return hm(Rm(c), a, b, q(c.pb, c));\n    }));\n  };\n\n  k.Lc = function (a, b) {\n    var c = this;\n    return R(this, E().then(function () {\n      return hm(Rm(c), a, b, q(c.sb, c));\n    }), !0);\n  };\n\n  function gn(a, b, c) {\n    var d = rh(b);\n    b = pg(b);\n    return lf({\n      user: a,\n      credential: d,\n      additionalUserInfo: b,\n      operationType: c\n    });\n  }\n\n  function jn(a, b) {\n    xm(a, b);\n    return a.reload().then(function () {\n      return a;\n    });\n  }\n\n  k.Ab = function (a) {\n    var b = this;\n    return R(this, this.I().then(function (c) {\n      return b.a.Ab(c, a);\n    }).then(function (c) {\n      xm(b, c);\n      return b.reload();\n    }));\n  };\n\n  k.dd = function (a) {\n    var b = this;\n    return R(this, this.I().then(function (c) {\n      return a.b(b.a, c);\n    }).then(function (c) {\n      xm(b, c);\n      return b.reload();\n    }));\n  };\n\n  k.Bb = function (a) {\n    var b = this;\n    return R(this, this.I().then(function (c) {\n      return b.a.Bb(c, a);\n    }).then(function (c) {\n      xm(b, c);\n      return b.reload();\n    }));\n  };\n\n  k.Cb = function (a) {\n    if (void 0 === a.displayName && void 0 === a.photoURL) return Ym(this);\n    var b = this;\n    return R(this, this.I().then(function (c) {\n      return b.a.Cb(c, {\n        displayName: a.displayName,\n        photoUrl: a.photoURL\n      });\n    }).then(function (c) {\n      xm(b, c);\n      bn(b, "displayName", c.displayName || null);\n      bn(b, "photoURL", c.photoUrl || null);\n      w(b.providerData, function (d) {\n        "password" === d.providerId && (M(d, "displayName", b.displayName), M(d, "photoURL", b.photoURL));\n      });\n      return Vm(b);\n    }).then(Xm));\n  };\n\n  k.bd = function (a) {\n    var b = this;\n    return R(this, dn(this).then(function (c) {\n      return Va(Zm(b), a) ? sj(b.a, c, [a]).then(function (d) {\n        var e = {};\n        w(d.providerUserInfo || [], function (f) {\n          e[f.providerId] = !0;\n        });\n        w(Zm(b), function (f) {\n          e[f] || an(b, f);\n        });\n        e[mh.PROVIDER_ID] || M(b, "phoneNumber", null);\n        return Vm(b);\n      }) : Vm(b).then(function () {\n        throw new t("no-such-provider");\n      });\n    }));\n  };\n\n  k.delete = function () {\n    var a = this;\n    return R(this, this.I().then(function (b) {\n      return O(a.a, Gj, {\n        idToken: b\n      });\n    }).then(function () {\n      a.dispatchEvent(new tm("userDeleted"));\n    })).then(function () {\n      for (var b = 0; b < a.G.length; b++) {\n        a.G[b].cancel("app-deleted");\n      }\n\n      Om(a, null);\n      Pm(a, null);\n      Qm(a, null);\n      a.G = [];\n      a.A = !0;\n      Tm(a);\n      M(a, "refreshToken", null);\n      a.i && Rl(a.i, a);\n    });\n  };\n\n  k.Eb = function (a, b) {\n    return "linkViaPopup" == a && (this.h || null) == b && this.g || "reauthViaPopup" == a && (this.h || null) == b && this.g || "linkViaRedirect" == a && (this.ga || null) == b || "reauthViaRedirect" == a && (this.ga || null) == b ? !0 : !1;\n  };\n\n  k.ma = function (a, b, c, d) {\n    "linkViaPopup" != a && "reauthViaPopup" != a || d != (this.h || null) || (c && this.O ? this.O(c) : b && !c && this.g && this.g(b), this.c && (this.c.cancel(), this.c = null), delete this.g, delete this.O);\n  };\n\n  k.Fa = function (a, b) {\n    return "linkViaPopup" == a && b == (this.h || null) ? q(this.Jb, this) : "reauthViaPopup" == a && b == (this.h || null) ? q(this.Kb, this) : "linkViaRedirect" == a && (this.ga || null) == b ? q(this.Jb, this) : "reauthViaRedirect" == a && (this.ga || null) == b ? q(this.Kb, this) : null;\n  };\n\n  k.Dc = function (a) {\n    var b = this;\n    return kn(this, "linkViaPopup", a, function () {\n      return hn(b, a.providerId).then(function () {\n        return Vm(b);\n      });\n    }, !1);\n  };\n\n  k.Mc = function (a) {\n    return kn(this, "reauthViaPopup", a, function () {\n      return E();\n    }, !0);\n  };\n\n  function kn(a, b, c, d, e) {\n    if (!Re()) return F(new t("operation-not-supported-in-this-environment"));\n    if (a.f && !e) return F(a.f);\n    var f = og(c.providerId),\n        g = Qe(a.uid + ":::"),\n        h = null;\n    (!Te() || Ie()) && a.o && c.isOAuthProvider && (h = fk(a.o, a.l, a.m, b, c, null, g, _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].SDK_VERSION || null, null, null, a.tenantId));\n    var n = ze(h, f && f.ua, f && f.ta);\n    d = d().then(function () {\n      ln(a);\n      if (!e) return a.I().then(function () {});\n    }).then(function () {\n      return Ul(a.i, n, b, c, g, !!h, a.tenantId);\n    }).then(function () {\n      return new D(function (p, v) {\n        a.ma(b, null, new t("cancelled-popup-request"), a.h || null);\n        a.g = p;\n        a.O = v;\n        a.h = g;\n        a.c = Wl(a.i, a, b, n, g);\n      });\n    }).then(function (p) {\n      n && ye(n);\n      return p ? lf(p) : null;\n    }).s(function (p) {\n      n && ye(n);\n      throw p;\n    });\n    return R(a, d, e);\n  }\n\n  k.Ec = function (a) {\n    var b = this;\n    return mn(this, "linkViaRedirect", a, function () {\n      return hn(b, a.providerId);\n    }, !1);\n  };\n\n  k.Nc = function (a) {\n    return mn(this, "reauthViaRedirect", a, function () {\n      return E();\n    }, !0);\n  };\n\n  function mn(a, b, c, d, e) {\n    if (!Re()) return F(new t("operation-not-supported-in-this-environment"));\n    if (a.f && !e) return F(a.f);\n    var f = null,\n        g = Qe(a.uid + ":::");\n    d = d().then(function () {\n      ln(a);\n      if (!e) return a.I().then(function () {});\n    }).then(function () {\n      a.ga = g;\n      return Vm(a);\n    }).then(function (h) {\n      a.ha && (h = a.ha, h = h.b.set(nn, a.w(), h.a));\n      return h;\n    }).then(function () {\n      return Vl(a.i, b, c, g, a.tenantId);\n    }).s(function (h) {\n      f = h;\n      if (a.ha) return on(a.ha);\n      throw f;\n    }).then(function () {\n      if (f) throw f;\n    });\n    return R(a, d, e);\n  }\n\n  function ln(a) {\n    if (!a.i || !a.P) {\n      if (a.i && !a.P) throw new t("internal-error");\n      throw new t("auth-domain-config-required");\n    }\n  }\n\n  k.Jb = function (a, b, c, d) {\n    var e = this;\n    this.c && (this.c.cancel(), this.c = null);\n    var f = null;\n    c = this.I().then(function (g) {\n      return Ig(e.a, {\n        requestUri: a,\n        postBody: d,\n        sessionId: b,\n        idToken: g\n      });\n    }).then(function (g) {\n      f = gn(e, g, "link");\n      return jn(e, g);\n    }).then(function () {\n      return f;\n    });\n    return R(this, c);\n  };\n\n  k.Kb = function (a, b, c, d) {\n    var e = this;\n    this.c && (this.c.cancel(), this.c = null);\n    var f = null,\n        g = E().then(function () {\n      return Dg(Jg(e.a, {\n        requestUri: a,\n        sessionId: b,\n        postBody: d,\n        tenantId: c\n      }), e.uid);\n    }).then(function (h) {\n      f = gn(e, h, "reauthenticate");\n      xm(e, h);\n      e.f = null;\n      return e.reload();\n    }).then(function () {\n      return f;\n    });\n    return R(this, g, !0);\n  };\n\n  k.tb = function (a) {\n    var b = this,\n        c = null;\n    return R(this, this.I().then(function (d) {\n      c = d;\n      return "undefined" === typeof a || mb(a) ? {} : cg(new Tf(a));\n    }).then(function (d) {\n      return b.a.tb(c, d);\n    }).then(function (d) {\n      if (b.email != d) return b.reload();\n    }).then(function () {}));\n  };\n\n  k.Db = function (a, b) {\n    var c = this,\n        d = null;\n    return R(this, this.I().then(function (e) {\n      d = e;\n      return "undefined" === typeof b || mb(b) ? {} : cg(new Tf(b));\n    }).then(function (e) {\n      return c.a.Db(d, a, e);\n    }).then(function (e) {\n      if (c.email != e) return c.reload();\n    }).then(function () {}));\n  };\n\n  function R(a, b, c) {\n    var d = pn(a, b, c);\n    a.G.push(d);\n    d.na(function () {\n      Wa(a.G, d);\n    });\n    return d.s(function (e) {\n      var f = null;\n      e && "auth/multi-factor-auth-required" === e.code && (f = nm(e.w(), Rm(a), q(a.ic, a)));\n      throw f || e;\n    });\n  }\n\n  k.ic = function (a) {\n    var b = null,\n        c = this;\n    a = Dg(E(a), c.uid).then(function (d) {\n      b = gn(c, d, "reauthenticate");\n      xm(c, d);\n      c.f = null;\n      return c.reload();\n    }).then(function () {\n      return b;\n    });\n    return R(this, a, !0);\n  };\n\n  function pn(a, b, c) {\n    return a.f && !c ? (b.cancel(), F(a.f)) : b.s(function (d) {\n      !d || "auth/user-disabled" != d.code && "auth/user-token-expired" != d.code || (a.f || a.dispatchEvent(new tm("userInvalidated")), a.f = d);\n      throw d;\n    });\n  }\n\n  k.toJSON = function () {\n    return this.w();\n  };\n\n  k.w = function () {\n    var a = {\n      uid: this.uid,\n      displayName: this.displayName,\n      photoURL: this.photoURL,\n      email: this.email,\n      emailVerified: this.emailVerified,\n      phoneNumber: this.phoneNumber,\n      isAnonymous: this.isAnonymous,\n      tenantId: this.tenantId,\n      providerData: [],\n      apiKey: this.l,\n      appName: this.m,\n      authDomain: this.o,\n      stsTokenManager: this.b.w(),\n      redirectEventId: this.ga || null\n    };\n    this.metadata && z(a, this.metadata.w());\n    w(this.providerData, function (b) {\n      a.providerData.push(mf(b));\n    });\n    z(a, this.N.w());\n    return a;\n  };\n\n  function qn(a) {\n    if (!a.apiKey) return null;\n    var b = {\n      apiKey: a.apiKey,\n      authDomain: a.authDomain,\n      appName: a.appName,\n      emulatorConfig: a.emulatorConfig\n    },\n        c = {};\n    if (a.stsTokenManager && a.stsTokenManager.accessToken) c[Eg] = a.stsTokenManager.accessToken, c.refreshToken = a.stsTokenManager.refreshToken || null;else return null;\n    var d = new Jm(b, c, a);\n    a.providerData && w(a.providerData, function (e) {\n      e && $m(d, lf(e));\n    });\n    a.redirectEventId && (d.ga = a.redirectEventId);\n    return d;\n  }\n\n  function rn(a, b, c, d) {\n    var e = new Jm(a, b);\n    c && (e.ha = c);\n    d && Nm(e, d);\n    return e.reload().then(function () {\n      return e;\n    });\n  }\n\n  function sn(a, b, c, d) {\n    var e = a.b,\n        f = {};\n    f[Eg] = e.b && e.b.toString();\n    f.refreshToken = e.a;\n    b = new Jm(b || {\n      apiKey: a.l,\n      authDomain: a.o,\n      appName: a.m\n    }, f);\n    c && (b.ha = c);\n    d && Nm(b, d);\n    cn(b, a);\n    return b;\n  }\n\n  ;\n\n  function tn(a) {\n    this.a = a;\n    this.b = Wk();\n  }\n\n  var nn = {\n    name: "redirectUser",\n    D: "session"\n  };\n\n  function on(a) {\n    return $k(a.b, nn, a.a);\n  }\n\n  function un(a, b) {\n    return a.b.get(nn, a.a).then(function (c) {\n      c && b && (c.authDomain = b);\n      return qn(c || {});\n    });\n  }\n\n  ;\n\n  function vn(a) {\n    this.a = a;\n    this.b = Wk();\n    this.c = null;\n    this.f = wn(this);\n    this.b.addListener(xn("local"), this.a, q(this.g, this));\n  }\n\n  vn.prototype.g = function () {\n    var a = this,\n        b = xn("local");\n    yn(this, function () {\n      return E().then(function () {\n        return a.c && "local" != a.c.D ? a.b.get(b, a.a) : null;\n      }).then(function (c) {\n        if (c) return zn(a, "local").then(function () {\n          a.c = b;\n        });\n      });\n    });\n  };\n\n  function zn(a, b) {\n    var c = [],\n        d;\n\n    for (d in Sk) {\n      Sk[d] !== b && c.push($k(a.b, xn(Sk[d]), a.a));\n    }\n\n    c.push($k(a.b, An, a.a));\n    return Ic(c);\n  }\n\n  function wn(a) {\n    var b = xn("local"),\n        c = xn("session"),\n        d = xn("none");\n    return Zk(a.b, b, a.a).then(function () {\n      return a.b.get(c, a.a);\n    }).then(function (e) {\n      return e ? c : a.b.get(d, a.a).then(function (f) {\n        return f ? d : a.b.get(b, a.a).then(function (g) {\n          return g ? b : a.b.get(An, a.a).then(function (h) {\n            return h ? xn(h) : b;\n          });\n        });\n      });\n    }).then(function (e) {\n      a.c = e;\n      return zn(a, e.D);\n    }).s(function () {\n      a.c || (a.c = b);\n    });\n  }\n\n  var An = {\n    name: "persistence",\n    D: "session"\n  };\n\n  function xn(a) {\n    return {\n      name: "authUser",\n      D: a\n    };\n  }\n\n  vn.prototype.wb = function (a) {\n    var b = null,\n        c = this;\n    Tk(a);\n    return yn(this, function () {\n      return a != c.c.D ? c.b.get(c.c, c.a).then(function (d) {\n        b = d;\n        return zn(c, a);\n      }).then(function () {\n        c.c = xn(a);\n        if (b) return c.b.set(c.c, b, c.a);\n      }) : E();\n    });\n  };\n\n  function Bn(a) {\n    return yn(a, function () {\n      return a.b.set(An, a.c.D, a.a);\n    });\n  }\n\n  function Cn(a, b) {\n    return yn(a, function () {\n      return a.b.set(a.c, b.w(), a.a);\n    });\n  }\n\n  function Dn(a) {\n    return yn(a, function () {\n      return $k(a.b, a.c, a.a);\n    });\n  }\n\n  function En(a, b, c) {\n    return yn(a, function () {\n      return a.b.get(a.c, a.a).then(function (d) {\n        d && b && (d.authDomain = b);\n        d && c && (d.emulatorConfig = c);\n        return qn(d || {});\n      });\n    });\n  }\n\n  function yn(a, b) {\n    a.f = a.f.then(b, b);\n    return a.f;\n  }\n\n  ;\n\n  function Fn(a) {\n    this.m = !1;\n    M(this, "settings", new fm());\n    M(this, "app", a);\n    if (S(this).options && S(this).options.apiKey) a = _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].SDK_VERSION ? Oe(_firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].SDK_VERSION) : null, this.a = new Ji(S(this).options && S(this).options.apiKey, Ca(Da), a);else throw new t("invalid-api-key");\n    this.R = [];\n    this.u = [];\n    this.P = [];\n    this.ac = _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].INTERNAL.createSubscribe(q(this.yc, this));\n    this.X = void 0;\n    this.bc = _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].INTERNAL.createSubscribe(q(this.zc, this));\n    Gn(this, null);\n    this.l = new vn(S(this).options.apiKey + ":" + S(this).name);\n    this.G = new tn(S(this).options.apiKey + ":" + S(this).name);\n    this.$ = T(this, Hn(this));\n    this.i = T(this, In(this));\n    this.ba = !1;\n    this.pa = q(this.Yc, this);\n    this.Ba = q(this.da, this);\n    this.ya = q(this.kc, this);\n    this.za = q(this.vc, this);\n    this.Aa = q(this.wc, this);\n    this.b = null;\n    Jn(this);\n    this.INTERNAL = {};\n    this.INTERNAL["delete"] = q(this.delete, this);\n    this.INTERNAL.logFramework = q(this.Fc, this);\n    this.A = 0;\n    I.call(this);\n    Kn(this);\n    this.N = [];\n    this.f = null;\n  }\n\n  r(Fn, I);\n\n  function Ln(a) {\n    G.call(this, "languageCodeChanged");\n    this.h = a;\n  }\n\n  r(Ln, G);\n\n  function Mn(a) {\n    G.call(this, "emulatorConfigChanged");\n    this.c = a;\n  }\n\n  r(Mn, G);\n\n  function Nn(a) {\n    G.call(this, "frameworkChanged");\n    this.f = a;\n  }\n\n  r(Nn, G);\n  k = Fn.prototype;\n\n  k.wb = function (a) {\n    a = this.l.wb(a);\n    return T(this, a);\n  };\n\n  k.wa = function (a) {\n    this.aa === a || this.m || (this.aa = a, Pi(this.a, this.aa), this.dispatchEvent(new Ln(this.ka())));\n  };\n\n  k.ka = function () {\n    return this.aa;\n  };\n\n  k.ed = function () {\n    var a = l.navigator;\n    this.wa(a ? a.languages && a.languages[0] || a.language || a.userLanguage || null : null);\n  };\n\n  k.fd = function (a) {\n    if (!this.f) {\n      if (!/^https?:\\/\\//.test(a)) throw new t("argument-error", "Emulator URL must start with a valid scheme (http:// or https://).");\n      On();\n      this.f = {\n        url: a\n      };\n      this.settings.hb = !0;\n      Qi(this.a, this.f);\n      this.dispatchEvent(new Mn(this.f));\n    }\n  };\n\n  function On() {\n    bf("WARNING: You are using the Auth Emulator, which is intended for local testing only.  Do not use with production credentials.");\n    l.document && Ee().then(function () {\n      var a = l.document.createElement("div");\n      a.innerText = "Running in emulator mode. Do not use with production credentials.";\n      a.style.position = "fixed";\n      a.style.width = "100%";\n      a.style.backgroundColor = "#ffffff";\n      a.style.border = ".1em solid #000000";\n      a.style.color = "#ff0000";\n      a.style.bottom = "0px";\n      a.style.left = "0px";\n      a.style.margin = "0px";\n      a.style.zIndex = 1E4;\n      a.style.textAlign = "center";\n      a.classList.add("firebase-emulator-warning");\n      l.document.body.appendChild(a);\n    });\n  }\n\n  k.Fc = function (a) {\n    this.N.push(a);\n    Si(this.a, _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].SDK_VERSION ? Oe(_firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].SDK_VERSION, this.N) : null);\n    this.dispatchEvent(new Nn(this.N));\n  };\n\n  k.Ga = function () {\n    return Za(this.N);\n  };\n\n  k.xb = function (a) {\n    this.W === a || this.m || (this.W = a, this.a.b = this.W);\n  };\n\n  k.S = function () {\n    return this.W;\n  };\n\n  function Kn(a) {\n    Object.defineProperty(a, "lc", {\n      get: function get() {\n        return this.ka();\n      },\n      set: function set(b) {\n        this.wa(b);\n      },\n      enumerable: !1\n    });\n    a.aa = null;\n    Object.defineProperty(a, "ti", {\n      get: function get() {\n        return this.S();\n      },\n      set: function set(b) {\n        this.xb(b);\n      },\n      enumerable: !1\n    });\n    a.W = null;\n  }\n\n  k.toJSON = function () {\n    return {\n      apiKey: S(this).options.apiKey,\n      authDomain: S(this).options.authDomain,\n      appName: S(this).name,\n      currentUser: U(this) && U(this).w()\n    };\n  };\n\n  function Pn(a) {\n    return a.gb || F(new t("auth-domain-config-required"));\n  }\n\n  function Jn(a) {\n    var b = S(a).options.authDomain,\n        c = S(a).options.apiKey;\n    b && Re() && (a.gb = a.$.then(function () {\n      if (!a.m) {\n        a.b = Yl(b, c, S(a).name, a.f);\n        Ql(a.b, a);\n        U(a) && Wm(U(a));\n\n        if (a.o) {\n          Wm(a.o);\n          var d = a.o;\n          d.wa(a.ka());\n          Om(d, a);\n          d = a.o;\n          Nm(d, a.N);\n          Qm(d, a);\n          d = a.o;\n          Qi(d.a, a.f);\n          Pm(d, a);\n          a.o = null;\n        }\n\n        return a.b;\n      }\n    }));\n  }\n\n  k.Eb = function (a, b) {\n    switch (a) {\n      case "unknown":\n      case "signInViaRedirect":\n        return !0;\n\n      case "signInViaPopup":\n        return this.h == b && !!this.g;\n\n      default:\n        return !1;\n    }\n  };\n\n  k.ma = function (a, b, c, d) {\n    "signInViaPopup" == a && this.h == d && (c && this.O ? this.O(c) : b && !c && this.g && this.g(b), this.c && (this.c.cancel(), this.c = null), delete this.g, delete this.O);\n  };\n\n  k.Fa = function (a, b) {\n    return "signInViaRedirect" == a || "signInViaPopup" == a && this.h == b && this.g ? q(this.hc, this) : null;\n  };\n\n  k.hc = function (a, b, c, d) {\n    var e = this,\n        f = {\n      requestUri: a,\n      postBody: d,\n      sessionId: b,\n      tenantId: c\n    };\n    this.c && (this.c.cancel(), this.c = null);\n    return e.$.then(function () {\n      return Qn(e, Gg(e.a, f));\n    });\n  };\n\n  k.Wc = function (a) {\n    if (!Re()) return F(new t("operation-not-supported-in-this-environment"));\n    var b = this,\n        c = og(a.providerId),\n        d = Qe(),\n        e = null;\n    (!Te() || Ie()) && S(this).options.authDomain && a.isOAuthProvider && (e = fk(S(this).options.authDomain, S(this).options.apiKey, S(this).name, "signInViaPopup", a, null, d, _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].SDK_VERSION || null, null, null, this.S(), this.f));\n    var f = ze(e, c && c.ua, c && c.ta);\n    c = Pn(this).then(function (g) {\n      return Ul(g, f, "signInViaPopup", a, d, !!e, b.S());\n    }).then(function () {\n      return new D(function (g, h) {\n        b.ma("signInViaPopup", null, new t("cancelled-popup-request"), b.h);\n        b.g = g;\n        b.O = h;\n        b.h = d;\n        b.c = Wl(b.b, b, "signInViaPopup", f, d);\n      });\n    }).then(function (g) {\n      f && ye(f);\n      return g ? lf(g) : null;\n    }).s(function (g) {\n      f && ye(f);\n      throw g;\n    });\n    return T(this, c);\n  };\n\n  k.Xc = function (a) {\n    if (!Re()) return F(new t("operation-not-supported-in-this-environment"));\n    var b = this,\n        c = Pn(this).then(function () {\n      return Bn(b.l);\n    }).then(function () {\n      return Vl(b.b, "signInViaRedirect", a, void 0, b.S());\n    });\n    return T(this, c);\n  };\n\n  function Rn(a) {\n    if (!Re()) return F(new t("operation-not-supported-in-this-environment"));\n    var b = Pn(a).then(function () {\n      return a.b.qa();\n    }).then(function (c) {\n      return c ? lf(c) : null;\n    });\n    return T(a, b);\n  }\n\n  k.qa = function () {\n    var a = this;\n    return Rn(this).then(function (b) {\n      a.b && am(a.b.b);\n      return b;\n    }).s(function (b) {\n      a.b && am(a.b.b);\n      throw b;\n    });\n  };\n\n  k.cd = function (a) {\n    if (!a) return F(new t("null-user"));\n    if (this.W != a.tenantId) return F(new t("tenant-id-mismatch"));\n    var b = this,\n        c = {};\n    c.apiKey = S(this).options.apiKey;\n    c.authDomain = S(this).options.authDomain;\n    c.appName = S(this).name;\n    var d = sn(a, c, b.G, b.Ga());\n    return T(this, this.i.then(function () {\n      if (S(b).options.apiKey != a.l) return d.reload();\n    }).then(function () {\n      if (U(b) && a.uid == U(b).uid) return cn(U(b), a), b.da(a);\n      Gn(b, d);\n      Wm(d);\n      return b.da(d);\n    }).then(function () {\n      Sn(b);\n    }));\n  };\n\n  function Tn(a, b) {\n    var c = {};\n    c.apiKey = S(a).options.apiKey;\n    c.authDomain = S(a).options.authDomain;\n    c.appName = S(a).name;\n    a.f && (c.emulatorConfig = a.f);\n    return a.$.then(function () {\n      return rn(c, b, a.G, a.Ga());\n    }).then(function (d) {\n      if (U(a) && d.uid == U(a).uid) return cn(U(a), d), a.da(d);\n      Gn(a, d);\n      Wm(d);\n      return a.da(d);\n    }).then(function () {\n      Sn(a);\n    });\n  }\n\n  function Gn(a, b) {\n    U(a) && (Um(U(a), a.Ba), H(U(a), "tokenChanged", a.ya), H(U(a), "userDeleted", a.za), H(U(a), "userInvalidated", a.Aa), Tm(U(a)));\n    b && (b.R.push(a.Ba), nd(b, "tokenChanged", a.ya), nd(b, "userDeleted", a.za), nd(b, "userInvalidated", a.Aa), 0 < a.A && Sm(b));\n    M(a, "currentUser", b);\n    b && (b.wa(a.ka()), Om(b, a), Nm(b, a.N), Qm(b, a), Qi(b.a, a.f), Pm(b, a));\n  }\n\n  k.zb = function () {\n    var a = this,\n        b = this.i.then(function () {\n      a.b && am(a.b.b);\n      if (!U(a)) return E();\n      Gn(a, null);\n      return Dn(a.l).then(function () {\n        Sn(a);\n      });\n    });\n    return T(this, b);\n  };\n\n  function Un(a) {\n    var b = un(a.G, S(a).options.authDomain).then(function (c) {\n      if (a.o = c) c.ha = a.G;\n      return on(a.G);\n    });\n    return T(a, b);\n  }\n\n  function Hn(a) {\n    var b = S(a).options.authDomain,\n        c = Un(a).then(function () {\n      return En(a.l, b, a.f);\n    }).then(function (d) {\n      return d ? (d.ha = a.G, a.o && (a.o.ga || null) == (d.ga || null) ? d : d.reload().then(function () {\n        return Cn(a.l, d).then(function () {\n          return d;\n        });\n      }).s(function (e) {\n        return "auth/network-request-failed" == e.code ? d : Dn(a.l);\n      })) : null;\n    }).then(function (d) {\n      Gn(a, d || null);\n    });\n    return T(a, c);\n  }\n\n  function In(a) {\n    return a.$.then(function () {\n      return Rn(a);\n    }).s(function () {}).then(function () {\n      if (!a.m) return a.pa();\n    }).s(function () {}).then(function () {\n      if (!a.m) {\n        a.ba = !0;\n        var b = a.l;\n        b.b.addListener(xn("local"), b.a, a.pa);\n      }\n    });\n  }\n\n  k.Yc = function () {\n    var a = this;\n    return En(this.l, S(this).options.authDomain).then(function (b) {\n      if (!a.m) {\n        var c;\n\n        if (c = U(a) && b) {\n          c = U(a).uid;\n          var d = b.uid;\n          c = void 0 === c || null === c || "" === c || void 0 === d || null === d || "" === d ? !1 : c == d;\n        }\n\n        if (c) return cn(U(a), b), U(a).I();\n        if (U(a) || b) Gn(a, b), b && (Wm(b), b.ha = a.G), a.b && Ql(a.b, a), Sn(a);\n      }\n    });\n  };\n\n  k.da = function (a) {\n    return Cn(this.l, a);\n  };\n\n  k.kc = function () {\n    Sn(this);\n    this.da(U(this));\n  };\n\n  k.vc = function () {\n    this.zb();\n  };\n\n  k.wc = function () {\n    this.zb();\n  };\n\n  function Qn(a, b) {\n    var c = null,\n        d = null;\n    return T(a, b.then(function (e) {\n      c = rh(e);\n      d = pg(e);\n      return Tn(a, e);\n    }, function (e) {\n      var f = null;\n      e && "auth/multi-factor-auth-required" === e.code && (f = nm(e.w(), a, q(a.jc, a)));\n      throw f || e;\n    }).then(function () {\n      return lf({\n        user: U(a),\n        credential: c,\n        additionalUserInfo: d,\n        operationType: "signIn"\n      });\n    }));\n  }\n\n  k.jc = function (a) {\n    var b = this;\n    return this.i.then(function () {\n      return Qn(b, E(a));\n    });\n  };\n\n  k.yc = function (a) {\n    var b = this;\n    this.addAuthTokenListener(function () {\n      a.next(U(b));\n    });\n  };\n\n  k.zc = function (a) {\n    var b = this;\n    Vn(this, function () {\n      a.next(U(b));\n    });\n  };\n\n  k.Hc = function (a, b, c) {\n    var d = this;\n    this.ba && Promise.resolve().then(function () {\n      "function" === typeof a ? a(U(d)) : "function" === typeof a.next && a.next(U(d));\n    });\n    return this.ac(a, b, c);\n  };\n\n  k.Gc = function (a, b, c) {\n    var d = this;\n    this.ba && Promise.resolve().then(function () {\n      d.X = d.getUid();\n      "function" === typeof a ? a(U(d)) : "function" === typeof a.next && a.next(U(d));\n    });\n    return this.bc(a, b, c);\n  };\n\n  k.mc = function (a) {\n    var b = this,\n        c = this.i.then(function () {\n      return U(b) ? U(b).I(a).then(function (d) {\n        return {\n          accessToken: d\n        };\n      }) : null;\n    });\n    return T(this, c);\n  };\n\n  k.Sc = function (a) {\n    var b = this;\n    return this.i.then(function () {\n      return Qn(b, O(b.a, Lj, {\n        token: a\n      }));\n    }).then(function (c) {\n      var d = c.user;\n      bn(d, "isAnonymous", !1);\n      b.da(d);\n      return c;\n    });\n  };\n\n  k.Tc = function (a, b) {\n    var c = this;\n    return this.i.then(function () {\n      return Qn(c, O(c.a, bh, {\n        email: a,\n        password: b\n      }));\n    });\n  };\n\n  k.dc = function (a, b) {\n    var c = this;\n    return this.i.then(function () {\n      return Qn(c, O(c.a, Fj, {\n        email: a,\n        password: b\n      }));\n    });\n  };\n\n  k.Za = function (a) {\n    var b = this;\n    return this.i.then(function () {\n      return Qn(b, a.ja(b.a));\n    });\n  };\n\n  k.Rc = function (a) {\n    hf("firebase.auth.Auth.prototype.signInAndRetrieveDataWithCredential is deprecated. Please use firebase.auth.Auth.prototype.signInWithCredential instead.");\n    return this.Za(a);\n  };\n\n  k.yb = function () {\n    var a = this;\n    return this.i.then(function () {\n      var b = U(a);\n\n      if (b && b.isAnonymous) {\n        var c = lf({\n          providerId: null,\n          isNewUser: !1\n        });\n        return lf({\n          user: b,\n          credential: null,\n          additionalUserInfo: c,\n          operationType: "signIn"\n        });\n      }\n\n      return Qn(a, a.a.yb()).then(function (d) {\n        var e = d.user;\n        bn(e, "isAnonymous", !0);\n        a.da(e);\n        return d;\n      });\n    });\n  };\n\n  function S(a) {\n    return a.app;\n  }\n\n  function U(a) {\n    return a.currentUser;\n  }\n\n  k.getUid = function () {\n    return U(this) && U(this).uid || null;\n  };\n\n  function Wn(a) {\n    return U(a) && U(a)._lat || null;\n  }\n\n  function Sn(a) {\n    if (a.ba) {\n      for (var b = 0; b < a.u.length; b++) {\n        if (a.u[b]) a.u[b](Wn(a));\n      }\n\n      if (a.X !== a.getUid() && a.P.length) for (a.X = a.getUid(), b = 0; b < a.P.length; b++) {\n        if (a.P[b]) a.P[b](Wn(a));\n      }\n    }\n  }\n\n  k.cc = function (a) {\n    this.addAuthTokenListener(a);\n    this.A++;\n    0 < this.A && U(this) && Sm(U(this));\n  };\n\n  k.Oc = function (a) {\n    var b = this;\n    w(this.u, function (c) {\n      c == a && b.A--;\n    });\n    0 > this.A && (this.A = 0);\n    0 == this.A && U(this) && Tm(U(this));\n    this.removeAuthTokenListener(a);\n  };\n\n  k.addAuthTokenListener = function (a) {\n    var b = this;\n    this.u.push(a);\n    T(this, this.i.then(function () {\n      b.m || Va(b.u, a) && a(Wn(b));\n    }));\n  };\n\n  k.removeAuthTokenListener = function (a) {\n    Xa(this.u, function (b) {\n      return b == a;\n    });\n  };\n\n  function Vn(a, b) {\n    a.P.push(b);\n    T(a, a.i.then(function () {\n      !a.m && Va(a.P, b) && a.X !== a.getUid() && (a.X = a.getUid(), b(Wn(a)));\n    }));\n  }\n\n  k.delete = function () {\n    this.m = !0;\n\n    for (var a = 0; a < this.R.length; a++) {\n      this.R[a].cancel("app-deleted");\n    }\n\n    this.R = [];\n    this.l && (a = this.l, a.b.removeListener(xn("local"), a.a, this.pa));\n    this.b && (Rl(this.b, this), am(this.b.b));\n    return Promise.resolve();\n  };\n\n  function T(a, b) {\n    a.R.push(b);\n    b.na(function () {\n      Wa(a.R, b);\n    });\n    return b;\n  }\n\n  k.gc = function (a) {\n    return T(this, bj(this.a, a));\n  };\n\n  k.Ac = function (a) {\n    return !!gh(a);\n  };\n\n  k.vb = function (a, b) {\n    var c = this;\n    return T(this, E().then(function () {\n      var d = new Tf(b);\n      if (!d.c) throw new t("argument-error", ag + " must be true when sending sign in link to email");\n      return cg(d);\n    }).then(function (d) {\n      return c.a.vb(a, d);\n    }).then(function () {}));\n  };\n\n  k.hd = function (a) {\n    return this.Qa(a).then(function (b) {\n      return b.data.email;\n    });\n  };\n\n  k.mb = function (a, b) {\n    return T(this, this.a.mb(a, b).then(function () {}));\n  };\n\n  k.Qa = function (a) {\n    return T(this, this.a.Qa(a).then(function (b) {\n      return new wf(b);\n    }));\n  };\n\n  k.ib = function (a) {\n    return T(this, this.a.ib(a).then(function () {}));\n  };\n\n  k.ub = function (a, b) {\n    var c = this;\n    return T(this, E().then(function () {\n      return "undefined" === typeof b || mb(b) ? {} : cg(new Tf(b));\n    }).then(function (d) {\n      return c.a.ub(a, d);\n    }).then(function () {}));\n  };\n\n  k.Vc = function (a, b) {\n    return T(this, hm(this, a, b, q(this.Za, this)));\n  };\n\n  k.Uc = function (a, b) {\n    var c = this;\n    return T(this, E().then(function () {\n      var d = b || re(),\n          e = fh(a, d);\n      d = gh(d);\n      if (!d) throw new t("argument-error", "Invalid email link!");\n      if (d.tenantId !== c.S()) throw new t("tenant-id-mismatch");\n      return c.Za(e);\n    }));\n  };\n\n  function Xn() {}\n\n  Xn.prototype.render = function () {};\n\n  Xn.prototype.reset = function () {};\n\n  Xn.prototype.getResponse = function () {};\n\n  Xn.prototype.execute = function () {};\n\n  function Yn() {\n    this.a = {};\n    this.b = 1E12;\n  }\n\n  var Zn = null;\n\n  Yn.prototype.render = function (a, b) {\n    this.a[this.b.toString()] = new $n(a, b);\n    return this.b++;\n  };\n\n  Yn.prototype.reset = function (a) {\n    var b = ao(this, a);\n    a = bo(a);\n    b && a && (b.delete(), delete this.a[a]);\n  };\n\n  Yn.prototype.getResponse = function (a) {\n    return (a = ao(this, a)) ? a.getResponse() : null;\n  };\n\n  Yn.prototype.execute = function (a) {\n    (a = ao(this, a)) && a.execute();\n  };\n\n  function ao(a, b) {\n    return (b = bo(b)) ? a.a[b] || null : null;\n  }\n\n  function bo(a) {\n    return (a = "undefined" === typeof a ? 1E12 : a) ? a.toString() : null;\n  }\n\n  function $n(a, b) {\n    this.g = !1;\n    this.c = b;\n    this.a = this.b = null;\n    this.h = "invisible" !== this.c.size;\n    this.f = kc(a);\n    var c = this;\n\n    this.i = function () {\n      c.execute();\n    };\n\n    this.h ? this.execute() : nd(this.f, "click", this.i);\n  }\n\n  $n.prototype.getResponse = function () {\n    co(this);\n    return this.b;\n  };\n\n  $n.prototype.execute = function () {\n    co(this);\n    var a = this;\n    this.a || (this.a = setTimeout(function () {\n      a.b = Me();\n      var b = a.c.callback,\n          c = a.c["expired-callback"];\n      if (b) try {\n        b(a.b);\n      } catch (d) {}\n      a.a = setTimeout(function () {\n        a.a = null;\n        a.b = null;\n        if (c) try {\n          c();\n        } catch (d) {}\n        a.h && a.execute();\n      }, 6E4);\n    }, 500));\n  };\n\n  $n.prototype.delete = function () {\n    co(this);\n    this.g = !0;\n    clearTimeout(this.a);\n    this.a = null;\n    H(this.f, "click", this.i);\n  };\n\n  function co(a) {\n    if (a.g) throw Error("reCAPTCHA mock was already deleted!");\n  }\n\n  ;\n\n  function eo() {}\n\n  M(eo, "FACTOR_ID", "phone");\n\n  function fo() {}\n\n  fo.prototype.g = function () {\n    Zn || (Zn = new Yn());\n    return E(Zn);\n  };\n\n  fo.prototype.c = function () {};\n\n  var go = null;\n\n  function ho() {\n    this.b = l.grecaptcha ? Infinity : 0;\n    this.f = null;\n    this.a = "__rcb" + Math.floor(1E6 * Math.random()).toString();\n  }\n\n  var io = new qb(rb, "https://www.google.com/recaptcha/api.js?onload=%{onload}&render=explicit&hl=%{hl}"),\n      jo = new Ze(3E4, 6E4);\n\n  ho.prototype.g = function (a) {\n    var b = this;\n    return new D(function (c, d) {\n      var e = setTimeout(function () {\n        d(new t("network-request-failed"));\n      }, jo.get());\n\n      if (!l.grecaptcha || a !== b.f && !b.b) {\n        l[b.a] = function () {\n          if (l.grecaptcha) {\n            b.f = a;\n            var g = l.grecaptcha.render;\n\n            l.grecaptcha.render = function (h, n) {\n              h = g(h, n);\n              b.b++;\n              return h;\n            };\n\n            clearTimeout(e);\n            c(l.grecaptcha);\n          } else clearTimeout(e), d(new t("internal-error"));\n\n          delete l[b.a];\n        };\n\n        var f = zb(io, {\n          onload: b.a,\n          hl: a || ""\n        });\n        E(Ci(f)).s(function () {\n          clearTimeout(e);\n          d(new t("internal-error", "Unable to load external reCAPTCHA dependencies!"));\n        });\n      } else clearTimeout(e), c(l.grecaptcha);\n    });\n  };\n\n  ho.prototype.c = function () {\n    this.b--;\n  };\n\n  var ko = null;\n\n  function lo(a, b, c, d, e, f, g) {\n    M(this, "type", "recaptcha");\n    this.c = this.f = null;\n    this.A = !1;\n    this.m = b;\n    this.g = null;\n    g ? (go || (go = new fo()), g = go) : (ko || (ko = new ho()), g = ko);\n    this.v = g;\n    this.a = c || {\n      theme: "light",\n      type: "image"\n    };\n    this.h = [];\n    if (this.a[mo]) throw new t("argument-error", "sitekey should not be provided for reCAPTCHA as one is automatically provisioned for the current project.");\n    this.i = "invisible" === this.a[no];\n    if (!l.document) throw new t("operation-not-supported-in-this-environment", "RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment with DOM support.");\n    if (!kc(b) || !this.i && kc(b).hasChildNodes()) throw new t("argument-error", "reCAPTCHA container is either not found or already contains inner elements!");\n    this.o = new Ji(a, f || null, e || null);\n\n    this.u = d || function () {\n      return null;\n    };\n\n    var h = this;\n    this.l = [];\n    var n = this.a[oo];\n\n    this.a[oo] = function (v) {\n      po(h, v);\n      if ("function" === typeof n) n(v);else if ("string" === typeof n) {\n        var B = L(n, l);\n        "function" === typeof B && B(v);\n      }\n    };\n\n    var p = this.a[qo];\n\n    this.a[qo] = function () {\n      po(h, null);\n      if ("function" === typeof p) p();else if ("string" === typeof p) {\n        var v = L(p, l);\n        "function" === typeof v && v();\n      }\n    };\n  }\n\n  var oo = "callback",\n      qo = "expired-callback",\n      mo = "sitekey",\n      no = "size";\n\n  function po(a, b) {\n    for (var c = 0; c < a.l.length; c++) {\n      try {\n        a.l[c](b);\n      } catch (d) {}\n    }\n  }\n\n  function ro(a, b) {\n    Xa(a.l, function (c) {\n      return c == b;\n    });\n  }\n\n  function so(a, b) {\n    a.h.push(b);\n    b.na(function () {\n      Wa(a.h, b);\n    });\n    return b;\n  }\n\n  k = lo.prototype;\n\n  k.Ia = function () {\n    var a = this;\n    return this.f ? this.f : this.f = so(this, E().then(function () {\n      if (Se() && !Je()) return Ee();\n      throw new t("operation-not-supported-in-this-environment", "RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment.");\n    }).then(function () {\n      return a.v.g(a.u());\n    }).then(function (b) {\n      a.g = b;\n      return O(a.o, Kj, {});\n    }).then(function (b) {\n      a.a[mo] = b.recaptchaSiteKey;\n    }).s(function (b) {\n      a.f = null;\n      throw b;\n    }));\n  };\n\n  k.render = function () {\n    to(this);\n    var a = this;\n    return so(this, this.Ia().then(function () {\n      if (null === a.c) {\n        var b = a.m;\n\n        if (!a.i) {\n          var c = kc(b);\n          b = nc("DIV");\n          c.appendChild(b);\n        }\n\n        a.c = a.g.render(b, a.a);\n      }\n\n      return a.c;\n    }));\n  };\n\n  k.verify = function () {\n    to(this);\n    var a = this;\n    return so(this, this.render().then(function (b) {\n      return new D(function (c) {\n        var d = a.g.getResponse(b);\n        if (d) c(d);else {\n          var e = function e(f) {\n            f && (ro(a, e), c(f));\n          };\n\n          a.l.push(e);\n          a.i && a.g.execute(a.c);\n        }\n      });\n    }));\n  };\n\n  k.reset = function () {\n    to(this);\n    null !== this.c && this.g.reset(this.c);\n  };\n\n  function to(a) {\n    if (a.A) throw new t("internal-error", "RecaptchaVerifier instance has been destroyed.");\n  }\n\n  k.clear = function () {\n    to(this);\n    this.A = !0;\n    this.v.c();\n\n    for (var a = 0; a < this.h.length; a++) {\n      this.h[a].cancel("RecaptchaVerifier instance has been destroyed.");\n    }\n\n    if (!this.i) {\n      a = kc(this.m);\n\n      for (var b; b = a.firstChild;) {\n        a.removeChild(b);\n      }\n    }\n  };\n\n  function uo(a, b, c) {\n    var d = !1;\n\n    try {\n      this.b = c || _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].app();\n    } catch (g) {\n      throw new t("argument-error", "No firebase.app.App instance is currently initialized.");\n    }\n\n    if (this.b.options && this.b.options.apiKey) c = this.b.options.apiKey;else throw new t("invalid-api-key");\n    var e = this,\n        f = null;\n\n    try {\n      f = this.b.auth().Ga();\n    } catch (g) {}\n\n    try {\n      d = this.b.auth().settings.appVerificationDisabledForTesting;\n    } catch (g) {}\n\n    f = _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].SDK_VERSION ? Oe(_firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].SDK_VERSION, f) : null;\n    lo.call(this, c, a, b, function () {\n      try {\n        var g = e.b.auth().ka();\n      } catch (h) {\n        g = null;\n      }\n\n      return g;\n    }, f, Ca(Da), d);\n  }\n\n  r(uo, lo);\n\n  function vo(a, b, c, d) {\n    a: {\n      c = Array.prototype.slice.call(c);\n      var e = 0;\n\n      for (var f = !1, g = 0; g < b.length; g++) {\n        if (b[g].optional) f = !0;else {\n          if (f) throw new t("internal-error", "Argument validator encountered a required argument after an optional argument.");\n          e++;\n        }\n      }\n\n      f = b.length;\n      if (c.length < e || f < c.length) d = "Expected " + (e == f ? 1 == e ? "1 argument" : e + " arguments" : e + "-" + f + " arguments") + " but got " + c.length + ".";else {\n        for (e = 0; e < c.length; e++) {\n          if (f = b[e].optional && void 0 === c[e], !b[e].K(c[e]) && !f) {\n            b = b[e];\n            if (0 > e || e >= wo.length) throw new t("internal-error", "Argument validator received an unsupported number of arguments.");\n            c = wo[e];\n            d = (d ? "" : c + " argument ") + (b.name ? \'"\' + b.name + \'" \' : "") + "must be " + b.J + ".";\n            break a;\n          }\n        }\n\n        d = null;\n      }\n    }\n\n    if (d) throw new t("argument-error", a + " failed: " + d);\n  }\n\n  var wo = "First Second Third Fourth Fifth Sixth Seventh Eighth Ninth".split(" ");\n\n  function V(a, b) {\n    return {\n      name: a || "",\n      J: "a valid string",\n      optional: !!b,\n      K: function K(c) {\n        return "string" === typeof c;\n      }\n    };\n  }\n\n  function xo(a, b) {\n    return {\n      name: a || "",\n      J: "a boolean",\n      optional: !!b,\n      K: function K(c) {\n        return "boolean" === typeof c;\n      }\n    };\n  }\n\n  function W(a, b) {\n    return {\n      name: a || "",\n      J: "a valid object",\n      optional: !!b,\n      K: m\n    };\n  }\n\n  function yo(a, b) {\n    return {\n      name: a || "",\n      J: "a function",\n      optional: !!b,\n      K: function K(c) {\n        return "function" === typeof c;\n      }\n    };\n  }\n\n  function zo(a, b) {\n    return {\n      name: a || "",\n      J: "null",\n      optional: !!b,\n      K: function K(c) {\n        return null === c;\n      }\n    };\n  }\n\n  function Ao() {\n    return {\n      name: "",\n      J: "an HTML element",\n      optional: !1,\n      K: function K(a) {\n        return !!(a && a instanceof Element);\n      }\n    };\n  }\n\n  function Bo() {\n    return {\n      name: "auth",\n      J: "an instance of Firebase Auth",\n      optional: !0,\n      K: function K(a) {\n        return !!(a && a instanceof Fn);\n      }\n    };\n  }\n\n  function Co() {\n    return {\n      name: "app",\n      J: "an instance of Firebase App",\n      optional: !0,\n      K: function K(a) {\n        return !!(a && a instanceof _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].app.App);\n      }\n    };\n  }\n\n  function Do(a) {\n    return {\n      name: a ? a + "Credential" : "credential",\n      J: a ? "a valid " + a + " credential" : "a valid credential",\n      optional: !1,\n      K: function K(b) {\n        if (!b) return !1;\n        var c = !a || b.providerId === a;\n        return !(!b.ja || !c);\n      }\n    };\n  }\n\n  function Eo() {\n    return {\n      name: "multiFactorAssertion",\n      J: "a valid multiFactorAssertion",\n      optional: !1,\n      K: function K(a) {\n        return a ? !!a.rb : !1;\n      }\n    };\n  }\n\n  function Fo() {\n    return {\n      name: "authProvider",\n      J: "a valid Auth provider",\n      optional: !1,\n      K: function K(a) {\n        return !!(a && a.providerId && a.hasOwnProperty && a.hasOwnProperty("isOAuthProvider"));\n      }\n    };\n  }\n\n  function Go(a, b) {\n    return m(a) && "string" === typeof a.type && a.type === b && "function" === typeof a.Ha;\n  }\n\n  function Ho(a) {\n    return m(a) && "string" === typeof a.uid;\n  }\n\n  function Io() {\n    return {\n      name: "applicationVerifier",\n      J: "an implementation of firebase.auth.ApplicationVerifier",\n      optional: !1,\n      K: function K(a) {\n        return !(!a || "string" !== typeof a.type || "function" !== typeof a.verify);\n      }\n    };\n  }\n\n  function X(a, b, c, d) {\n    return {\n      name: c || "",\n      J: a.J + " or " + b.J,\n      optional: !!d,\n      K: function K(e) {\n        return a.K(e) || b.K(e);\n      }\n    };\n  }\n\n  ;\n\n  function Y(a, b) {\n    for (var c in b) {\n      var d = b[c].name;\n      a[d] = Jo(d, a[c], b[c].j);\n    }\n  }\n\n  function Ko(a, b) {\n    for (var c in b) {\n      var d = b[c].name;\n      d !== c && Object.defineProperty(a, d, {\n        get: ua(function (e) {\n          return this[e];\n        }, c),\n        set: ua(function (e, f, g, h) {\n          vo(e, [g], [h], !0);\n          this[f] = h;\n        }, d, c, b[c].jb),\n        enumerable: !0\n      });\n    }\n  }\n\n  function Z(a, b, c, d) {\n    a[b] = Jo(b, c, d);\n  }\n\n  function Jo(a, b, c) {\n    function d() {\n      var g = Array.prototype.slice.call(arguments);\n      vo(e, c, g);\n      return b.apply(this, g);\n    }\n\n    if (!c) return b;\n    var e = Lo(a),\n        f;\n\n    for (f in b) {\n      d[f] = b[f];\n    }\n\n    for (f in b.prototype) {\n      d.prototype[f] = b.prototype[f];\n    }\n\n    return d;\n  }\n\n  function Lo(a) {\n    a = a.split(".");\n    return a[a.length - 1];\n  }\n\n  ;\n  Y(Fn.prototype, {\n    ib: {\n      name: "applyActionCode",\n      j: [V("code")]\n    },\n    Qa: {\n      name: "checkActionCode",\n      j: [V("code")]\n    },\n    mb: {\n      name: "confirmPasswordReset",\n      j: [V("code"), V("newPassword")]\n    },\n    dc: {\n      name: "createUserWithEmailAndPassword",\n      j: [V("email"), V("password")]\n    },\n    gc: {\n      name: "fetchSignInMethodsForEmail",\n      j: [V("email")]\n    },\n    qa: {\n      name: "getRedirectResult",\n      j: []\n    },\n    Ac: {\n      name: "isSignInWithEmailLink",\n      j: [V("emailLink")]\n    },\n    Gc: {\n      name: "onAuthStateChanged",\n      j: [X(W(), yo(), "nextOrObserver"), yo("opt_error", !0), yo("opt_completed", !0)]\n    },\n    Hc: {\n      name: "onIdTokenChanged",\n      j: [X(W(), yo(), "nextOrObserver"), yo("opt_error", !0), yo("opt_completed", !0)]\n    },\n    ub: {\n      name: "sendPasswordResetEmail",\n      j: [V("email"), X(W("opt_actionCodeSettings", !0), zo(null, !0), "opt_actionCodeSettings", !0)]\n    },\n    vb: {\n      name: "sendSignInLinkToEmail",\n      j: [V("email"), W("actionCodeSettings")]\n    },\n    wb: {\n      name: "setPersistence",\n      j: [V("persistence")]\n    },\n    Rc: {\n      name: "signInAndRetrieveDataWithCredential",\n      j: [Do()]\n    },\n    yb: {\n      name: "signInAnonymously",\n      j: []\n    },\n    Za: {\n      name: "signInWithCredential",\n      j: [Do()]\n    },\n    Sc: {\n      name: "signInWithCustomToken",\n      j: [V("token")]\n    },\n    Tc: {\n      name: "signInWithEmailAndPassword",\n      j: [V("email"), V("password")]\n    },\n    Uc: {\n      name: "signInWithEmailLink",\n      j: [V("email"), V("emailLink", !0)]\n    },\n    Vc: {\n      name: "signInWithPhoneNumber",\n      j: [V("phoneNumber"), Io()]\n    },\n    Wc: {\n      name: "signInWithPopup",\n      j: [Fo()]\n    },\n    Xc: {\n      name: "signInWithRedirect",\n      j: [Fo()]\n    },\n    cd: {\n      name: "updateCurrentUser",\n      j: [X(function (a) {\n        return {\n          name: "user",\n          J: "an instance of Firebase User",\n          optional: !!a,\n          K: function K(b) {\n            return !!(b && b instanceof Jm);\n          }\n        };\n      }(), zo(), "user")]\n    },\n    zb: {\n      name: "signOut",\n      j: []\n    },\n    toJSON: {\n      name: "toJSON",\n      j: [V(null, !0)]\n    },\n    ed: {\n      name: "useDeviceLanguage",\n      j: []\n    },\n    fd: {\n      name: "useEmulator",\n      j: [V("url")]\n    },\n    hd: {\n      name: "verifyPasswordResetCode",\n      j: [V("code")]\n    }\n  });\n  Ko(Fn.prototype, {\n    lc: {\n      name: "languageCode",\n      jb: X(V(), zo(), "languageCode")\n    },\n    ti: {\n      name: "tenantId",\n      jb: X(V(), zo(), "tenantId")\n    }\n  });\n  Fn.Persistence = Sk;\n  Fn.Persistence.LOCAL = "local";\n  Fn.Persistence.SESSION = "session";\n  Fn.Persistence.NONE = "none";\n  Y(Jm.prototype, {\n    "delete": {\n      name: "delete",\n      j: []\n    },\n    nc: {\n      name: "getIdTokenResult",\n      j: [xo("opt_forceRefresh", !0)]\n    },\n    I: {\n      name: "getIdToken",\n      j: [xo("opt_forceRefresh", !0)]\n    },\n    Bc: {\n      name: "linkAndRetrieveDataWithCredential",\n      j: [Do()]\n    },\n    pb: {\n      name: "linkWithCredential",\n      j: [Do()]\n    },\n    Cc: {\n      name: "linkWithPhoneNumber",\n      j: [V("phoneNumber"), Io()]\n    },\n    Dc: {\n      name: "linkWithPopup",\n      j: [Fo()]\n    },\n    Ec: {\n      name: "linkWithRedirect",\n      j: [Fo()]\n    },\n    Kc: {\n      name: "reauthenticateAndRetrieveDataWithCredential",\n      j: [Do()]\n    },\n    sb: {\n      name: "reauthenticateWithCredential",\n      j: [Do()]\n    },\n    Lc: {\n      name: "reauthenticateWithPhoneNumber",\n      j: [V("phoneNumber"), Io()]\n    },\n    Mc: {\n      name: "reauthenticateWithPopup",\n      j: [Fo()]\n    },\n    Nc: {\n      name: "reauthenticateWithRedirect",\n      j: [Fo()]\n    },\n    reload: {\n      name: "reload",\n      j: []\n    },\n    tb: {\n      name: "sendEmailVerification",\n      j: [X(W("opt_actionCodeSettings", !0), zo(null, !0), "opt_actionCodeSettings", !0)]\n    },\n    toJSON: {\n      name: "toJSON",\n      j: [V(null, !0)]\n    },\n    bd: {\n      name: "unlink",\n      j: [V("provider")]\n    },\n    Ab: {\n      name: "updateEmail",\n      j: [V("email")]\n    },\n    Bb: {\n      name: "updatePassword",\n      j: [V("password")]\n    },\n    dd: {\n      name: "updatePhoneNumber",\n      j: [Do("phone")]\n    },\n    Cb: {\n      name: "updateProfile",\n      j: [W("profile")]\n    },\n    Db: {\n      name: "verifyBeforeUpdateEmail",\n      j: [V("email"), X(W("opt_actionCodeSettings", !0), zo(null, !0), "opt_actionCodeSettings", !0)]\n    }\n  });\n  Y(Yn.prototype, {\n    execute: {\n      name: "execute"\n    },\n    render: {\n      name: "render"\n    },\n    reset: {\n      name: "reset"\n    },\n    getResponse: {\n      name: "getResponse"\n    }\n  });\n  Y(Xn.prototype, {\n    execute: {\n      name: "execute"\n    },\n    render: {\n      name: "render"\n    },\n    reset: {\n      name: "reset"\n    },\n    getResponse: {\n      name: "getResponse"\n    }\n  });\n  Y(D.prototype, {\n    na: {\n      name: "finally"\n    },\n    s: {\n      name: "catch"\n    },\n    then: {\n      name: "then"\n    }\n  });\n  Ko(fm.prototype, {\n    appVerificationDisabled: {\n      name: "appVerificationDisabledForTesting",\n      jb: xo("appVerificationDisabledForTesting")\n    }\n  });\n  Y(gm.prototype, {\n    confirm: {\n      name: "confirm",\n      j: [V("verificationCode")]\n    }\n  });\n  Z(Cg, "fromJSON", function (a) {\n    a = "string" === typeof a ? JSON.parse(a) : a;\n\n    for (var b, c = [Ng, eh, lh, Kg], d = 0; d < c.length; d++) {\n      if (b = c[d](a)) return b;\n    }\n\n    return null;\n  }, [X(V(), W(), "json")]);\n  Z($g, "credential", function (a, b) {\n    return new Zg(a, b);\n  }, [V("email"), V("password")]);\n  Y(Zg.prototype, {\n    w: {\n      name: "toJSON",\n      j: [V(null, !0)]\n    }\n  });\n  Y(Rg.prototype, {\n    Ca: {\n      name: "addScope",\n      j: [V("scope")]\n    },\n    Ka: {\n      name: "setCustomParameters",\n      j: [W("customOAuthParameters")]\n    }\n  });\n  Z(Rg, "credential", Sg, [X(V(), W(), "token")]);\n  Z($g, "credentialWithLink", fh, [V("email"), V("emailLink")]);\n  Y(Tg.prototype, {\n    Ca: {\n      name: "addScope",\n      j: [V("scope")]\n    },\n    Ka: {\n      name: "setCustomParameters",\n      j: [W("customOAuthParameters")]\n    }\n  });\n  Z(Tg, "credential", Ug, [X(V(), W(), "token")]);\n  Y(Vg.prototype, {\n    Ca: {\n      name: "addScope",\n      j: [V("scope")]\n    },\n    Ka: {\n      name: "setCustomParameters",\n      j: [W("customOAuthParameters")]\n    }\n  });\n  Z(Vg, "credential", Wg, [X(V(), X(W(), zo()), "idToken"), X(V(), zo(), "accessToken", !0)]);\n  Y(Xg.prototype, {\n    Ka: {\n      name: "setCustomParameters",\n      j: [W("customOAuthParameters")]\n    }\n  });\n  Z(Xg, "credential", Yg, [X(V(), W(), "token"), V("secret", !0)]);\n  Y(Qg.prototype, {\n    Ca: {\n      name: "addScope",\n      j: [V("scope")]\n    },\n    credential: {\n      name: "credential",\n      j: [X(V(), X(W(), zo()), "optionsOrIdToken"), X(V(), zo(), "accessToken", !0)]\n    },\n    Ka: {\n      name: "setCustomParameters",\n      j: [W("customOAuthParameters")]\n    }\n  });\n  Y(Lg.prototype, {\n    w: {\n      name: "toJSON",\n      j: [V(null, !0)]\n    }\n  });\n  Y(Fg.prototype, {\n    w: {\n      name: "toJSON",\n      j: [V(null, !0)]\n    }\n  });\n  Z(mh, "credential", qh, [V("verificationId"), V("verificationCode")]);\n  Y(mh.prototype, {\n    eb: {\n      name: "verifyPhoneNumber",\n      j: [X(V(), function (a, b) {\n        return {\n          name: a || "phoneInfoOptions",\n          J: "valid phone info options",\n          optional: !!b,\n          K: function K(c) {\n            return c ? c.session && c.phoneNumber ? Go(c.session, Ag) && "string" === typeof c.phoneNumber : c.session && c.multiFactorHint ? Go(c.session, Bg) && Ho(c.multiFactorHint) : c.session && c.multiFactorUid ? Go(c.session, Bg) && "string" === typeof c.multiFactorUid : c.phoneNumber ? "string" === typeof c.phoneNumber : !1 : !1;\n          }\n        };\n      }(), "phoneInfoOptions"), Io()]\n    }\n  });\n  Y(hh.prototype, {\n    w: {\n      name: "toJSON",\n      j: [V(null, !0)]\n    }\n  });\n  Y(t.prototype, {\n    toJSON: {\n      name: "toJSON",\n      j: [V(null, !0)]\n    }\n  });\n  Y(zh.prototype, {\n    toJSON: {\n      name: "toJSON",\n      j: [V(null, !0)]\n    }\n  });\n  Y(yh.prototype, {\n    toJSON: {\n      name: "toJSON",\n      j: [V(null, !0)]\n    }\n  });\n  Y(mm.prototype, {\n    toJSON: {\n      name: "toJSON",\n      j: [V(null, !0)]\n    }\n  });\n  Y(jm.prototype, {\n    Qc: {\n      name: "resolveSignIn",\n      j: [Eo()]\n    }\n  });\n  Y(um.prototype, {\n    Qb: {\n      name: "getSession",\n      j: []\n    },\n    ec: {\n      name: "enroll",\n      j: [Eo(), V("displayName", !0)]\n    },\n    ad: {\n      name: "unenroll",\n      j: [X({\n        name: "multiFactorInfo",\n        J: "a valid multiFactorInfo",\n        optional: !1,\n        K: Ho\n      }, V(), "multiFactorInfoIdentifier")]\n    }\n  });\n  Y(uo.prototype, {\n    clear: {\n      name: "clear",\n      j: []\n    },\n    render: {\n      name: "render",\n      j: []\n    },\n    verify: {\n      name: "verify",\n      j: []\n    }\n  });\n  Z(Kf, "parseLink", Sf, [V("link")]);\n  Z(eo, "assertion", function (a) {\n    return new sm(a);\n  }, [Do("phone")]);\n\n  (function () {\n    if ("undefined" !== typeof _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"] && _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].INTERNAL && _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].INTERNAL.registerComponent) {\n      var a = {\n        ActionCodeInfo: {\n          Operation: {\n            EMAIL_SIGNIN: Bf,\n            PASSWORD_RESET: "PASSWORD_RESET",\n            RECOVER_EMAIL: "RECOVER_EMAIL",\n            REVERT_SECOND_FACTOR_ADDITION: Df,\n            VERIFY_AND_CHANGE_EMAIL: Cf,\n            VERIFY_EMAIL: "VERIFY_EMAIL"\n          }\n        },\n        Auth: Fn,\n        AuthCredential: Cg,\n        Error: t\n      };\n      Z(a, "EmailAuthProvider", $g, []);\n      Z(a, "FacebookAuthProvider", Rg, []);\n      Z(a, "GithubAuthProvider", Tg, []);\n      Z(a, "GoogleAuthProvider", Vg, []);\n      Z(a, "TwitterAuthProvider", Xg, []);\n      Z(a, "OAuthProvider", Qg, [V("providerId")]);\n      Z(a, "SAMLAuthProvider", Pg, [V("providerId")]);\n      Z(a, "PhoneAuthProvider", mh, [Bo()]);\n      Z(a, "RecaptchaVerifier", uo, [X(V(), Ao(), "recaptchaContainer"), W("recaptchaParameters", !0), Co()]);\n      Z(a, "ActionCodeURL", Kf, []);\n      Z(a, "PhoneMultiFactorGenerator", eo, []);\n      _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].INTERNAL.registerComponent({\n        name: "auth",\n        instanceFactory: function instanceFactory(b) {\n          b = b.getProvider("app").getImmediate();\n          return new Fn(b);\n        },\n        multipleInstances: !1,\n        serviceProps: a,\n        instantiationMode: "LAZY",\n        type: "PUBLIC"\n      });\n      _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].INTERNAL.registerComponent({\n        name: "auth-internal",\n        instanceFactory: function instanceFactory(b) {\n          b = b.getProvider("auth").getImmediate();\n          return {\n            getUid: q(b.getUid, b),\n            getToken: q(b.mc, b),\n            addAuthTokenListener: q(b.cc, b),\n            removeAuthTokenListener: q(b.Oc, b)\n          };\n        },\n        multipleInstances: !1,\n        instantiationMode: "LAZY",\n        type: "PRIVATE"\n      });\n      _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].registerVersion("@firebase/auth", "0.15.2");\n      _firebase_app__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].INTERNAL.extendNamespace({\n        User: Jm\n      });\n    } else throw Error("Cannot find the firebase namespace; be sure to include firebase-app.js before this library.");\n  })();\n}).apply(typeof global !== \'undefined\' ? global : typeof self !== \'undefined\' ? self : typeof window !== \'undefined\' ? window : {});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("yLpj")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///t6oF\n')}}]);